/*******************************************************************************
**  FILE-NAME: Fbl_SharedCfg.h                                                **
**                                                                            **
**  MODULE-NAME: AUTOSAR FBL Module                                           **
**                                                                            **
**  NOTE: This file is auto generated, do not edit this file manually.        **
**                                                                            **
********************************************************************************

********************************************************************************
**                      Generation Tool Information                           **
********************************************************************************
**  Tool Version: 1.13.1.0                                                       **
**                                                                            **
**  Change History: Refer log file (use -l option to generate log file)       **
**                                                                            **
********************************************************************************
**                      File Generation Information                           **
*******************************************************************************/
/*
 * INPUT FILE:    Configuration\Ecu\Ecud_Fbl.arxml
 * GENERATED ON: The time-stamp is removed
 */
#ifndef FBL_SHAREDCFG_H
#define FBL_SHAREDCFG_H

/*******************************************************************************
**                              Include Section                               **
*******************************************************************************/
#include "Std_Types.h"

/*******************************************************************************
**                             Macro Definition                               **
*******************************************************************************/
/**
 * Shared definition information
 */
/* Value of security key */
#define FBL_SECURITY_KEY_VALUE                                    (0x90482442UL)
/* Value of cpd pass key */
#define FBL_CPD_KEY_VALUE                                         (0x19801217UL)
/* Value of startup command */
#define FBL_STARTUP_COMMAND_VALUE                                 (0xA5430911UL)
/* Macro to get startup command address */
#define FBL_STARTUP_COMMAND_PTR           ((uint32*)FBL_STARTUP_COMMAND_ADDRESS)
/* Macros to access 'Common RAM' elements */
#define FBL_COMMON_RAM_PTR        ((Fbl_SharedCommonRAM*)FBL_COMMON_RAM_ADDRESS)

/*******************************************************************************
**                              Generated Data                                **
*******************************************************************************/

#define FBL_STARTUP_COMMAND_ADDRESS                               (0x7003BFF0UL)
#define FBL_COMMON_RAM_ADDRESS                                    (0x7003BFF4UL)
#define FBL_ERASE_SECTOR_NUM                                                (2U)

/* Number of CRC area for ASW modules */
#define ASW_CRC_AREA_NUMBER                                                  (1)

#define START_ADDR                                                         (0UL)
#define FBL_START_ADDR                                            (0x80000000UL)
#define FBL_END_ADDR                                              (0x8001FFFFUL)
#define END_ADDR                                                           (0UL)
#define FBL_SW_MODULE_INFO_ADDR                ((Fbl_SwModuleInfo*)0x80000020UL)
#define SW_MODULE_INFO_ADDR                             ((Fbl_SwModuleInfo*)0UL)
#define FBL_SHARED_DATA_ADDR                                      (0x80000030UL)
#define SPECIAL_DATA_ADDR                                                  (0UL)
#define FBL_CRC_INFO_ADDR                           ((Fbl_CrcInfo*)0x80000100UL)
#define CRC_INFO_ADDR                                        ((Fbl_CrcInfo*)0UL)

#define MAIN_SW_START_ADDR                                        (0x80080000UL)
#define MAIN_SW_END_ADDR                                          (0x80FFFFFFUL)
#define MAIN_SW_SW_MODULE_INFO_ADDR            ((Fbl_SwModuleInfo*)0x80080020UL)
#define MAIN_SW_SECURITY_KEY_ADDR                                 (0x80080200UL)
#define MAIN_SW_CRC_INFO_ADDR                       ((Fbl_CrcInfo*)0x80080100UL)

#define CUSTOMER_ID                                                      (0x02U)
#define PRODUCT_ID                                                       (0x00U)
#define PRODUCT_VARIANT                                                  (0x00U)
#define SW_VERSION                                                       (0x01U)
#define INTERMEDIATE_SW_VERSION                                          (0x00U)
#define SYNCHRO1                                                         (0x00U)
#define SYNCHRO2                                                         (0x00U)
#define BUILD_YEAR                                                     (0x2019U)
#define BUILD_MONTH                                                      (0x08U)
#define BUILD_DAY                                                        (0x01U)

/*******************************************************************************
**                                Structures                                  **
*******************************************************************************/
typedef struct
{
  /* identification according to the naming rule */
  const uint8 customerId;
  const uint8 productId;
  const uint8 productVariant;
  const uint8 swVersion;
  const uint8 intermediatSwVersion;
  const uint8 synchro1;
  const uint8 synchro2;
  /* Stuffing byte, required due to alignement contraints */
  const uint8 reserved;
  /* Build date */
  const uint8 BuildDay;
  const uint8 BuildMonth;
  const uint16 BuildYear;
  /* CRC */
  const uint16 crcValue;
  const uint16 crcNumberOfArea;
} Fbl_SwModuleInfo;

typedef struct
{
  uint32 startAddr;
  uint32 endAddr;
} Fbl_CrcArea;

typedef struct
{
  uint16 crcValue;
  uint16 numberOfCrcAreas;
  Fbl_CrcArea crcArea[ASW_CRC_AREA_NUMBER];
} Fbl_CrcInfo;

typedef struct
{
  const uint32            startAddress; /* Address of first byte */
  const uint32            endAddress;   /* Address of last byte  */
} Fbl_SwSigningSkipArea;

typedef struct
{
  const uint32            signatureAddress;
  const uint32            ecuSwUnit;
  const Fbl_SwSigningSkipArea* swSigningSkipAreaInfo;
  const uint8             swSkipAreaNum;
} Fbl_SwModuleSubInfo;

typedef struct
{
  const uint32            startAddress; /* Address of first byte */
  const uint32            endAddress;   /* Address of last byte  */
  const uint32*           skAddress;
  const Fbl_SwModuleInfo* swModuleInfo;
  const Fbl_CrcInfo*      crcInfo;
  const uint8             logicalID;
  const uint8             accessType;
} Fbl_SwModule;

typedef struct
{
  const Fbl_SwModuleInfo* swModuleInfo;
  const Fbl_CrcArea*      crcArea;
} Fbl_SharedDataInFbl;

typedef struct
{
  const uint16*           CRCA001_8;          /* Pointer to the CRC16 algorithm table */
  const Fbl_SwModule*     swModuleMapping;    /* Pointer to the SW mapping Table */
  const uint8             numberOfSwMdoule;   /* Number of entries in pcs_SwMap : not used */
  const uint8*            diagServPublicKey;  /* Pointer to the public key for secure access */
  const uint8*            imageServPublicKey; /* Pointer to the public key for secure flash */
} Fbl_SharedData;

typedef struct
{
  const uint32            securityKey;        /* Security Key */
  const Fbl_SwModuleInfo* swModuleInfo;
  const Fbl_CrcArea*      crcArea;
} Fbl_SharedDataInMainSW;

/* 'Common RAM' is used to share dynamic information. This is shared RAM memory
 * in between Bootloader and application.
 */
typedef struct
{
  /* Tester identifier or source address */
  uint16 TesterSourceAddr;
  /* Reserved for alignment */
  uint16 reserved;
  /* Protocol on which the request has been received */
  uint8 ProtocolId;
  /* Service identifier of the received request */
  uint8 Sid;
  /* Subfunction of the received request */
  uint8 SubFncId;
  /* Reprogramming request flag */
  uint8 ReprogramingRequest;
  /* Status for application indicating has been updated or not */
  uint8 ApplUpdated;
  /* Indicate if expected to send response after reset */
  uint8 ResponseRequired;
  /* Jump from FBL */
  uint8 JumpFromBootloader;
  /* Level of granted security to connected tester */
  uint8 SecLvInfo;
  /* Reprogramming of ECU requested or not */
  uint8 SecAccessInvalidCount;
} Fbl_SharedCommonRAM;

/*******************************************************************************
**                        Global Function Declaration                         **
*******************************************************************************/
extern void Fbl_SetStartupCommand(uint32 command);

extern uint32* Fbl_GetProgConditionsAddress(void);

extern Fbl_SharedCommonRAM* Fbl_GetProgConditions(void);

extern void Fbl_SetProgConditions(Fbl_SharedCommonRAM* progCondition);

#endif /* FBL_SHAREDCFG_H */

/*******************************************************************************
**                                End of File                                 **
*******************************************************************************/
