<?xml version="1.0" encoding="iso-8859-1" standalone="no" ?>
<?xml-stylesheet type="text/xsl" href="t32transform.xsl"?>
<TRACE32 file="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Gen\20210524_TRACE32_20_02\Failsafe-TestSpec_RS4_Temp4_210518\Report\Failsafe_v28_UID_001\Test\SWC_Failsafe\func-p-80005890-800059dd.xml">
	<coverage>
		<COVerage.EXPORT.ListLine ts="1621823162" t32ver="R.2020.09.000128638" t32pv="TRICORE" cpu="TC397XE" metric="object">
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\Rte_SWC_Diag</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>-</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>0</never>
				<bytes>638</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_HWFailure</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>16</never>
				<bytes>236</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\SWC_Failsafe</tree>
				<cov>partial</cov>
				<exec metric="object">0.600%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>16</never>
				<bytes>1666</bytes>
				<bytesok>10</bytesok>
				<function>
					<addrFrom>P:80005890</addrFrom>
					<addrTo>P:800059DD</addrTo>
					<tree uid="p-80005890-800059dd">\\Test\SWC_Failsafe\FS_UpdatePrecond</tree>
					<cov>never</cov>
					<exec metric="object">0.000%</exec>
					<branches>0.000%</branches>
					<ok>0</ok>
					<taken>0</taken>
					<nottaken>0</nottaken>
					<never>23</never>
					<bytes>334</bytes>
					<bytesok>0</bytesok>
					<line>
						<addrFrom>P:80005890</addrFrom>
						<addrTo>P:800058BB</addrTo>
						<tree>SWC_Failsafe.c \100--105</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>3</never>
						<bytes>44</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>multiple</addrFrom>
						<tree>SWC_Failsafe.c \106--106</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800058C0</addrFrom>
						<addrTo>P:800058C1</addrTo>
						<tree>SWC_Failsafe.c \107--109</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>2</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>multiple</addrFrom>
						<tree>SWC_Failsafe.c \110--112</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>8</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800058D8</addrFrom>
						<addrTo>P:800058F3</addrTo>
						<tree>SWC_Failsafe.c \113--113</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>28</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>multiple</addrFrom>
						<tree>SWC_Failsafe.c \114--114</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>10</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800058F8</addrFrom>
						<addrTo>P:800058F9</addrTo>
						<tree>SWC_Failsafe.c \115--118</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>2</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800058FA</addrFrom>
						<addrTo>P:80005903</addrTo>
						<tree>SWC_Failsafe.c \119--166</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>10</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>multiple</addrFrom>
						<tree>SWC_Failsafe.c \167--167</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>2</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>multiple</addrFrom>
						<tree>SWC_Failsafe.c \168--168</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>30</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>multiple</addrFrom>
						<tree>SWC_Failsafe.c \169--170</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005944</addrFrom>
						<addrTo>P:80005947</addrTo>
						<tree>SWC_Failsafe.c \171--171</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005948</addrFrom>
						<addrTo>P:8000594D</addrTo>
						<tree>SWC_Failsafe.c \172--174</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000594E</addrFrom>
						<addrTo>P:80005951</addrTo>
						<tree>SWC_Failsafe.c \175--175</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>multiple</addrFrom>
						<tree>SWC_Failsafe.c \176--177</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005956</addrFrom>
						<addrTo>P:80005959</addrTo>
						<tree>SWC_Failsafe.c \178--179</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000595A</addrFrom>
						<addrTo>P:80005969</addrTo>
						<tree>SWC_Failsafe.c \180--183</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>4</never>
						<bytes>16</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000596A</addrFrom>
						<addrTo>P:80005971</addrTo>
						<tree>SWC_Failsafe.c \184--184</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>2</never>
						<bytes>8</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005972</addrFrom>
						<addrTo>P:80005975</addrTo>
						<tree>SWC_Failsafe.c \185--185</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005976</addrFrom>
						<addrTo>P:80005977</addrTo>
						<tree>SWC_Failsafe.c \186--190</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>2</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005978</addrFrom>
						<addrTo>P:8000597B</addrTo>
						<tree>SWC_Failsafe.c \191--191</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000597C</addrFrom>
						<addrTo>P:8000597D</addrTo>
						<tree>SWC_Failsafe.c \192--194</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>2</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000597E</addrFrom>
						<addrTo>P:8000598B</addrTo>
						<tree>SWC_Failsafe.c \195--198</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>2</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000598C</addrFrom>
						<addrTo>P:8000598F</addrTo>
						<tree>SWC_Failsafe.c \199--199</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005990</addrFrom>
						<addrTo>P:80005997</addrTo>
						<tree>SWC_Failsafe.c \200--201</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>2</never>
						<bytes>8</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000599A</addrFrom>
						<addrTo>P:800059A3</addrTo>
						<tree>SWC_Failsafe.c \202--206</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>10</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800059A4</addrFrom>
						<addrTo>P:800059AB</addrTo>
						<tree>SWC_Failsafe.c \207--207</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>8</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800059AC</addrFrom>
						<addrTo>P:800059B3</addrTo>
						<tree>SWC_Failsafe.c \208--208</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>8</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800059B4</addrFrom>
						<addrTo>P:800059B7</addrTo>
						<tree>SWC_Failsafe.c \209--209</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800059B8</addrFrom>
						<addrTo>P:800059C3</addrTo>
						<tree>SWC_Failsafe.c \210--212</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800059C4</addrFrom>
						<addrTo>P:800059CF</addrTo>
						<tree>SWC_Failsafe.c \213--213</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800059D0</addrFrom>
						<addrTo>P:800059DB</addrTo>
						<tree>SWC_Failsafe.c \214--214</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800059DC</addrFrom>
						<addrTo>P:800059DD</addrTo>
						<tree>SWC_Failsafe.c \215--215</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>2</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005904</addrFrom>
						<addrTo>P:8000590B</addrTo>
						<tree>SWC_Failsafe.h \739--758</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.h</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>8</bytes>
						<bytesok>0</bytesok>
					</line>
					<total>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>19</never>
						<bytes>334</bytes>
						<bytesok>0</bytesok>
					</total>
				</function>
				<total>
					<cov>never</cov>
					<exec metric="object">0.000%</exec>
					<branches>0.000%</branches>
					<ok>0</ok>
					<taken>0</taken>
					<nottaken>0</nottaken>
					<never>23</never>
					<bytes>334</bytes>
					<bytesok>0</bytesok>
				</total>
			</module>
			<module>
				<addrFrom>P:80002DEA</addrFrom>
				<addrTo>P:80002F83</addrTo>
				<tree>\\Test\FS_BatteryVoltage</tree>
				<cov>partial</cov>
				<exec metric="object">59.512%</exec>
				<branches>52.000%</branches>
				<ok>8</ok>
				<taken>3</taken>
				<nottaken>7</nottaken>
				<never>7</never>
				<bytes>410</bytes>
				<bytesok>244</bytesok>
			</module>
			<module>
				<addrFrom>P:80002F84</addrFrom>
				<addrTo>P:800030BB</addrTo>
				<tree>\\Test\FS_CANBusOff</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>17</never>
				<bytes>312</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_CANTimeout</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>350</never>
				<bytes>2458</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_InvalidSignal</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>350</never>
				<bytes>6758</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_SWFailure</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>17</never>
				<bytes>304</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>5</never>
				<bytes>806</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart_tc1</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>402</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart_tc2</tree>
				<cov>partial</cov>
				<exec metric="object">81.094%</exec>
				<branches>87.500%</branches>
				<ok>3</ok>
				<taken>0</taken>
				<nottaken>1</nottaken>
				<never>0</never>
				<bytes>402</bytes>
				<bytesok>326</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart_tc3</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_main</tree>
				<cov>partial</cov>
				<exec metric="object">27.835%</exec>
				<branches>31.818%</branches>
				<ok>1</ok>
				<taken>4</taken>
				<nottaken>1</nottaken>
				<never>5</never>
				<bytes>388</bytes>
				<bytesok>108</bytesok>
			</module>
			<module>
				<addrFrom>P:800065B6</addrFrom>
				<addrTo>P:8000674B</addrTo>
				<tree>\\Test\prost_cstart_tc4</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>P:8000674C</addrFrom>
				<addrTo>P:800068E1</addrTo>
				<tree>\\Test\prost_cstart_tc5</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>P:80006A62</addrFrom>
				<addrTo>P:80006A91</addrTo>
				<tree>\\Test\prost_stubs</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>2</never>
				<bytes>48</bytes>
				<bytesok>0</bytesok>
			</module>
			<total>
				<cov>partial</cov>
				<exec metric="object">4.287%</exec>
				<branches>2.412%</branches>
				<ok>12</ok>
				<taken>7</taken>
				<nottaken>9</nottaken>
				<never>801</never>
				<bytes>16046</bytes>
				<bytesok>688</bytesok>
			</total>
		</COVerage.EXPORT.ListLine>
	</coverage>
	<marker>
		<BookMark.EXPORT ts="1621823162" t32ver="R.2020.09.000128638" t32pv="TRICORE" cpu="TC397XE">
		</BookMark.EXPORT>
	</marker>
	<listing>
		<List.EXPORT ts="1621823162" t32ver="R.2020.09.000128638" t32pv="TRICORE" order="source">
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><line>100</line><src>}</src></hll>
				<hll><line>101</line><src></src></hll>
				<hll><line>102</line><src></src></hll>
				<hll><line>103</line><src>void FS_UpdatePrecond(void)</src></hll>
				<hll><line>104</line><src>{</src></hll>
				<hll><cov>never</cov><line>105</line><src>    if (((vol_grp[VOL_BAT] &gt; BAT_VOL_LOWER) &amp;&amp; (vol_grp[VOL_BAT] &lt; BAT_VOL_UPPER) &amp;&amp; (!bat_info.high.fault) &amp;&amp; (!bat_info.low.fault))) {</src></hll>
				<asm><cov>never</cov><addr>P:80005890</addr><code>29004091</code><label>FS_UpdatePrecond:                                                                                                                                                                                                                                               </label><mnemonic>movh.a    a2,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005894</addr><code>305222D9</code><mnemonic>lea       a2,[a2]0x4D2</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005898</addr><code>08C42F09</code><mnemonic>ld.hu     d15,[a2]0x4</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000589C</addr><code>FDCD7F1B</code><mnemonic>addi      d15,d15,#-0x2329</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058A0</addr><code>F0700F37</code><mnemonic>extr.u    d15,d15,0x0,#0x10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058A4</addr><code>01B5703B</code><mnemonic>mov       d0,#0x1B57</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058A8</addr><code>800C0F7F</code><mnemonic>jge.u     d15,d0,0x800058C0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058AC</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058B0</addr><code>706CFFD9</code><mnemonic>lea       a15,[a15]0x5EC</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058B4</addr><code>FF14</code><mnemonic>ld16.bu   d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058B6</addr><code>05EE</code><mnemonic>jnz16     d15,0x800058C0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058B8</addr><code>6F08</code><mnemonic>ld16.bu   d15,[a15]0x6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058BA</addr><code>03EE</code><mnemonic>jnz16     d15,0x800058C0</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c" type="multiple">
				<hll><cov>never</cov><line>106</line><src>        precond.is_norm_vol = TRUE;</src></hll>
				<asm><cov>never</cov><addr>P:800058BC</addr><code>01DA</code><mnemonic>mov16     d15,#0x1</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058BE</addr><code>023C</code><mnemonic>j16       0x800058C2</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058C2</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058C6</addr><code>A05AFFD9</code><mnemonic>lea       a15,[a15]0x69A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><line>107</line><src>    }</src></hll>
				<hll><line>108</line><src>    else {</src></hll>
				<hll><cov>never</cov><line>109</line><src>        precond.is_norm_vol = FALSE;</src></hll>
				<asm><cov>never</cov><addr>P:800058C0</addr><code>00DA</code><mnemonic>mov16     d15,#0x0</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c" type="multiple">
				<hll><line>110</line><src>    }</src></hll>
				<hll><line>111</line><src></src></hll>
				<hll><cov>never</cov><line>112</line><src>    if (vol_grp[VOL_IGN_FLAG] == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800058CA</addr><code>FF34</code><mnemonic>st16.b    [a15],d15</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058CE</addr><code>08C22F09</code><mnemonic>ld.hu     d15,[a2]0x2</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058D6</addr><code>11DE</code><mnemonic>jne16     d15,#0x1,0x800058F8</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><cov>never</cov><line>113</line><src>        if (++ign_on_tick &gt; MS2TICK(IGN_ON_DELAY)) {</src></hll>
				<asm><cov>never</cov><addr>P:800058D8</addr><code>29004091</code><mnemonic>movh.a    a2,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058DC</addr><code>A05822D9</code><mnemonic>lea       a2,[a2]0x698</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058E0</addr><code>08C02F09</code><mnemonic>ld.hu     d15,[a2]0x0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058E4</addr><code>1FC2</code><mnemonic>add16     d15,#0x1</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058E6</addr><code>2FB4</code><mnemonic>st16.h    [a2],d15</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058E8</addr><code>08C02F09</code><mnemonic>ld.hu     d15,[a2]0x0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058EC</addr><code>1012C03B</code><mnemonic>mov       d1,#0x12C</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058F0</addr><code>8005F17F</code><mnemonic>jge.u     d1,d15,0x800058FA</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c" type="multiple">
				<hll><cov>never</cov><line>114</line><src>            precond.is_3s_after_ign_on = TRUE;</src></hll>
				<asm><cov>never</cov><addr>P:800058CC</addr><code>F440</code><mnemonic>mov16.aa  a4,a15</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058D2</addr><code>04414009</code><mnemonic>ld.bu     d0,[+a4]0x1</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058F4</addr><code>1082</code><mnemonic>mov16     d0,#0x1</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058F6</addr><code>023C</code><mnemonic>j16       0x800058FA</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><line>115</line><src>        }</src></hll>
				<hll><line>116</line><src>    }</src></hll>
				<hll><line>117</line><src>    else if (vol_grp[VOL_IGN_FLAG] == FALSE) {</src></hll>
				<hll><cov>never</cov><line>118</line><src>        precond.is_3s_after_ign_on = FALSE;</src></hll>
				<asm><cov>never</cov><addr>P:800058F8</addr><code>00EA</code><mnemonic>cmovn16   d0,d15,#0x0</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><line>119</line><src>    }</src></hll>
				<hll><line>120</line><src>/* FIXME: Develop ign off precond after spec release</src></hll>
				<hll><line>121</line><src>    if ((precond.is_3s_after_ign_on == TRUE) &amp;&amp; (vol_grp[VOL_IGN_FLAG] == FALSE) &amp;&amp; (vol_grp[VOL_BAT] &gt; 0)) {</src></hll>
				<hll><line>122</line><src>        if (++ign_off_tick &lt;= MS2TICK(IGN_OFF_DELAY)){</src></hll>
				<hll><line>123</line><src>            precond.for_3min_after_ign_off = TRUE;</src></hll>
				<hll><line>124</line><src>        }</src></hll>
				<hll><line>125</line><src>        else {</src></hll>
				<hll><line>126</line><src>            precond.for_3min_after_ign_off = FALSE;</src></hll>
				<hll><line>127</line><src>        }</src></hll>
				<hll><line>128</line><src>    }</src></hll>
				<hll><line>129</line><src>*/</src></hll>
				<hll><line>130</line><src>#if CCAN == CANFD</src></hll>
				<hll><line>131</line><src>    #if VEH_TYPE == NORMAL</src></hll>
				<hll><line>132</line><src>        #define ENG_RUN_MSG EMS_02_10ms_POS</src></hll>
				<hll><line>133</line><src>        #define ENG_RUN_SIG ENG_EngSta</src></hll>
				<hll><line>134</line><src>        #define ISG_STA_SIG ENG_IsgSta</src></hll>
				<hll><line>135</line><src>        #define SCC_STA_SIG CF_ECU_SSC_STAT</src></hll>
				<hll><line>136</line><src>        #define ENG_RUN_VAL 3</src></hll>
				<hll><line>137</line><src>    #elif VEH_TYPE == EV</src></hll>
				<hll><line>138</line><src>        #define ENG_RUN_MSG VCU_01_10ms_POS</src></hll>
				<hll><line>139</line><src>        #define ENG_RUN_SIG VCU_EvDrvRdySta</src></hll>
				<hll><line>140</line><src>        #define ENG_RUN_VAL 1</src></hll>
				<hll><line>141</line><src>    #elif VEH_TYPE == HEV</src></hll>
				<hll><line>142</line><src>        #define ENG_RUN_MSG HCU_03_POS</src></hll>
				<hll><line>143</line><src>        #define ENG_RUN_SIG HCU_HevRdySta</src></hll>
				<hll><line>144</line><src>        #define ENG_RUN_VAL 1</src></hll>
				<hll><line>145</line><src>    #endif /* VEH_TYPE */</src></hll>
				<hll><line>146</line><src>#elif CCAN == HSCAN</src></hll>
				<hll><line>147</line><src>    #if VEH_TYPE == NORMAL</src></hll>
				<hll><line>148</line><src>        #define ENG_RUN_MSG EMS16_POS</src></hll>
				<hll><line>149</line><src>        #define ENG_RUN_SIG ENG_STAT</src></hll>
				<hll><line>150</line><src>        #define ISG_STA_SIG CF_Ems_IsgStat</src></hll>
				<hll><line>151</line><src>        #define SCC_STA_SIG CF_ECU_SSC_STAT</src></hll>
				<hll><line>152</line><src>        #define ENG_RUN_VAL 3</src></hll>
				<hll><line>153</line><src>    //FIXME : Update after EV HSCAN release</src></hll>
				<hll><line>154</line><src>    #elif VEH_TYPE == EV</src></hll>
				<hll><line>155</line><src>        #define ENG_RUN_MSG VCU_XX_POS</src></hll>
				<hll><line>156</line><src>        #define ENG_RUN_SIG CF_Vcu_EvRdy</src></hll>
				<hll><line>157</line><src>        #define ENG_RUN_VAL 1</src></hll>
				<hll><line>158</line><src>    //FIXME : Update after EV HSCAN release</src></hll>
				<hll><line>159</line><src>    #elif VEH_TYPE == HEV</src></hll>
				<hll><line>160</line><src>        #define ENG_RUN_MSG HCU_xx_POS</src></hll>
				<hll><line>161</line><src>        #define ENG_RUN_SIG CF_Hcu_HevRdy</src></hll>
				<hll><line>162</line><src>        #define ENG_RUN_VAL 1</src></hll>
				<hll><line>163</line><src>    #endif /* VEH_TYPE */</src></hll>
				<hll><line>164</line><src>#endif /* CCAN */</src></hll>
				<hll><line>165</line><src></src></hll>
				<hll><cov>never</cov><line>166</line><src>    if (is_valid_ems() == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800058FA</addr><code>4034</code><mnemonic>st16.b    [a4],d0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800058FC</addr><code>F860FF6D</code><mnemonic>call      0x800049BC</mnemonic><comment>is_valid_ems</comment></asm>
				<asm><cov>never</cov><addr>P:80005900</addr><code>804D12DF</code><mnemonic>jne       d2,#0x1,0x8000599A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c" type="multiple">
				<hll><cov>never</cov><line>167</line><src>        if (is_updated(CHASSIS_0, ENG_RUN_MSG) == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:8000590C</addr><code>00566F6F</code><mnemonic>jz.t      d15,#0x6,0x800059B8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005998</addr><code>0E3C</code><mnemonic>j16       0x800059B4</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c" type="multiple">
				<hll><cov>never</cov><line>168</line><src>            if (ref_sig.ENG_RUN_SIG == ENG_RUN_VAL || eng_first_rcv == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80005910</addr><code>69004091</code><mnemonic>movh.a    a6,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005914</addr><code>E03866D9</code><mnemonic>lea       a6,[a6]0x3B8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005918</addr><code>6740</code><mnemonic>mov16.aa  a7,a6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000591E</addr><code>49004091</code><mnemonic>movh.a    a4,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005926</addr><code>04427F09</code><mnemonic>ld.bu     d15,[+a7]0x2</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000592E</addr><code>706244D9</code><mnemonic>lea       a4,[a4]0x5E2</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005938</addr><code>4114</code><mnemonic>ld16.bu   d1,[a4]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000593C</addr><code>331E</code><mnemonic>jeq16     d15,#0x3,0x80005942</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000593E</addr><code>800E11DF</code><mnemonic>jne       d1,#0x1,0x8000595A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c" type="multiple">
				<hll><line>169</line><src>#if VEH_TYPE == NORMAL</src></hll>
				<hll><cov>never</cov><line>170</line><src>                if ((eng_run_cnt_phase1 == 0) &amp;&amp; (eng_first_rcv == FALSE)) {</src></hll>
				<asm><cov>never</cov><addr>P:80005922</addr><code>59004091</code><mnemonic>movh.a    a5,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005932</addr><code>806055D9</code><mnemonic>lea       a5,[a5]0x620</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000593A</addr><code>5254</code><mnemonic>ld16.w    d2,[a5]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005942</addr><code>23F6</code><mnemonic>jnz16     d2,0x80005948</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><cov>never</cov><line>171</line><src>                    eng_first_rcv = TRUE;</src></hll>
				<asm><cov>never</cov><addr>P:80005944</addr><code>118011AB</code><mnemonic>sel       d1,d1,d1,#0x1</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><line>172</line><src>                }                    </src></hll>
				<hll><line>173</line><src>#endif /* VEH_TYPE */</src></hll>
				<hll><cov>never</cov><line>174</line><src>                if (eng_run_cnt_phase1 &lt; MS2TICK(2000)) {</src></hll>
				<asm><cov>never</cov><addr>P:80005948</addr><code>C8DA</code><mnemonic>mov16     d15,#0xC8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000594A</addr><code>8004F27F</code><mnemonic>jge.u     d2,d15,0x80005952</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><cov>never</cov><line>175</line><src>                    eng_run_cnt_phase1++;        </src></hll>
				<asm><cov>never</cov><addr>P:8000594E</addr><code>12C2</code><mnemonic>add16     d2,#0x1</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005950</addr><code>173C</code><mnemonic>j16       0x8000597E</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c" type="multiple">
				<hll><line>176</line><src>                }</src></hll>
				<hll><cov>never</cov><line>177</line><src>                else if (eng_run_cnt_phase2 &lt; 3) {</src></hll>
				<asm><cov>never</cov><addr>P:8000591A</addr><code>29004091</code><mnemonic>movh.a    a2,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000592A</addr><code>806422D9</code><mnemonic>lea       a2,[a2]0x624</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005936</addr><code>2054</code><mnemonic>ld16.w    d0,[a2]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005952</addr><code>801630FF</code><mnemonic>jge.u     d0,#0x3,0x8000597E</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><line>178</line><src>                    eng_run_cnt_phase2++;</src></hll>
				<hll><cov>never</cov><line>179</line><src>                    eng_first_rcv = FALSE;</src></hll>
				<asm><cov>never</cov><addr>P:80005956</addr><code>0182</code><mnemonic>mov16     d1,#0x0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005958</addr><code>0D3C</code><mnemonic>j16       0x80005972</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><line>180</line><src>                }</src></hll>
				<hll><line>181</line><src>            }</src></hll>
				<hll><line>182</line><src>#if VEH_TYPE == NORMAL</src></hll>
				<hll><cov>never</cov><line>183</line><src>            else if (((ref_sig.ENG_RUN_SIG == 0) || (ref_sig.ENG_RUN_SIG == 2)) &amp;&amp; ((ref_sig.ISG_STA_SIG == 1) || (ref_sig.SCC_STA_SIG == 1))) {</src></hll>
				<asm><cov>never</cov><addr>P:8000595A</addr><code>7F14</code><mnemonic>ld16.bu   d15,[a7]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000595C</addr><code>036E</code><mnemonic>jz16      d15,0x80005962</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000595E</addr><code>7F14</code><mnemonic>ld16.bu   d15,[a7]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005960</addr><code>2B5E</code><mnemonic>jne16     d15,#0x2,0x80005976</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005962</addr><code>610C</code><mnemonic>ld16.bu   d15,[a6]0x1</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005964</addr><code>131E</code><mnemonic>jeq16     d15,#0x1,0x8000596A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005966</addr><code>670C</code><mnemonic>ld16.bu   d15,[a6]0x7</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005968</addr><code>175E</code><mnemonic>jne16     d15,#0x1,0x80005976</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><cov>never</cov><line>184</line><src>                if ((eng_run_cnt_phase1 == MS2TICK(2000)) &amp;&amp; (eng_run_cnt_phase2 &lt; 3)) {</src></hll>
				<asm><cov>never</cov><addr>P:8000596A</addr><code>C8DA</code><mnemonic>mov16     d15,#0xC8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000596C</addr><code>297E</code><mnemonic>jne16     d15,d2,0x8000597E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000596E</addr><code>800830FF</code><mnemonic>jge.u     d0,#0x3,0x8000597E</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><cov>never</cov><line>185</line><src>                    eng_run_cnt_phase2++;</src></hll>
				<asm><cov>never</cov><addr>P:80005972</addr><code>10C2</code><mnemonic>add16     d0,#0x1</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005974</addr><code>053C</code><mnemonic>j16       0x8000597E</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><line>186</line><src>                }</src></hll>
				<hll><line>187</line><src>            }</src></hll>
				<hll><line>188</line><src>#endif /* VEH_TYPE */</src></hll>
				<hll><line>189</line><src>            else {</src></hll>
				<hll><cov>never</cov><line>190</line><src>                if (eng_run_cnt_phase2 &gt; 0) {</src></hll>
				<asm><cov>never</cov><addr>P:80005976</addr><code>0376</code><mnemonic>jz16      d0,0x8000597C</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><cov>never</cov><line>191</line><src>                    eng_run_cnt_phase2--;</src></hll>
				<asm><cov>never</cov><addr>P:80005978</addr><code>F0C2</code><mnemonic>add16     d0,#-0x1</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000597A</addr><code>023C</code><mnemonic>j16       0x8000597E</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><line>192</line><src>                }</src></hll>
				<hll><line>193</line><src>                else {</src></hll>
				<hll><cov>never</cov><line>194</line><src>                    eng_run_cnt_phase1 = 0;</src></hll>
				<asm><cov>never</cov><addr>P:8000597C</addr><code>0282</code><mnemonic>mov16     d2,#0x0</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><line>195</line><src>                }</src></hll>
				<hll><line>196</line><src>            }</src></hll>
				<hll><line>197</line><src></src></hll>
				<hll><cov>never</cov><line>198</line><src>            if ((eng_run_cnt_phase1 == MS2TICK(2000)) &amp;&amp; (eng_run_cnt_phase2 == 3)) {</src></hll>
				<asm><cov>never</cov><addr>P:8000597E</addr><code>C8DA</code><mnemonic>mov16     d15,#0xC8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005980</addr><code>5274</code><mnemonic>st16.w    [a5],d2</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005982</addr><code>4134</code><mnemonic>st16.b    [a4],d1</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005984</addr><code>2074</code><mnemonic>st16.w    [a2],d0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005986</addr><code>257E</code><mnemonic>jne16     d15,d2,0x80005990</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005988</addr><code>800430DF</code><mnemonic>jne       d0,#0x3,0x80005990</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><cov>never</cov><line>199</line><src>                precond.is_eng_run = TRUE;</src></hll>
				<asm><cov>never</cov><addr>P:8000598C</addr><code>01DA</code><mnemonic>mov16     d15,#0x1</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000598E</addr><code>143C</code><mnemonic>j16       0x800059B6</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><line>200</line><src>            }</src></hll>
				<hll><cov>never</cov><line>201</line><src>            else if ((eng_run_cnt_phase1 == 0) || (eng_run_cnt_phase2 == 0)) {</src></hll>
				<asm><cov>never</cov><addr>P:80005990</addr><code>001202DF</code><mnemonic>jeq       d2,#0x0,0x800059B4</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005994</addr><code>801200DF</code><mnemonic>jne       d0,#0x0,0x800059B8</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><line>202</line><src>                precond.is_eng_run = FALSE;</src></hll>
				<hll><line>203</line><src>            }</src></hll>
				<hll><line>204</line><src>        }</src></hll>
				<hll><line>205</line><src>    } else {</src></hll>
				<hll><cov>never</cov><line>206</line><src>        eng_run_cnt_phase1 = 0;</src></hll>
				<asm><cov>never</cov><addr>P:8000599A</addr><code>29004091</code><mnemonic>movh.a    a2,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000599E</addr><code>00DA</code><mnemonic>mov16     d15,#0x0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800059A0</addr><code>80602F59</code><mnemonic>st.w      [a2]0x620,d15</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><cov>never</cov><line>207</line><src>        eng_run_cnt_phase2 = 0;</src></hll>
				<asm><cov>never</cov><addr>P:800059A4</addr><code>29004091</code><mnemonic>movh.a    a2,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800059A8</addr><code>80642F59</code><mnemonic>st.w      [a2]0x624,d15</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><cov>never</cov><line>208</line><src>        eng_first_rcv = FALSE;</src></hll>
				<asm><cov>never</cov><addr>P:800059AC</addr><code>29004091</code><mnemonic>movh.a    a2,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800059B0</addr><code>70622FE9</code><mnemonic>st.b      [a2]0x5E2,d15</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><cov>never</cov><line>209</line><src>        precond.is_eng_run = FALSE;</src></hll>
				<asm><cov>never</cov><addr>P:800059B4</addr><code>00DA</code><mnemonic>mov16     d15,#0x0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800059B6</addr><code>F32C</code><mnemonic>st16.b    [a15]0x3,d15</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><line>210</line><src>    }</src></hll>
				<hll><line>211</line><src></src></hll>
				<hll><cov>never</cov><line>212</line><src>    precond.is_not_ecan_busoff = (ecan_busoff.fault == FALSE) ? TRUE : FALSE;</src></hll>
				<asm><cov>never</cov><addr>P:800059B8</addr><code>29004091</code><mnemonic>movh.a    a2,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800059BC</addr><code>50562F39</code><mnemonic>ld.bu     d15,[a2]0x556</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800059C0</addr><code>0FBA</code><mnemonic>eq16      d15,d15,#0x0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800059C2</addr><code>F42C</code><mnemonic>st16.b    [a15]0x4,d15</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><cov>never</cov><line>213</line><src>    precond.is_not_acan1_busoff = (acan1_busoff.fault == FALSE) ? TRUE : FALSE;</src></hll>
				<asm><cov>never</cov><addr>P:800059C4</addr><code>29004091</code><mnemonic>movh.a    a2,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800059C8</addr><code>505A2F39</code><mnemonic>ld.bu     d15,[a2]0x55A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800059CC</addr><code>0FBA</code><mnemonic>eq16      d15,d15,#0x0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800059CE</addr><code>F52C</code><mnemonic>st16.b    [a15]0x5,d15</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><cov>never</cov><line>214</line><src>    precond.is_not_acan2_busoff = (acan2_busoff.fault == FALSE) ? TRUE : FALSE;</src></hll>
				<asm><cov>never</cov><addr>P:800059D0</addr><code>29004091</code><mnemonic>movh.a    a2,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800059D4</addr><code>505E2F39</code><mnemonic>ld.bu     d15,[a2]0x55E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800059D8</addr><code>0FBA</code><mnemonic>eq16      d15,d15,#0x0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800059DA</addr><code>F62C</code><mnemonic>st16.b    [a15]0x6,d15</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.c">
				<hll><cov>never</cov><line>215</line><src>}</src></hll>
				<asm><cov>never</cov><addr>P:800059DC</addr><code>9000</code><mnemonic>ret16     </mnemonic></asm>
			</mixed>
			<mixed module="\\Test\SWC_Failsafe" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\SWC_Failsafe.h">
				<hll><line>739</line><src>}</src></hll>
				<hll><line>740</line><src></src></hll>
				<hll><line>741</line><src>static inline boolean internal_error_occurred(void)</src></hll>
				<hll><line>742</line><src>{</src></hll>
				<hll><line>743</line><src>    return !!((int_err_info.hw_err_cnt &gt;= ERR_CNT_THR) || (int_err_info.sw_err_cnt &gt;= ERR_CNT_THR));</src></hll>
				<hll><line>744</line><src>}</src></hll>
				<hll><line>745</line><src></src></hll>
				<hll><line>746</line><src>static inline void external_wdg_enable(void)</src></hll>
				<hll><line>747</line><src>{</src></hll>
				<hll><line>748</line><src>    Dio_WriteChannel(DioConf_DioChannel_Dio_Port2_Pin4, 0U);</src></hll>
				<hll><line>749</line><src>}</src></hll>
				<hll><line>750</line><src></src></hll>
				<hll><line>751</line><src>/* SWC_ISR */</src></hll>
				<hll><line>752</line><src>extern volatile uint32 e2e_err_flags[MSG_GRP_NUM];</src></hll>
				<hll><line>753</line><src>extern volatile uint32 msg_received_flags[MSG_GRP_NUM]; </src></hll>
				<hll><line>754</line><src>extern volatile uint32 msg_received_buf[MSG_GRP_NUM];</src></hll>
				<hll><line>755</line><src></src></hll>
				<hll><line>756</line><src>static inline boolean is_updated(uint8 msg_grp, uint8 pos)</src></hll>
				<hll><line>757</line><src>{</src></hll>
				<hll><cov>never</cov><line>758</line><src>    return !!(msg_received_flags[msg_grp] &amp; BIT(pos));</src></hll>
				<asm><cov>never</cov><addr>P:80005904</addr><code>29004091</code><mnemonic>movh.a    a2,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005908</addr><code>20382F19</code><mnemonic>ld.w      d15,[a2]0xB8</mnemonic></asm>
			</mixed>
		</List.EXPORT>
	</listing>
</TRACE32>
