<?xml version="1.0" encoding="iso-8859-1" standalone="no" ?>
<?xml-stylesheet type="text/xsl" href="t32transform.xsl"?>
<TRACE32 file="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Gen\20210524_TRACE32_20_02\Failsafe-TestSpec_RS4_Temp4_210518\Report\Failsafe_v28_UID_001\Test\FS_CANTimeout\func-p-80003256-800035fb.xml">
	<coverage>
		<COVerage.EXPORT.ListLine ts="1621823163" t32ver="R.2020.09.000128638" t32pv="TRICORE" cpu="TC397XE" metric="object">
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\Rte_SWC_Diag</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>-</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>0</never>
				<bytes>638</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_HWFailure</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>16</never>
				<bytes>236</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\SWC_Failsafe</tree>
				<cov>partial</cov>
				<exec metric="object">0.600%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>16</never>
				<bytes>1666</bytes>
				<bytesok>10</bytesok>
			</module>
			<module>
				<addrFrom>P:80002DEA</addrFrom>
				<addrTo>P:80002F83</addrTo>
				<tree>\\Test\FS_BatteryVoltage</tree>
				<cov>partial</cov>
				<exec metric="object">59.512%</exec>
				<branches>52.000%</branches>
				<ok>8</ok>
				<taken>3</taken>
				<nottaken>7</nottaken>
				<never>7</never>
				<bytes>410</bytes>
				<bytesok>244</bytesok>
			</module>
			<module>
				<addrFrom>P:80002F84</addrFrom>
				<addrTo>P:800030BB</addrTo>
				<tree>\\Test\FS_CANBusOff</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>17</never>
				<bytes>312</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_CANTimeout</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>350</never>
				<bytes>2458</bytes>
				<bytesok>0</bytesok>
				<function>
					<addrFrom>P:80003256</addrFrom>
					<addrTo>P:800035FB</addrTo>
					<tree uid="p-80003256-800035fb">\\Test\FS_CANTimeout\FS_SetInhibit_CANTimeout</tree>
					<cov>never</cov>
					<exec metric="object">0.000%</exec>
					<branches>0.000%</branches>
					<ok>0</ok>
					<taken>0</taken>
					<nottaken>0</nottaken>
					<never>42</never>
					<bytes>934</bytes>
					<bytesok>0</bytesok>
					<line>
						<addrFrom>P:8000325E</addrFrom>
						<addrTo>P:8000325F</addrTo>
						<tree>FS_CANTimeout.c \599--601</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>2</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>multiple</addrFrom>
						<tree>FS_CANTimeout.c \602--606</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>10</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003262</addrFrom>
						<addrTo>P:80003273</addrTo>
						<tree>FS_CANTimeout.c \607--608</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003274</addrFrom>
						<addrTo>P:8000327F</addrTo>
						<tree>FS_CANTimeout.c \609--624</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003280</addrFrom>
						<addrTo>P:8000328D</addrTo>
						<tree>FS_CANTimeout.c \625--626</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000328E</addrFrom>
						<addrTo>P:80003291</addrTo>
						<tree>FS_CANTimeout.c \627--641</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003292</addrFrom>
						<addrTo>P:8000329F</addrTo>
						<tree>FS_CANTimeout.c \642--643</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800032A0</addrFrom>
						<addrTo>P:800032A3</addrTo>
						<tree>FS_CANTimeout.c \644--658</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800032A4</addrFrom>
						<addrTo>P:800032B5</addrTo>
						<tree>FS_CANTimeout.c \659--660</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800032B6</addrFrom>
						<addrTo>P:800032B9</addrTo>
						<tree>FS_CANTimeout.c \661--675</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800032BA</addrFrom>
						<addrTo>P:800032CB</addrTo>
						<tree>FS_CANTimeout.c \676--677</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800032CC</addrFrom>
						<addrTo>P:800032CF</addrTo>
						<tree>FS_CANTimeout.c \678--692</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800032D0</addrFrom>
						<addrTo>P:800032DD</addrTo>
						<tree>FS_CANTimeout.c \693--694</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800032DE</addrFrom>
						<addrTo>P:800032E1</addrTo>
						<tree>FS_CANTimeout.c \695--831</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800032E2</addrFrom>
						<addrTo>P:800032F3</addrTo>
						<tree>FS_CANTimeout.c \832--833</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800032F4</addrFrom>
						<addrTo>P:800032F7</addrTo>
						<tree>FS_CANTimeout.c \834--848</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800032F8</addrFrom>
						<addrTo>P:80003309</addrTo>
						<tree>FS_CANTimeout.c \849--850</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000330A</addrFrom>
						<addrTo>P:8000330D</addrTo>
						<tree>FS_CANTimeout.c \851--865</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000330E</addrFrom>
						<addrTo>P:8000331B</addrTo>
						<tree>FS_CANTimeout.c \866--867</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000331C</addrFrom>
						<addrTo>P:8000331F</addrTo>
						<tree>FS_CANTimeout.c \868--882</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003320</addrFrom>
						<addrTo>P:8000332D</addrTo>
						<tree>FS_CANTimeout.c \883--884</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000332E</addrFrom>
						<addrTo>P:80003331</addrTo>
						<tree>FS_CANTimeout.c \885--899</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003332</addrFrom>
						<addrTo>P:8000333F</addrTo>
						<tree>FS_CANTimeout.c \900--901</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003340</addrFrom>
						<addrTo>P:80003343</addrTo>
						<tree>FS_CANTimeout.c \902--916</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003344</addrFrom>
						<addrTo>P:80003355</addrTo>
						<tree>FS_CANTimeout.c \917--918</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003356</addrFrom>
						<addrTo>P:8000335B</addrTo>
						<tree>FS_CANTimeout.c \919--932</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000335C</addrFrom>
						<addrTo>P:80003369</addrTo>
						<tree>FS_CANTimeout.c \933--934</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000336A</addrFrom>
						<addrTo>P:8000336F</addrTo>
						<tree>FS_CANTimeout.c \935--949</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003370</addrFrom>
						<addrTo>P:80003381</addrTo>
						<tree>FS_CANTimeout.c \950--951</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003382</addrFrom>
						<addrTo>P:80003387</addrTo>
						<tree>FS_CANTimeout.c \952--966</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003388</addrFrom>
						<addrTo>P:80003395</addrTo>
						<tree>FS_CANTimeout.c \967--968</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003396</addrFrom>
						<addrTo>P:8000339B</addrTo>
						<tree>FS_CANTimeout.c \969--983</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000339C</addrFrom>
						<addrTo>P:800033AD</addrTo>
						<tree>FS_CANTimeout.c \984--985</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800033AE</addrFrom>
						<addrTo>P:800033B3</addrTo>
						<tree>FS_CANTimeout.c \986--1000</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800033B4</addrFrom>
						<addrTo>P:800033C5</addrTo>
						<tree>FS_CANTimeout.c \1001--1002</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800033C6</addrFrom>
						<addrTo>P:800033CB</addrTo>
						<tree>FS_CANTimeout.c \1003--1017</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800033CC</addrFrom>
						<addrTo>P:800033DD</addrTo>
						<tree>FS_CANTimeout.c \1018--1019</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800033DE</addrFrom>
						<addrTo>P:800033E3</addrTo>
						<tree>FS_CANTimeout.c \1020--1034</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800033E4</addrFrom>
						<addrTo>P:800033F5</addrTo>
						<tree>FS_CANTimeout.c \1035--1036</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800033F6</addrFrom>
						<addrTo>P:800033FB</addrTo>
						<tree>FS_CANTimeout.c \1037--1051</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800033FC</addrFrom>
						<addrTo>P:8000340D</addrTo>
						<tree>FS_CANTimeout.c \1052--1053</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000340E</addrFrom>
						<addrTo>P:80003413</addrTo>
						<tree>FS_CANTimeout.c \1054--1068</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003414</addrFrom>
						<addrTo>P:80003421</addrTo>
						<tree>FS_CANTimeout.c \1069--1070</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003422</addrFrom>
						<addrTo>P:80003427</addrTo>
						<tree>FS_CANTimeout.c \1071--1085</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003428</addrFrom>
						<addrTo>P:80003439</addrTo>
						<tree>FS_CANTimeout.c \1086--1087</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000343A</addrFrom>
						<addrTo>P:8000343F</addrTo>
						<tree>FS_CANTimeout.c \1088--1102</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003440</addrFrom>
						<addrTo>P:80003451</addrTo>
						<tree>FS_CANTimeout.c \1103--1104</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003452</addrFrom>
						<addrTo>P:80003455</addrTo>
						<tree>FS_CANTimeout.c \1105--1119</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003456</addrFrom>
						<addrTo>P:80003467</addrTo>
						<tree>FS_CANTimeout.c \1120--1121</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003468</addrFrom>
						<addrTo>P:8000346B</addrTo>
						<tree>FS_CANTimeout.c \1122--1136</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000346C</addrFrom>
						<addrTo>P:8000347D</addrTo>
						<tree>FS_CANTimeout.c \1137--1138</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000347E</addrFrom>
						<addrTo>P:80003483</addrTo>
						<tree>FS_CANTimeout.c \1139--1153</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003484</addrFrom>
						<addrTo>P:80003495</addrTo>
						<tree>FS_CANTimeout.c \1154--1155</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003496</addrFrom>
						<addrTo>P:8000349B</addrTo>
						<tree>FS_CANTimeout.c \1156--1170</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000349C</addrFrom>
						<addrTo>P:800034AD</addrTo>
						<tree>FS_CANTimeout.c \1171--1172</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800034AE</addrFrom>
						<addrTo>P:800034B9</addrTo>
						<tree>FS_CANTimeout.c \1173--1372</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800034BA</addrFrom>
						<addrTo>P:800034CB</addrTo>
						<tree>FS_CANTimeout.c \1373--1374</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800034CC</addrFrom>
						<addrTo>P:800034D1</addrTo>
						<tree>FS_CANTimeout.c \1375--1390</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800034D2</addrFrom>
						<addrTo>P:800034E3</addrTo>
						<tree>FS_CANTimeout.c \1391--1395</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800034E4</addrFrom>
						<addrTo>P:800034FB</addrTo>
						<tree>FS_CANTimeout.c \1396--1416</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>3</never>
						<bytes>24</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800034FC</addrFrom>
						<addrTo>P:8000350D</addrTo>
						<tree>FS_CANTimeout.c \1417--1418</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000350E</addrFrom>
						<addrTo>P:80003511</addrTo>
						<tree>FS_CANTimeout.c \1419--1435</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003512</addrFrom>
						<addrTo>P:80003523</addrTo>
						<tree>FS_CANTimeout.c \1436--1437</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003524</addrFrom>
						<addrTo>P:8000352F</addrTo>
						<tree>FS_CANTimeout.c \1438--1454</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003530</addrFrom>
						<addrTo>P:8000353D</addrTo>
						<tree>FS_CANTimeout.c \1455--1456</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000353E</addrFrom>
						<addrTo>P:80003545</addrTo>
						<tree>FS_CANTimeout.c \1457--1473</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>8</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003546</addrFrom>
						<addrTo>P:80003553</addrTo>
						<tree>FS_CANTimeout.c \1474--1475</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003554</addrFrom>
						<addrTo>P:80003557</addrTo>
						<tree>FS_CANTimeout.c \1476--1492</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003558</addrFrom>
						<addrTo>P:80003565</addrTo>
						<tree>FS_CANTimeout.c \1493--1494</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003566</addrFrom>
						<addrTo>P:80003569</addrTo>
						<tree>FS_CANTimeout.c \1495--1511</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000356A</addrFrom>
						<addrTo>P:8000357B</addrTo>
						<tree>FS_CANTimeout.c \1512--1513</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000357C</addrFrom>
						<addrTo>P:8000358D</addrTo>
						<tree>FS_CANTimeout.c \1514--1530</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000358E</addrFrom>
						<addrTo>P:8000359F</addrTo>
						<tree>FS_CANTimeout.c \1531--1532</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800035A0</addrFrom>
						<addrTo>P:800035A5</addrTo>
						<tree>FS_CANTimeout.c \1533--1549</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800035A6</addrFrom>
						<addrTo>P:800035B7</addrTo>
						<tree>FS_CANTimeout.c \1550--1551</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800035B8</addrFrom>
						<addrTo>P:800035BB</addrTo>
						<tree>FS_CANTimeout.c \1552--1568</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800035BC</addrFrom>
						<addrTo>P:800035CD</addrTo>
						<tree>FS_CANTimeout.c \1569--1570</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800035CE</addrFrom>
						<addrTo>P:800035D1</addrTo>
						<tree>FS_CANTimeout.c \1571--1587</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800035D2</addrFrom>
						<addrTo>P:800035E3</addrTo>
						<tree>FS_CANTimeout.c \1588--1589</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800035E4</addrFrom>
						<addrTo>P:800035E7</addrTo>
						<tree>FS_CANTimeout.c \1590--1606</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800035E8</addrFrom>
						<addrTo>P:800035F9</addrTo>
						<tree>FS_CANTimeout.c \1607--1608</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800035FA</addrFrom>
						<addrTo>P:800035FB</addrTo>
						<tree>FS_CANTimeout.c \1609--1622</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>2</bytes>
						<bytesok>0</bytesok>
					</line>
					<total>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>41</never>
						<bytes>934</bytes>
						<bytesok>0</bytesok>
					</total>
				</function>
				<total>
					<cov>never</cov>
					<exec metric="object">0.000%</exec>
					<branches>0.000%</branches>
					<ok>0</ok>
					<taken>0</taken>
					<nottaken>0</nottaken>
					<never>42</never>
					<bytes>934</bytes>
					<bytesok>0</bytesok>
				</total>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_InvalidSignal</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>350</never>
				<bytes>6758</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_SWFailure</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>17</never>
				<bytes>304</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>5</never>
				<bytes>806</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart_tc1</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>402</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart_tc2</tree>
				<cov>partial</cov>
				<exec metric="object">81.094%</exec>
				<branches>87.500%</branches>
				<ok>3</ok>
				<taken>0</taken>
				<nottaken>1</nottaken>
				<never>0</never>
				<bytes>402</bytes>
				<bytesok>326</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart_tc3</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_main</tree>
				<cov>partial</cov>
				<exec metric="object">27.835%</exec>
				<branches>31.818%</branches>
				<ok>1</ok>
				<taken>4</taken>
				<nottaken>1</nottaken>
				<never>5</never>
				<bytes>388</bytes>
				<bytesok>108</bytesok>
			</module>
			<module>
				<addrFrom>P:800065B6</addrFrom>
				<addrTo>P:8000674B</addrTo>
				<tree>\\Test\prost_cstart_tc4</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>P:8000674C</addrFrom>
				<addrTo>P:800068E1</addrTo>
				<tree>\\Test\prost_cstart_tc5</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>P:80006A62</addrFrom>
				<addrTo>P:80006A91</addrTo>
				<tree>\\Test\prost_stubs</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>2</never>
				<bytes>48</bytes>
				<bytesok>0</bytesok>
			</module>
			<total>
				<cov>partial</cov>
				<exec metric="object">4.287%</exec>
				<branches>2.412%</branches>
				<ok>12</ok>
				<taken>7</taken>
				<nottaken>9</nottaken>
				<never>801</never>
				<bytes>16046</bytes>
				<bytesok>688</bytesok>
			</total>
		</COVerage.EXPORT.ListLine>
	</coverage>
	<marker>
		<BookMark.EXPORT ts="1621823163" t32ver="R.2020.09.000128638" t32pv="TRICORE" cpu="TC397XE">
		</BookMark.EXPORT>
	</marker>
	<listing>
		<List.EXPORT ts="1621823163" t32ver="R.2020.09.000128638" t32pv="TRICORE" order="source">
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>599</line><src>}</src></hll>
				<hll><line>600</line><src></src></hll>
				<hll><cov>never</cov><line>601</line><src>void FS_SetInhibit_CANTimeout(void)</src></hll>
				<asm><cov>never</cov><addr>P:8000325E</addr><code>2820</code><mnemonic>sub16.a   a10,#0x28</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c" type="multiple">
				<hll><line>602</line><src>{</src></hll>
				<hll><line>603</line><src>    /* Chassis-CAN */</src></hll>
				<hll><line>604</line><src>#if CCAN == CANFD</src></hll>
				<hll><line>605</line><src>    /* CAN Timeout Disable ACU */</src></hll>
				<hll><cov>never</cov><line>606</line><src>    if (can_timeout_disable == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80003256</addr><code>F9004091</code><label>FS_SetInhibit_CANTimeout:                                                                                                                                                                                                                                       </label><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000325A</addr><code>8053FF39</code><mnemonic>ld.bu     d15,[a15]0x613</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003260</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80003274</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>607</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>608</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003262</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003266</addr><code>825AFFD9</code><mnemonic>lea       a15,[a15]0x261A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000326A</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000326C</addr><code>FF2EFF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:80003270</addr><code>1438006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>609</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>610</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>611</line><src>                .sccml = {1},</src></hll>
				<hll><line>612</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>613</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>614</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>615</line><src>                .bca = {1,0},</src></hll>
				<hll><line>616</line><src>                .sea = {1},</src></hll>
				<hll><line>617</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>618</line><src>                .warning = {0,0,0,0,0,0,1},</src></hll>
				<hll><line>619</line><src>            }</src></hll>
				<hll><line>620</line><src>        );</src></hll>
				<hll><line>621</line><src>    }</src></hll>
				<hll><line>622</line><src></src></hll>
				<hll><line>623</line><src>#if VEH_TYPE == NORMAL</src></hll>
				<hll><cov>never</cov><line>624</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(EMS_01_10ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:80003274</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003278</addr><code>1030FFD9</code><mnemonic>lea       a15,[a15]0x70</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000327C</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000327E</addr><code>582E</code><mnemonic>jz16.t    d15,#0x5,0x8000328E</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>625</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>626</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003280</addr><code>FF3AFF61</code><mnemonic>fcall     0x800030F4</mnemonic><comment>.cocofun_31</comment></asm>
				<asm><cov>never</cov><addr>P:80003284</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003286</addr><code>FF1BFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000328A</addr><code>142B006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>627</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>628</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>629</line><src>                .sccml = {1},</src></hll>
				<hll><line>630</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>631</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>632</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>633</line><src>                .bca = {1,0},</src></hll>
				<hll><line>634</line><src>                .sea = {1},</src></hll>
				<hll><line>635</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>636</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>637</line><src>            }</src></hll>
				<hll><line>638</line><src>        );</src></hll>
				<hll><line>639</line><src>    }</src></hll>
				<hll><line>640</line><src></src></hll>
				<hll><cov>never</cov><line>641</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(EMS_02_10ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:8000328E</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003290</addr><code>682E</code><mnemonic>jz16.t    d15,#0x6,0x800032A0</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>642</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>643</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003292</addr><code>FF31FF61</code><mnemonic>fcall     0x800030F4</mnemonic><comment>.cocofun_31</comment></asm>
				<asm><cov>never</cov><addr>P:80003296</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003298</addr><code>FF12FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000329C</addr><code>1422006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>644</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>645</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>646</line><src>                .sccml = {1},</src></hll>
				<hll><line>647</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>648</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>649</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>650</line><src>                .bca = {1,0},</src></hll>
				<hll><line>651</line><src>                .sea = {1},</src></hll>
				<hll><line>652</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>653</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>654</line><src>            }</src></hll>
				<hll><line>655</line><src>        );</src></hll>
				<hll><line>656</line><src>    }</src></hll>
				<hll><line>657</line><src></src></hll>
				<hll><cov>never</cov><line>658</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(EMS_03_10ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800032A0</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032A2</addr><code>7A2E</code><mnemonic>jz16.t    d15,#0x7,0x800032B6</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>659</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>660</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800032A4</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032A8</addr><code>22A022D9</code><mnemonic>lea       a2,[a2]0x28A0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032AC</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032AE</addr><code>FF07FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800032B2</addr><code>1417006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>661</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>662</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>663</line><src>                .sccml = {1},</src></hll>
				<hll><line>664</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>665</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>666</line><src>                .hda = {0,1,1,1},</src></hll>
				<hll><line>667</line><src>                .bca = {0,0},</src></hll>
				<hll><line>668</line><src>                .sea = {0},</src></hll>
				<hll><line>669</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>670</line><src>                .warning = {0,3,3,3,HDA_FAULT,5,1},</src></hll>
				<hll><line>671</line><src>            }</src></hll>
				<hll><line>672</line><src>        );</src></hll>
				<hll><line>673</line><src>    }</src></hll>
				<hll><line>674</line><src></src></hll>
				<hll><cov>never</cov><line>675</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(EMS_05_100ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800032B6</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032B8</addr><code>8A2E</code><mnemonic>jz16.t    d15,#0x8,0x800032CC</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>676</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>677</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800032BA</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032BE</addr><code>328622D9</code><mnemonic>lea       a2,[a2]0x28C6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032C2</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032C4</addr><code>FEFCFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800032C8</addr><code>140C006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>678</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>679</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>680</line><src>                .sccml = {0},</src></hll>
				<hll><line>681</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>682</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>683</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>684</line><src>                .bca = {1,0},</src></hll>
				<hll><line>685</line><src>                .sea = {0},</src></hll>
				<hll><line>686</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>687</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>688</line><src>            }</src></hll>
				<hll><line>689</line><src>        );</src></hll>
				<hll><line>690</line><src>    }</src></hll>
				<hll><line>691</line><src></src></hll>
				<hll><cov>never</cov><line>692</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(TCU_01_10ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800032CC</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032CE</addr><code>A82E</code><mnemonic>jz16.t    d15,#0x0A,0x800032DE</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>693</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>694</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800032D0</addr><code>FF12FF61</code><mnemonic>fcall     0x800030F4</mnemonic><comment>.cocofun_31</comment></asm>
				<asm><cov>never</cov><addr>P:800032D4</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032D6</addr><code>FEF3FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800032DA</addr><code>1403006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>695</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>696</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>697</line><src>                .sccml = {1},</src></hll>
				<hll><line>698</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>699</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>700</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>701</line><src>                .bca = {1,0},</src></hll>
				<hll><line>702</line><src>                .sea = {1},</src></hll>
				<hll><line>703</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>704</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>705</line><src>            }</src></hll>
				<hll><line>706</line><src>        );</src></hll>
				<hll><line>707</line><src>    }</src></hll>
				<hll><line>708</line><src></src></hll>
				<hll><line>709</line><src>#elif VEH_TYPE == EV</src></hll>
				<hll><line>710</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(VCU_01_10ms_POS)) != 0) {</src></hll>
				<hll><line>711</line><src>        update_inhibit_info(</src></hll>
				<hll><line>712</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>713</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>714</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>715</line><src>                .sccml = {1},</src></hll>
				<hll><line>716</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>717</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>718</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>719</line><src>                .bca = {1,0},</src></hll>
				<hll><line>720</line><src>                .sea = {1},</src></hll>
				<hll><line>721</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>722</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>723</line><src>            }</src></hll>
				<hll><line>724</line><src>        );</src></hll>
				<hll><line>725</line><src>    }</src></hll>
				<hll><line>726</line><src></src></hll>
				<hll><line>727</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(VCU_03_100ms_POS)) != 0) {</src></hll>
				<hll><line>728</line><src>        update_inhibit_info(</src></hll>
				<hll><line>729</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>730</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>731</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>732</line><src>                .sccml = {1},</src></hll>
				<hll><line>733</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>734</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>735</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>736</line><src>                .bca = {0,0},</src></hll>
				<hll><line>737</line><src>                .sea = {0},</src></hll>
				<hll><line>738</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>739</line><src>                .warning = {0,3,3,3,NO_FAULT,0,1},</src></hll>
				<hll><line>740</line><src>            }</src></hll>
				<hll><line>741</line><src>        );</src></hll>
				<hll><line>742</line><src>    }</src></hll>
				<hll><line>743</line><src></src></hll>
				<hll><line>744</line><src>#elif VEH_TYPE == HEV</src></hll>
				<hll><line>745</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(EMS_07_POS)) != 0) {</src></hll>
				<hll><line>746</line><src>        update_inhibit_info(</src></hll>
				<hll><line>747</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>748</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>749</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>750</line><src>                .sccml = {1},</src></hll>
				<hll><line>751</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>752</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>753</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>754</line><src>                .bca = {1,0},</src></hll>
				<hll><line>755</line><src>                .sea = {1},</src></hll>
				<hll><line>756</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>757</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>758</line><src>            }</src></hll>
				<hll><line>759</line><src>        );</src></hll>
				<hll><line>760</line><src>    }</src></hll>
				<hll><line>761</line><src></src></hll>
				<hll><line>762</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(EMS_11_POS) != 0) {</src></hll>
				<hll><line>763</line><src>        update_inhibit_info(</src></hll>
				<hll><line>764</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>765</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>766</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>767</line><src>                .sccml = {1},</src></hll>
				<hll><line>768</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>769</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>770</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>771</line><src>                .bca = {1,0},</src></hll>
				<hll><line>772</line><src>                .sea = {1},</src></hll>
				<hll><line>773</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>774</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>775</line><src>            }</src></hll>
				<hll><line>776</line><src>        );</src></hll>
				<hll><line>777</line><src>    }</src></hll>
				<hll><line>778</line><src></src></hll>
				<hll><line>779</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(HCU_03_POS)) != 0) {</src></hll>
				<hll><line>780</line><src>        update_inhibit_info(</src></hll>
				<hll><line>781</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>782</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>783</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>784</line><src>                .sccml = {1},</src></hll>
				<hll><line>785</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>786</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>787</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>788</line><src>                .bca = {1,0},</src></hll>
				<hll><line>789</line><src>                .sea = {1},</src></hll>
				<hll><line>790</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>791</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>792</line><src>            }</src></hll>
				<hll><line>793</line><src>        );</src></hll>
				<hll><line>794</line><src>    }</src></hll>
				<hll><line>795</line><src></src></hll>
				<hll><line>796</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(HCU_05_POS)) != 0) {</src></hll>
				<hll><line>797</line><src>        update_inhibit_info(</src></hll>
				<hll><line>798</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>799</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>800</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>801</line><src>                .sccml = {0},</src></hll>
				<hll><line>802</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>803</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>804</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>805</line><src>                .bca = {1,0},</src></hll>
				<hll><line>806</line><src>                .sea = {1},</src></hll>
				<hll><line>807</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>808</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>809</line><src>            }</src></hll>
				<hll><line>810</line><src>        );</src></hll>
				<hll><line>811</line><src>    }</src></hll>
				<hll><line>812</line><src></src></hll>
				<hll><line>813</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(HTCU_04_POS)) != 0) {</src></hll>
				<hll><line>814</line><src>        update_inhibit_info(</src></hll>
				<hll><line>815</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>816</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>817</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>818</line><src>                .sccml = {1},</src></hll>
				<hll><line>819</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>820</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>821</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>822</line><src>                .bca = {1,0},</src></hll>
				<hll><line>823</line><src>                .sea = {1},</src></hll>
				<hll><line>824</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>825</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>826</line><src>            }</src></hll>
				<hll><line>827</line><src>        );</src></hll>
				<hll><line>828</line><src>    }</src></hll>
				<hll><line>829</line><src>#endif /* VEH_TYPE */</src></hll>
				<hll><line>830</line><src></src></hll>
				<hll><cov>never</cov><line>831</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(CLU_01_20ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800032DE</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032E0</addr><code>3A2E</code><mnemonic>jz16.t    d15,#0x3,0x800032F4</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>832</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>833</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800032E2</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032E6</addr><code>32AC22D9</code><mnemonic>lea       a2,[a2]0x28EC</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032EA</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032EC</addr><code>FEE8FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800032F0</addr><code>13F8006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>834</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>835</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>836</line><src>                .sccml = {1},</src></hll>
				<hll><line>837</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>838</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>839</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>840</line><src>                .bca = {1,0},</src></hll>
				<hll><line>841</line><src>                .sea = {1},</src></hll>
				<hll><line>842</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>843</line><src>                .warning = {0,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>844</line><src>            }</src></hll>
				<hll><line>845</line><src>        );</src></hll>
				<hll><line>846</line><src>    }</src></hll>
				<hll><line>847</line><src></src></hll>
				<hll><cov>never</cov><line>848</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(CLU_02_100ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800032F4</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032F6</addr><code>4A2E</code><mnemonic>jz16.t    d15,#0x4,0x8000330A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>849</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>850</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800032F8</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800032FC</addr><code>429222D9</code><mnemonic>lea       a2,[a2]0x2912</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003300</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003302</addr><code>FEDDFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80003306</addr><code>13ED006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>851</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>852</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>853</line><src>                .sccml = {0},</src></hll>
				<hll><line>854</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>855</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>856</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>857</line><src>                .bca = {0,0},</src></hll>
				<hll><line>858</line><src>                .sea = {0},</src></hll>
				<hll><line>859</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>860</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>861</line><src>            }</src></hll>
				<hll><line>862</line><src>        );</src></hll>
				<hll><line>863</line><src>    }</src></hll>
				<hll><line>864</line><src></src></hll>
				<hll><cov>never</cov><line>865</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(ABS_ESC_01_10ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:8000330A</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000330C</addr><code>082E</code><mnemonic>jz16.t    d15,#0x0,0x8000331C</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>866</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>867</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:8000330E</addr><code>FEF8FF61</code><mnemonic>fcall     0x800030FE</mnemonic><comment>.cocofun_32</comment></asm>
				<asm><cov>never</cov><addr>P:80003312</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003314</addr><code>FED4FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80003318</addr><code>13E4006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>868</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>869</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>870</line><src>                .sccml = {1},</src></hll>
				<hll><line>871</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>872</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>873</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>874</line><src>                .bca = {1,0},</src></hll>
				<hll><line>875</line><src>                .sea = {0},</src></hll>
				<hll><line>876</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>877</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>878</line><src>            }</src></hll>
				<hll><line>879</line><src>        );</src></hll>
				<hll><line>880</line><src>    }</src></hll>
				<hll><line>881</line><src></src></hll>
				<hll><cov>never</cov><line>882</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(ESC_01_10ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:8000331C</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000331E</addr><code>B82E</code><mnemonic>jz16.t    d15,#0x0B,0x8000332E</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>883</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>884</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003320</addr><code>FEEFFF61</code><mnemonic>fcall     0x800030FE</mnemonic><comment>.cocofun_32</comment></asm>
				<asm><cov>never</cov><addr>P:80003324</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003326</addr><code>FECBFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000332A</addr><code>13DB006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>885</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>886</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>887</line><src>                .sccml = {1},</src></hll>
				<hll><line>888</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>889</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>890</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>891</line><src>                .bca = {1,0},</src></hll>
				<hll><line>892</line><src>                .sea = {0},</src></hll>
				<hll><line>893</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>894</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>895</line><src>            }</src></hll>
				<hll><line>896</line><src>        );</src></hll>
				<hll><line>897</line><src>    }</src></hll>
				<hll><line>898</line><src></src></hll>
				<hll><cov>never</cov><line>899</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(ESC_03_20ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:8000332E</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003330</addr><code>C82E</code><mnemonic>jz16.t    d15,#0x0C,0x80003340</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>900</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>901</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003332</addr><code>FEE6FF61</code><mnemonic>fcall     0x800030FE</mnemonic><comment>.cocofun_32</comment></asm>
				<asm><cov>never</cov><addr>P:80003336</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003338</addr><code>FEC2FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000333C</addr><code>13D2006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>902</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>903</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>904</line><src>                .sccml = {1},</src></hll>
				<hll><line>905</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>906</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>907</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>908</line><src>                .bca = {1,0},</src></hll>
				<hll><line>909</line><src>                .sea = {0},</src></hll>
				<hll><line>910</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>911</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>912</line><src>            }</src></hll>
				<hll><line>913</line><src>        );</src></hll>
				<hll><line>914</line><src>    }</src></hll>
				<hll><line>915</line><src></src></hll>
				<hll><cov>never</cov><line>916</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(HOD_01_100ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:80003340</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003342</addr><code>DA2E</code><mnemonic>jz16.t    d15,#0x0D,0x80003356</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>917</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>918</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003344</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003348</addr><code>529E22D9</code><mnemonic>lea       a2,[a2]0x295E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000334C</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000334E</addr><code>FEB7FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80003352</addr><code>13C7006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>919</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>920</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>921</line><src>                .sccml = {0},</src></hll>
				<hll><line>922</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>923</line><src>                .lfa = {2,0},</src></hll>
				<hll><line>924</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>925</line><src>                .bca = {0,0},</src></hll>
				<hll><line>926</line><src>                .sea = {0},</src></hll>
				<hll><line>927</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>928</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>929</line><src>            }</src></hll>
				<hll><line>930</line><src>        );</src></hll>
				<hll><line>931</line><src>    }</src></hll>
				<hll><cov>never</cov><line>932</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(WHL_01_10ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:80003356</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003358</addr><code>0009DFEF</code><mnemonic>jz.t      d15,#0x1D,0x8000336A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>933</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>934</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:8000335C</addr><code>FECCFF61</code><mnemonic>fcall     0x800030F4</mnemonic><comment>.cocofun_31</comment></asm>
				<asm><cov>never</cov><addr>P:80003360</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003362</addr><code>FEADFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80003366</addr><code>13BD006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>935</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>936</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>937</line><src>                .sccml = {1},</src></hll>
				<hll><line>938</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>939</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>940</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>941</line><src>                .bca = {1,0},</src></hll>
				<hll><line>942</line><src>                .sea = {1},</src></hll>
				<hll><line>943</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>944</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>945</line><src>            }</src></hll>
				<hll><line>946</line><src>        );</src></hll>
				<hll><line>947</line><src>    }</src></hll>
				<hll><line>948</line><src></src></hll>
				<hll><cov>never</cov><line>949</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(MDPS_01_10ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:8000336A</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000336C</addr><code>000B7FEF</code><mnemonic>jz.t      d15,#0x17,0x80003382</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>950</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>951</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003370</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003374</addr><code>628422D9</code><mnemonic>lea       a2,[a2]0x2984</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003378</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000337A</addr><code>FEA1FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000337E</addr><code>13B1006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>952</line><src>                .fca = {0,0,0,0,0,0,1,1,1},</src></hll>
				<hll><line>953</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>954</line><src>                .sccml = {0},</src></hll>
				<hll><line>955</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>956</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>957</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>958</line><src>                .bca = {0,0},</src></hll>
				<hll><line>959</line><src>                .sea = {0},</src></hll>
				<hll><line>960</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>961</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>962</line><src>            }</src></hll>
				<hll><line>963</line><src>        );</src></hll>
				<hll><line>964</line><src>    }</src></hll>
				<hll><line>965</line><src></src></hll>
				<hll><cov>never</cov><line>966</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(SAS_01_10ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:80003382</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003384</addr><code>00099FEF</code><mnemonic>jz.t      d15,#0x19,0x80003396</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>967</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>968</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003388</addr><code>FEBBFF61</code><mnemonic>fcall     0x800030FE</mnemonic><comment>.cocofun_32</comment></asm>
				<asm><cov>never</cov><addr>P:8000338C</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000338E</addr><code>FE97FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80003392</addr><code>13A7006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>969</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>970</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>971</line><src>                .sccml = {1},</src></hll>
				<hll><line>972</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>973</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>974</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>975</line><src>                .bca = {1,0},</src></hll>
				<hll><line>976</line><src>                .sea = {0},</src></hll>
				<hll><line>977</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>978</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>979</line><src>            }</src></hll>
				<hll><line>980</line><src>        );</src></hll>
				<hll><line>981</line><src>    }</src></hll>
				<hll><line>982</line><src></src></hll>
				<hll><cov>never</cov><line>983</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(ICU_02_200ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:80003396</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003398</addr><code>000B3FEF</code><mnemonic>jz.t      d15,#0x13,0x800033AE</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>984</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>985</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:8000339C</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033A0</addr><code>924022D9</code><mnemonic>lea       a2,[a2]0x2640</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033A4</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033A6</addr><code>FE8BFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800033AA</addr><code>139B006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>986</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>987</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>988</line><src>                .sccml = {1},</src></hll>
				<hll><line>989</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>990</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>991</line><src>                .hda = {0,1,1,1},</src></hll>
				<hll><line>992</line><src>                .bca = {1,0},</src></hll>
				<hll><line>993</line><src>                .sea = {1},</src></hll>
				<hll><line>994</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>995</line><src>                .warning = {0,3,3,3,HDA_FAULT,5,1},</src></hll>
				<hll><line>996</line><src>            }</src></hll>
				<hll><line>997</line><src>        );</src></hll>
				<hll><line>998</line><src>    }</src></hll>
				<hll><line>999</line><src></src></hll>
				<hll><cov>never</cov><line>1000</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(ICU_04_200ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800033AE</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033B0</addr><code>000B4FEF</code><mnemonic>jz.t      d15,#0x14,0x800033C6</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1001</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1002</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800033B4</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033B8</addr><code>926622D9</code><mnemonic>lea       a2,[a2]0x2666</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033BC</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033BE</addr><code>FE7FFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800033C2</addr><code>138F006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1003</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1004</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1005</line><src>                .sccml = {0},</src></hll>
				<hll><line>1006</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1007</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1008</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>1009</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1010</line><src>                .sea = {0},</src></hll>
				<hll><line>1011</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1012</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1013</line><src>            }</src></hll>
				<hll><line>1014</line><src>        );</src></hll>
				<hll><line>1015</line><src>    }</src></hll>
				<hll><line>1016</line><src></src></hll>
				<hll><cov>never</cov><line>1017</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(ICU_06_200ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800033C6</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033C8</addr><code>000B5FEF</code><mnemonic>jz.t      d15,#0x15,0x800033DE</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1018</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1019</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800033CC</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033D0</addr><code>A24C22D9</code><mnemonic>lea       a2,[a2]0x268C</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033D4</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033D6</addr><code>FE73FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800033DA</addr><code>1383006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1020</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1021</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1022</line><src>                .sccml = {0},</src></hll>
				<hll><line>1023</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1024</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1025</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>1026</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1027</line><src>                .sea = {0},</src></hll>
				<hll><line>1028</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1029</line><src>                .warning = {0,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>1030</line><src>            }</src></hll>
				<hll><line>1031</line><src>        );</src></hll>
				<hll><line>1032</line><src>    }</src></hll>
				<hll><line>1033</line><src></src></hll>
				<hll><cov>never</cov><line>1034</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(ICU_07_200ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800033DE</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033E0</addr><code>000B6FEF</code><mnemonic>jz.t      d15,#0x16,0x800033F6</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1035</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1036</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800033E4</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033E8</addr><code>A27222D9</code><mnemonic>lea       a2,[a2]0x26B2</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033EC</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033EE</addr><code>FE67FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800033F2</addr><code>1377006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1037</line><src>                .fca = {0,0,0,1,0,0,1,1,1},</src></hll>
				<hll><line>1038</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1039</line><src>                .sccml = {0},</src></hll>
				<hll><line>1040</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1041</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1042</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>1043</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1044</line><src>                .sea = {0},</src></hll>
				<hll><line>1045</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1046</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1047</line><src>            }</src></hll>
				<hll><line>1048</line><src>        );</src></hll>
				<hll><line>1049</line><src>    }</src></hll>
				<hll><line>1050</line><src></src></hll>
				<hll><cov>never</cov><line>1051</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(MFSW_01_200ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800033F6</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800033F8</addr><code>000B8FEF</code><mnemonic>jz.t      d15,#0x18,0x8000340E</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1052</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1053</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800033FC</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003400</addr><code>A27222D9</code><mnemonic>lea       a2,[a2]0x26B2</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003404</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003406</addr><code>FE5BFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000340A</addr><code>136B006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1054</line><src>                .fca = {0,0,0,1,0,0,1,1,1},</src></hll>
				<hll><line>1055</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1056</line><src>                .sccml = {0},</src></hll>
				<hll><line>1057</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1058</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1059</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>1060</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1061</line><src>                .sea = {0},</src></hll>
				<hll><line>1062</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1063</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1064</line><src>            }</src></hll>
				<hll><line>1065</line><src>        );</src></hll>
				<hll><line>1066</line><src>    }</src></hll>
				<hll><line>1067</line><src></src></hll>
				<hll><cov>never</cov><line>1068</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(YRS_01_10ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:8000340E</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003410</addr><code>0009EFEF</code><mnemonic>jz.t      d15,#0x1E,0x80003422</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1069</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1070</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003414</addr><code>FE70FF61</code><mnemonic>fcall     0x800030F4</mnemonic><comment>.cocofun_31</comment></asm>
				<asm><cov>never</cov><addr>P:80003418</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000341A</addr><code>FE51FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000341E</addr><code>1361006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1071</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1072</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1073</line><src>                .sccml = {1},</src></hll>
				<hll><line>1074</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1075</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1076</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1077</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1078</line><src>                .sea = {1},</src></hll>
				<hll><line>1079</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1080</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1081</line><src>            }</src></hll>
				<hll><line>1082</line><src>        );</src></hll>
				<hll><line>1083</line><src>    }</src></hll>
				<hll><line>1084</line><src></src></hll>
				<hll><cov>never</cov><line>1085</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(SWRC_03_20ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:80003422</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003424</addr><code>000BCFEF</code><mnemonic>jz.t      d15,#0x1C,0x8000343A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1086</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1087</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003428</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000342C</addr><code>B25822D9</code><mnemonic>lea       a2,[a2]0x26D8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003430</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003432</addr><code>FE45FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80003436</addr><code>1355006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1088</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1089</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1090</line><src>                .sccml = {1},</src></hll>
				<hll><line>1091</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1092</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1093</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1094</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1095</line><src>                .sea = {0},</src></hll>
				<hll><line>1096</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1097</line><src>                .warning = {0,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1098</line><src>            }</src></hll>
				<hll><line>1099</line><src>        );</src></hll>
				<hll><line>1100</line><src>    }</src></hll>
				<hll><line>1101</line><src></src></hll>
				<hll><cov>never</cov><line>1102</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(ICSC_02_100ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:8000343A</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000343C</addr><code>000B2FEF</code><mnemonic>jz.t      d15,#0x12,0x80003452</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1103</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1104</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003440</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003444</addr><code>429222D9</code><mnemonic>lea       a2,[a2]0x2912</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003448</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000344A</addr><code>FE39FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000344E</addr><code>1349006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1105</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1106</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1107</line><src>                .sccml = {0},</src></hll>
				<hll><line>1108</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1109</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1110</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>1111</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1112</line><src>                .sea = {0},</src></hll>
				<hll><line>1113</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1114</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>1115</line><src>            }</src></hll>
				<hll><line>1116</line><src>        );</src></hll>
				<hll><line>1117</line><src>    }</src></hll>
				<hll><line>1118</line><src></src></hll>
				<hll><cov>never</cov><line>1119</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(BCM_02_200ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:80003452</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003454</addr><code>1A2E</code><mnemonic>jz16.t    d15,#0x1,0x80003468</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1120</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1121</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003456</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000345A</addr><code>B27E22D9</code><mnemonic>lea       a2,[a2]0x26FE</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000345E</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003460</addr><code>FE2EFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80003464</addr><code>133E006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1122</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1123</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1124</line><src>                .sccml = {0},</src></hll>
				<hll><line>1125</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1126</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1127</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>1128</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1129</line><src>                .sea = {1},</src></hll>
				<hll><line>1130</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1131</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>1132</line><src>            }</src></hll>
				<hll><line>1133</line><src>        );</src></hll>
				<hll><line>1134</line><src>    }</src></hll>
				<hll><line>1135</line><src></src></hll>
				<hll><cov>never</cov><line>1136</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(BCM_10_200ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:80003468</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000346A</addr><code>2A2E</code><mnemonic>jz16.t    d15,#0x2,0x8000347E</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1137</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1138</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:8000346C</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003470</addr><code>C26422D9</code><mnemonic>lea       a2,[a2]0x2724</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003474</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003476</addr><code>FE23FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000347A</addr><code>1333006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1139</line><src>                .fca = {0,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1140</line><src>                .scc = {0,0,1,1},</src></hll>
				<hll><line>1141</line><src>                .sccml = {0},</src></hll>
				<hll><line>1142</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>1143</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1144</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>1145</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1146</line><src>                .sea = {1},</src></hll>
				<hll><line>1147</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1148</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1149</line><src>            }</src></hll>
				<hll><line>1150</line><src>        );</src></hll>
				<hll><line>1151</line><src>    }</src></hll>
				<hll><line>1152</line><src></src></hll>
				<hll><cov>never</cov><line>1153</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(SBCM_AST_03_200ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:8000347E</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003480</addr><code>000BAFEF</code><mnemonic>jz.t      d15,#0x1A,0x80003496</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1154</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1155</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003484</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003488</addr><code>D24A22D9</code><mnemonic>lea       a2,[a2]0x274A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000348C</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000348E</addr><code>FE17FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80003492</addr><code>1327006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1156</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1157</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1158</line><src>                .sccml = {0},</src></hll>
				<hll><line>1159</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1160</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1161</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>1162</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1163</line><src>                .sea = {0},</src></hll>
				<hll><line>1164</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1165</line><src>                .warning = {0,0,0,0,NO_FAULT,0,2},</src></hll>
				<hll><line>1166</line><src>            }</src></hll>
				<hll><line>1167</line><src>        );</src></hll>
				<hll><line>1168</line><src>    }</src></hll>
				<hll><line>1169</line><src></src></hll>
				<hll><cov>never</cov><line>1170</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(SBCM_DRV_02_200ms_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:80003496</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003498</addr><code>000BBFEF</code><mnemonic>jz.t      d15,#0x1B,0x800034AE</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1171</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1172</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:8000349C</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034A0</addr><code>D24A22D9</code><mnemonic>lea       a2,[a2]0x274A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034A4</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034A6</addr><code>FE0BFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800034AA</addr><code>131B006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1173</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1174</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1175</line><src>                .sccml = {0},</src></hll>
				<hll><line>1176</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1177</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1178</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>1179</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1180</line><src>                .sea = {0},</src></hll>
				<hll><line>1181</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1182</line><src>                .warning = {0,0,0,0,NO_FAULT,0,2},</src></hll>
				<hll><line>1183</line><src>            }</src></hll>
				<hll><line>1184</line><src>        );</src></hll>
				<hll><line>1185</line><src>    }</src></hll>
				<hll><line>1186</line><src></src></hll>
				<hll><line>1187</line><src>#elif CCAN == HSCAN</src></hll>
				<hll><line>1188</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(CLU11_POS)) != 0) {</src></hll>
				<hll><line>1189</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1190</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1191</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1192</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1193</line><src>                .sccml = {1},</src></hll>
				<hll><line>1194</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1195</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1196</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1197</line><src>                .warning = {0,3,3,3,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>1198</line><src>            }</src></hll>
				<hll><line>1199</line><src>        );</src></hll>
				<hll><line>1200</line><src>    }</src></hll>
				<hll><line>1201</line><src></src></hll>
				<hll><line>1202</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(CLU13_POS)) != 0) {</src></hll>
				<hll><line>1203</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1204</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1205</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1206</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1207</line><src>                .sccml = {0},</src></hll>
				<hll><line>1208</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1209</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1210</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>1211</line><src>                .warning = {0,0,0,0,NO_FAULT,0},</src></hll>
				<hll><line>1212</line><src>            }</src></hll>
				<hll><line>1213</line><src>        );</src></hll>
				<hll><line>1214</line><src>    }</src></hll>
				<hll><line>1215</line><src></src></hll>
				<hll><line>1216</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; (BIT(TCS11_POS) | BIT(TCS13_POS) | BIT(ESP12_POS) | BIT(VSM11_POS) | BIT(WHL_SPD11_POS))) != 0) {</src></hll>
				<hll><line>1217</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1218</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1219</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1220</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1221</line><src>                .sccml = {1},</src></hll>
				<hll><line>1222</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1223</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1224</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1225</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>1226</line><src>            }</src></hll>
				<hll><line>1227</line><src>        );</src></hll>
				<hll><line>1228</line><src>    }</src></hll>
				<hll><line>1229</line><src></src></hll>
				<hll><line>1230</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; (BIT(MDPS11_POS) | BIT(MDPS12_POS))) != 0) {</src></hll>
				<hll><line>1231</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1232</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1233</line><src>                .fca = {0,0,0,0,0,0,1,1,1},</src></hll>
				<hll><line>1234</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1235</line><src>                .sccml = {0},</src></hll>
				<hll><line>1236</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1237</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1238</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>1239</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>1240</line><src>            }</src></hll>
				<hll><line>1241</line><src>        );</src></hll>
				<hll><line>1242</line><src>    }</src></hll>
				<hll><line>1243</line><src></src></hll>
				<hll><line>1244</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(SAS11_POS)) != 0) {</src></hll>
				<hll><line>1245</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1246</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1247</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1248</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1249</line><src>                .sccml = {1},</src></hll>
				<hll><line>1250</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1251</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1252</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1253</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>1254</line><src>            }</src></hll>
				<hll><line>1255</line><src>        );</src></hll>
				<hll><line>1256</line><src>    }</src></hll>
				<hll><line>1257</line><src></src></hll>
				<hll><line>1258</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; (BIT(CGW1_POS) | BIT(CGW_PC4_POS) | BIT(CGW_PC5_POS) | BIT(P_STS_POS))) != 0) {</src></hll>
				<hll><line>1259</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1260</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1261</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1262</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1263</line><src>                .sccml = {1},</src></hll>
				<hll><line>1264</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1265</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1266</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1267</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>1268</line><src>            }</src></hll>
				<hll><line>1269</line><src>        );</src></hll>
				<hll><line>1270</line><src>    }</src></hll>
				<hll><line>1271</line><src></src></hll>
				<hll><line>1272</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(CGW2_POS)) != 0) {</src></hll>
				<hll><line>1273</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1274</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1275</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1276</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1277</line><src>                .sccml = {1},</src></hll>
				<hll><line>1278</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1279</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1280</line><src>                .hda = {0,1,1,1},</src></hll>
				<hll><line>1281</line><src>                .warning = {0,3,3,3,HDA_FAULT,5},</src></hll>
				<hll><line>1282</line><src>            }</src></hll>
				<hll><line>1283</line><src>        );</src></hll>
				<hll><line>1284</line><src>    }</src></hll>
				<hll><line>1285</line><src></src></hll>
				<hll><line>1286</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(CGW8_POS)) != 0) {</src></hll>
				<hll><line>1287</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1288</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1289</line><src>                .fca = {0,0,0,0,0,0,1,1,1},</src></hll>
				<hll><line>1290</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1291</line><src>                .sccml = {0},</src></hll>
				<hll><line>1292</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1293</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1294</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>1295</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>1296</line><src>            }</src></hll>
				<hll><line>1297</line><src>        );</src></hll>
				<hll><line>1298</line><src>    }</src></hll>
				<hll><line>1299</line><src></src></hll>
				<hll><line>1300</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; (BIT(EMS12_POS) | BIT(EMS16_POS))) != 0) {</src></hll>
				<hll><line>1301</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1302</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1303</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1304</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1305</line><src>                .sccml = {1},</src></hll>
				<hll><line>1306</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1307</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1308</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1309</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>1310</line><src>            }</src></hll>
				<hll><line>1311</line><src>        );</src></hll>
				<hll><line>1312</line><src>    }</src></hll>
				<hll><line>1313</line><src></src></hll>
				<hll><line>1314</line><src>    if (EMS11_indir.fault) {</src></hll>
				<hll><line>1315</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1316</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1317</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1318</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1319</line><src>                .sccml = {1},</src></hll>
				<hll><line>1320</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1321</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1322</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1323</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>1324</line><src>            }</src></hll>
				<hll><line>1325</line><src>        );</src></hll>
				<hll><line>1326</line><src>    }</src></hll>
				<hll><line>1327</line><src></src></hll>
				<hll><line>1328</line><src>    if (EMS_H12_indir.fault) {</src></hll>
				<hll><line>1329</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1330</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1331</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1332</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1333</line><src>                .sccml = {1},</src></hll>
				<hll><line>1334</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1335</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1336</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>1337</line><src>                .warning = {0,3,3,3,NO_FAULT,0},</src></hll>
				<hll><line>1338</line><src>            }</src></hll>
				<hll><line>1339</line><src>        );</src></hll>
				<hll><line>1340</line><src>    }</src></hll>
				<hll><line>1341</line><src></src></hll>
				<hll><line>1342</line><src>    if (TCU11_indir.fault) {</src></hll>
				<hll><line>1343</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1344</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1345</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1346</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1347</line><src>                .sccml = {1},</src></hll>
				<hll><line>1348</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1349</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1350</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1351</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>1352</line><src>            }</src></hll>
				<hll><line>1353</line><src>        );</src></hll>
				<hll><line>1354</line><src>    }</src></hll>
				<hll><line>1355</line><src></src></hll>
				<hll><line>1356</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(RR_C_RDR_02_50ms_POS)) != 0) {</src></hll>
				<hll><line>1357</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1358</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1359</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1360</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1361</line><src>                .sccml = {0},</src></hll>
				<hll><line>1362</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1363</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1364</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>1365</line><src>                .warning = {0,0,0,0,NO_FAULT,5},</src></hll>
				<hll><line>1366</line><src>            }</src></hll>
				<hll><line>1367</line><src>        );</src></hll>
				<hll><line>1368</line><src>    }</src></hll>
				<hll><line>1369</line><src>#endif /* CCAN */</src></hll>
				<hll><line>1370</line><src></src></hll>
				<hll><line>1371</line><src>    /* NAVI */</src></hll>
				<hll><cov>never</cov><line>1372</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; (BIT(HU_CLU_PE_05_POS) | BIT(HU_GW_PE_01_POS) | BIT(HU_MON_PE_01_POS))) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800034AE</addr><code>7082</code><mnemonic>mov16     d0,#0x7</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034B0</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034B2</addr><code>0000E08F</code><mnemonic>sh        d0,d0,#0x0E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034B6</addr><code>0F26</code><mnemonic>and16     d15,d0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034B8</addr><code>0A6E</code><mnemonic>jz16      d15,0x800034CC</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1373</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1374</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800034BA</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034BE</addr><code>D27022D9</code><mnemonic>lea       a2,[a2]0x2770</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034C2</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034C4</addr><code>FDFCFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800034C8</addr><code>130C006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1375</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1376</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1377</line><src>                .sccml = {0},</src></hll>
				<hll><line>1378</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1379</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1380</line><src>                .hda = {0,0,1,1},</src></hll>
				<hll><line>1381</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1382</line><src>                .sea = {0},</src></hll>
				<hll><line>1383</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1384</line><src>                .warning = {0,0,0,3,HDA_FAULT,5,1},</src></hll>
				<hll><line>1385</line><src>            }</src></hll>
				<hll><line>1386</line><src>        );</src></hll>
				<hll><line>1387</line><src>    }</src></hll>
				<hll><line>1388</line><src></src></hll>
				<hll><line>1389</line><src>#if CCAN == CANFD</src></hll>
				<hll><cov>never</cov><line>1390</line><src>    if ((can_timeout_fault[CHASSIS_0] &amp; BIT(HU_NAVI_V2_POS_PE_POS)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800034CC</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034CE</addr><code>000B1FEF</code><mnemonic>jz.t      d15,#0x11,0x800034E4</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1391</line><src>#elif CCAN == HSCAN</src></hll>
				<hll><line>1392</line><src>    if ((NAVI_V2_POS_indir.fault) != 0) {</src></hll>
				<hll><line>1393</line><src>#endif /* CCAN */</src></hll>
				<hll><line>1394</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1395</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800034D2</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034D6</addr><code>D27022D9</code><mnemonic>lea       a2,[a2]0x2770</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034DA</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034DC</addr><code>FDF0FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800034E0</addr><code>1300006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1396</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1397</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1398</line><src>                .sccml = {0},</src></hll>
				<hll><line>1399</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1400</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1401</line><src>                .hda = {0,0,1,1},</src></hll>
				<hll><line>1402</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1403</line><src>                .sea = {0},</src></hll>
				<hll><line>1404</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1405</line><src>                .warning = {0,0,0,3,HDA_FAULT,5,1},</src></hll>
				<hll><line>1406</line><src>            }</src></hll>
				<hll><line>1407</line><src>        );</src></hll>
				<hll><line>1408</line><src>    }</src></hll>
				<hll><line>1409</line><src></src></hll>
				<hll><line>1410</line><src>    /* ADAS CAN */</src></hll>
				<hll><line>1411</line><src>    uint32 acan_mask, acan_mask2;</src></hll>
				<hll><line>1412</line><src></src></hll>
				<hll><line>1413</line><src>    /* A_FR_RDR_Obj_01 ~ A_FR_RDR_Obj_32, A_FR_RDR_Genrl_01 */</src></hll>
				<hll><line>1414</line><src>    acan_mask = (BIT(A_FR_RDR_Obj_29_50ms_POS + 1) - BIT(A_FR_RDR_Obj_01_50ms_POS)) | BIT(A_FR_RDR_Genrl_01_50ms_POS);</src></hll>
				<hll><line>1415</line><src>    acan_mask2 = (BIT(A_FR_RDR_Obj_32_50ms_POS + 1) - BIT(A_FR_RDR_Obj_30_50ms_POS));</src></hll>
				<hll><cov>never</cov><line>1416</line><src>    if (((can_timeout_fault[A_FR_RDR_0] &amp; acan_mask) || (can_timeout_fault[A_FR_RDR_1] &amp; acan_mask2)) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800034E4</addr><code>0A0CFC49</code><mnemonic>lea       a12,[a15]0x0C</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034E8</addr><code>CF54</code><mnemonic>ld16.w    d15,[a12]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034EA</addr><code>0082</code><mnemonic>mov16     d0,#0x0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034EC</addr><code>F0820FB7</code><mnemonic>insert    d15,d15,#0x0,0x1,#0x2</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034F0</addr><code>04EE</code><mnemonic>jnz16     d15,0x800034F8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034F2</addr><code>4F48</code><mnemonic>ld16.w    d15,[a15]0x10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034F4</addr><code>0716</code><mnemonic>and16     d15,#0x7</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034F6</addr><code>026E</code><mnemonic>jz16      d15,0x800034FA</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034F8</addr><code>1082</code><mnemonic>mov16     d0,#0x1</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800034FA</addr><code>0A76</code><mnemonic>jz16      d0,0x8000350E</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1417</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1418</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800034FC</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003500</addr><code>E25622D9</code><mnemonic>lea       a2,[a2]0x2796</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003504</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003506</addr><code>FDDBFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000350A</addr><code>12EB006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1419</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1420</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1421</line><src>                .sccml = {1},</src></hll>
				<hll><line>1422</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1423</line><src>                .lfa = {0,1},</src></hll>
				<hll><line>1424</line><src>                .hda = {0,1,1,1},</src></hll>
				<hll><line>1425</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1426</line><src>                .sea = {0},</src></hll>
				<hll><line>1427</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1428</line><src>                .warning = {3,3,3,3,HDA_FAULT,5,1},</src></hll>
				<hll><line>1429</line><src>            }</src></hll>
				<hll><line>1430</line><src>        );</src></hll>
				<hll><line>1431</line><src>    }</src></hll>
				<hll><line>1432</line><src></src></hll>
				<hll><line>1433</line><src>    /* A_FR_RDR_ODM_01 */</src></hll>
				<hll><line>1434</line><src>    acan_mask = BIT(A_FR_RDR_ODM_01_50ms_POS);</src></hll>
				<hll><cov>never</cov><line>1435</line><src>    if ((can_timeout_fault[A_FR_RDR_0] &amp; acan_mask) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:8000350E</addr><code>CF54</code><mnemonic>ld16.w    d15,[a12]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003510</addr><code>2A2E</code><mnemonic>jz16.t    d15,#0x2,0x80003524</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1436</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1437</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003512</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003516</addr><code>E27C22D9</code><mnemonic>lea       a2,[a2]0x27BC</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000351A</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000351C</addr><code>FDD0FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80003520</addr><code>12E0006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1438</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1439</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>1440</line><src>                .sccml = {0},</src></hll>
				<hll><line>1441</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1442</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1443</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>1444</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1445</line><src>                .sea = {0},</src></hll>
				<hll><line>1446</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1447</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>1448</line><src>            }</src></hll>
				<hll><line>1449</line><src>        );</src></hll>
				<hll><line>1450</line><src>    }</src></hll>
				<hll><line>1451</line><src></src></hll>
				<hll><line>1452</line><src>    /* A_FR_C_RDR_Obj_30_50ms ~ A_FR_C_RDR_Obj_01_50ms*/</src></hll>
				<hll><line>1453</line><src>    acan_mask = BIT(A_FR_C_RDR_Obj_30_50ms_POS + 1) - BIT(A_FR_C_RDR_Obj_01_50ms_POS);</src></hll>
				<hll><cov>never</cov><line>1454</line><src>    if ((can_timeout_fault[A_FR_C_RDR_0] &amp; acan_mask) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:80003524</addr><code>0A14FC49</code><mnemonic>lea       a12,[a15]0x14</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003528</addr><code>CF54</code><mnemonic>ld16.w    d15,[a12]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000352A</addr><code>F0020FB7</code><mnemonic>insert    d15,d15,#0x0,0x0,#0x2</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000352E</addr><code>086E</code><mnemonic>jz16      d15,0x8000353E</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1455</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1456</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003530</addr><code>FDF0FF61</code><mnemonic>fcall     0x80003110</mnemonic><comment>.cocofun_34</comment></asm>
				<asm><cov>never</cov><addr>P:80003534</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003536</addr><code>FDC3FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000353A</addr><code>12D3006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1457</line><src>                .fca = {0,0,1,0,1,1,1,1,1},</src></hll>
				<hll><line>1458</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>1459</line><src>                .sccml = {0},</src></hll>
				<hll><line>1460</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>1461</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1462</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>1463</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1464</line><src>                .sea = {1},</src></hll>
				<hll><line>1465</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1466</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>1467</line><src>            }</src></hll>
				<hll><line>1468</line><src>        );</src></hll>
				<hll><line>1469</line><src>    }</src></hll>
				<hll><line>1470</line><src></src></hll>
				<hll><line>1471</line><src>    /* A_FR_C_RDR_FS_16_50ms_POS ~ A_FR_C_RDR_FS_01_50ms_POS */</src></hll>
				<hll><line>1472</line><src>    acan_mask = BIT(A_FR_C_RDR_FS_16_50ms_POS + 1) - BIT(A_FR_C_RDR_FS_01_50ms_POS);</src></hll>
				<hll><cov>never</cov><line>1473</line><src>    if (((can_timeout_fault[A_FR_C_RDR_1]) &amp; acan_mask) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:8000353E</addr><code>6F48</code><mnemonic>ld16.w    d15,[a15]0x18</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003540</addr><code>F8100FB7</code><mnemonic>insert    d15,d15,#0x0,0x10,#0x10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003544</addr><code>086E</code><mnemonic>jz16      d15,0x80003554</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1474</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1475</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003546</addr><code>FDE5FF61</code><mnemonic>fcall     0x80003110</mnemonic><comment>.cocofun_34</comment></asm>
				<asm><cov>never</cov><addr>P:8000354A</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000354C</addr><code>FDB8FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80003550</addr><code>12C8006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1476</line><src>                .fca = {0,0,1,0,1,1,1,1,1},</src></hll>
				<hll><line>1477</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>1478</line><src>                .sccml = {0},</src></hll>
				<hll><line>1479</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>1480</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1481</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>1482</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1483</line><src>                .sea = {1},</src></hll>
				<hll><line>1484</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1485</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>1486</line><src>            }</src></hll>
				<hll><line>1487</line><src>        );</src></hll>
				<hll><line>1488</line><src>    }</src></hll>
				<hll><line>1489</line><src></src></hll>
				<hll><line>1490</line><src>    /* A_FR_C_RDR_Genrl_01 */</src></hll>
				<hll><line>1491</line><src>    acan_mask = BIT(A_FR_C_RDR_Genrl_01_50ms_POS);</src></hll>
				<hll><cov>never</cov><line>1492</line><src>    if (((can_timeout_fault[A_FR_C_RDR_0]) &amp; acan_mask) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:80003554</addr><code>CF54</code><mnemonic>ld16.w    d15,[a12]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003556</addr><code>082E</code><mnemonic>jz16.t    d15,#0x0,0x80003566</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1493</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1494</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003558</addr><code>FDDCFF61</code><mnemonic>fcall     0x80003110</mnemonic><comment>.cocofun_34</comment></asm>
				<asm><cov>never</cov><addr>P:8000355C</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000355E</addr><code>FDAFFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80003562</addr><code>12BF006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1495</line><src>                .fca = {0,0,1,0,1,1,1,1,1},</src></hll>
				<hll><line>1496</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>1497</line><src>                .sccml = {0},</src></hll>
				<hll><line>1498</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>1499</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1500</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>1501</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1502</line><src>                .sea = {1},</src></hll>
				<hll><line>1503</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1504</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>1505</line><src>            }</src></hll>
				<hll><line>1506</line><src>        );</src></hll>
				<hll><line>1507</line><src>    }</src></hll>
				<hll><line>1508</line><src></src></hll>
				<hll><line>1509</line><src>    /* A_FR_C_RDR_ODM_01 */</src></hll>
				<hll><line>1510</line><src>    acan_mask = BIT(A_FR_C_RDR_ODM_01_50ms_POS);</src></hll>
				<hll><cov>never</cov><line>1511</line><src>    if (((can_timeout_fault[A_FR_C_RDR_0]) &amp; acan_mask) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:80003566</addr><code>CF54</code><mnemonic>ld16.w    d15,[a12]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003568</addr><code>1A2E</code><mnemonic>jz16.t    d15,#0x1,0x8000357C</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1512</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1513</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:8000356A</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000356E</addr><code>E27C22D9</code><mnemonic>lea       a2,[a2]0x27BC</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003572</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003574</addr><code>FDA4FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80003578</addr><code>12B4006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1514</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1515</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>1516</line><src>                .sccml = {0},</src></hll>
				<hll><line>1517</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1518</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1519</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>1520</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1521</line><src>                .sea = {0},</src></hll>
				<hll><line>1522</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1523</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>1524</line><src>            }</src></hll>
				<hll><line>1525</line><src>        );</src></hll>
				<hll><line>1526</line><src>    }</src></hll>
				<hll><line>1527</line><src></src></hll>
				<hll><line>1528</line><src>    /* A_FR_CMR_Obj_01 ~ A_FR_CMR_Obj_20 */</src></hll>
				<hll><line>1529</line><src>    acan_mask = BIT(A_FR_CMR_Obj_20_30ms_POS + 1) - BIT(A_FR_CMR_Obj_01_30ms_POS);</src></hll>
				<hll><cov>never</cov><line>1530</line><src>    if ((can_timeout_fault[A_FR_CMR_0] &amp; acan_mask) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:8000357C</addr><code>0FFE00BB</code><mnemonic>mov.u     d0,#0xFFE0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003580</addr><code>0A08FC49</code><mnemonic>lea       a12,[a15]0x8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003584</addr><code>001FF09B</code><mnemonic>addih     d0,d0,#0x1FF</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003588</addr><code>CF54</code><mnemonic>ld16.w    d15,[a12]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000358A</addr><code>0F26</code><mnemonic>and16     d15,d0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000358C</addr><code>0A6E</code><mnemonic>jz16      d15,0x800035A0</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1531</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1532</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:8000358E</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003592</addr><code>0288FFD9</code><mnemonic>lea       a15,[a15]0x2808</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003596</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003598</addr><code>FD98FF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:8000359C</addr><code>12A2006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1533</line><src>                .fca = {0,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1534</line><src>                .scc = {0,0,1,1},</src></hll>
				<hll><line>1535</line><src>                .sccml = {0},</src></hll>
				<hll><line>1536</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>1537</line><src>                .lfa = {0,1},</src></hll>
				<hll><line>1538</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>1539</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1540</line><src>                .sea = {0},</src></hll>
				<hll><line>1541</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1542</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>1543</line><src>            }</src></hll>
				<hll><line>1544</line><src>        );</src></hll>
				<hll><line>1545</line><src>    }</src></hll>
				<hll><line>1546</line><src></src></hll>
				<hll><line>1547</line><src>    /* A_FR_CMR_Ln_01, A_FR_CMR_Ln_03 */</src></hll>
				<hll><line>1548</line><src>    acan_mask = BIT(A_FR_CMR_Ln_01_50ms_POS) | BIT(A_FR_CMR_Ln_03_50ms_POS);</src></hll>
				<hll><cov>never</cov><line>1549</line><src>    if ((can_timeout_fault[A_FR_CMR_0] &amp; acan_mask) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800035A0</addr><code>CF54</code><mnemonic>ld16.w    d15,[a12]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035A2</addr><code>1416</code><mnemonic>and16     d15,#0x14</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035A4</addr><code>0A6E</code><mnemonic>jz16      d15,0x800035B8</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1550</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1551</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800035A6</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035AA</addr><code>02AEFFD9</code><mnemonic>lea       a15,[a15]0x282E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035AE</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035B0</addr><code>FD8CFF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:800035B4</addr><code>1296006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1552</line><src>                .fca = {0,0,0,0,0,0,1,1,1},</src></hll>
				<hll><line>1553</line><src>                .scc = {0,0,1,1},</src></hll>
				<hll><line>1554</line><src>                .sccml = {0},</src></hll>
				<hll><line>1555</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>1556</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1557</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>1558</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1559</line><src>                .sea = {0},</src></hll>
				<hll><line>1560</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1561</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1562</line><src>            }</src></hll>
				<hll><line>1563</line><src>        );</src></hll>
				<hll><line>1564</line><src>    }</src></hll>
				<hll><line>1565</line><src></src></hll>
				<hll><line>1566</line><src>    /* A_FR_CMR_Ln_02 */</src></hll>
				<hll><line>1567</line><src>    acan_mask = BIT(A_FR_CMR_Ln_02_50ms_POS);</src></hll>
				<hll><cov>never</cov><line>1568</line><src>    if ((can_timeout_fault[A_FR_CMR_0] &amp; acan_mask) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800035B8</addr><code>CF54</code><mnemonic>ld16.w    d15,[a12]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035BA</addr><code>3A2E</code><mnemonic>jz16.t    d15,#0x3,0x800035CE</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1569</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1570</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800035BC</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035C0</addr><code>1294FFD9</code><mnemonic>lea       a15,[a15]0x2854</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035C4</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035C6</addr><code>FD81FF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:800035CA</addr><code>128B006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1571</line><src>                .fca = {0,0,0,0,0,0,1,1,0},</src></hll>
				<hll><line>1572</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1573</line><src>                .sccml = {0},</src></hll>
				<hll><line>1574</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>1575</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1576</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>1577</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1578</line><src>                .sea = {0},</src></hll>
				<hll><line>1579</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1580</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>1581</line><src>            }</src></hll>
				<hll><line>1582</line><src>        );</src></hll>
				<hll><line>1583</line><src>    }</src></hll>
				<hll><line>1584</line><src></src></hll>
				<hll><line>1585</line><src>    /* A_FR_CMR_Genrl_01 */</src></hll>
				<hll><line>1586</line><src>    acan_mask = BIT(A_FR_CMR_Genrl_01_30ms_POS);</src></hll>
				<hll><cov>never</cov><line>1587</line><src>    if ((can_timeout_fault[A_FR_CMR_0] &amp; acan_mask) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800035CE</addr><code>CF54</code><mnemonic>ld16.w    d15,[a12]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035D0</addr><code>1A2E</code><mnemonic>jz16.t    d15,#0x1,0x800035E4</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1588</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1589</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800035D2</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035D6</addr><code>12BAFFD9</code><mnemonic>lea       a15,[a15]0x287A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035DA</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035DC</addr><code>FD76FF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:800035E0</addr><code>1280006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1590</line><src>                .fca = {0,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1591</line><src>                .scc = {0,0,1,1},</src></hll>
				<hll><line>1592</line><src>                .sccml = {0},</src></hll>
				<hll><line>1593</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>1594</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1595</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>1596</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1597</line><src>                .sea = {0},</src></hll>
				<hll><line>1598</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1599</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1600</line><src>            }</src></hll>
				<hll><line>1601</line><src>        );</src></hll>
				<hll><line>1602</line><src>    }</src></hll>
				<hll><line>1603</line><src></src></hll>
				<hll><line>1604</line><src>    /* A_ADAS_CMD_30 (= A_FR_CMR_Ctrl_01) */</src></hll>
				<hll><line>1605</line><src>    acan_mask = BIT(A_FR_CMR_Ctrl_01_10ms_POS);</src></hll>
				<hll><cov>never</cov><line>1606</line><src>    if ((can_timeout_fault[A_FR_CMR_0] &amp; acan_mask) != 0) {</src></hll>
				<asm><cov>never</cov><addr>P:800035E4</addr><code>CF54</code><mnemonic>ld16.w    d15,[a12]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035E6</addr><code>0A2E</code><mnemonic>jz16.t    d15,#0x0,0x800035FA</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1607</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1608</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800035E8</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035EC</addr><code>6284FFD9</code><mnemonic>lea       a15,[a15]0x2984</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035F0</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800035F2</addr><code>FD6BFF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:800035F6</addr><code>1275001D</code><mnemonic>j         0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_CANTimeout" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_CANTimeout.c">
				<hll><line>1609</line><src>                .fca = {0,0,0,0,0,0,1,1,1},</src></hll>
				<hll><line>1610</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1611</line><src>                .sccml = {0},</src></hll>
				<hll><line>1612</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1613</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1614</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>1615</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1616</line><src>                .sea = {0},</src></hll>
				<hll><line>1617</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1618</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1619</line><src>            }</src></hll>
				<hll><line>1620</line><src>        );</src></hll>
				<hll><line>1621</line><src>    }</src></hll>
				<hll><cov>never</cov><line>1622</line><src>}</src></hll>
				<asm><cov>never</cov><addr>P:800035FA</addr><code>9000</code><mnemonic>ret16     </mnemonic></asm>
			</mixed>
		</List.EXPORT>
	</listing>
</TRACE32>
