<?xml version="1.0" encoding="iso-8859-1" standalone="no" ?>
<?xml-stylesheet type="text/xsl" href="t32transform.xsl"?>
<TRACE32 file="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Gen\20210524_TRACE32_20_02\Failsafe-TestSpec_RS4_Temp4_210518\Report\Total\Test\FS_InvalidSignal\func-p-80003fe6-8000458b.xml">
	<coverage>
		<COVerage.EXPORT.ListLine ts="1621823194" t32ver="R.2020.09.000128638" t32pv="TRICORE" cpu="TC397XE" metric="object">
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\Rte_SWC_Diag</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>-</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>0</never>
				<bytes>638</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_HWFailure</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>16</never>
				<bytes>236</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\SWC_Failsafe</tree>
				<cov>partial</cov>
				<exec metric="object">0.600%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>16</never>
				<bytes>1666</bytes>
				<bytesok>10</bytesok>
			</module>
			<module>
				<addrFrom>P:80002DEA</addrFrom>
				<addrTo>P:80002F83</addrTo>
				<tree>\\Test\FS_BatteryVoltage</tree>
				<cov>partial</cov>
				<exec metric="object">59.512%</exec>
				<branches>52.000%</branches>
				<ok>8</ok>
				<taken>3</taken>
				<nottaken>7</nottaken>
				<never>7</never>
				<bytes>410</bytes>
				<bytesok>244</bytesok>
			</module>
			<module>
				<addrFrom>P:80002F84</addrFrom>
				<addrTo>P:800030BB</addrTo>
				<tree>\\Test\FS_CANBusOff</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>17</never>
				<bytes>312</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_CANTimeout</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>350</never>
				<bytes>2458</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_InvalidSignal</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>350</never>
				<bytes>6758</bytes>
				<bytesok>0</bytesok>
				<function>
					<addrFrom>P:80003FE6</addrFrom>
					<addrTo>P:8000458B</addrTo>
					<tree uid="p-80003fe6-8000458b">\\Test\FS_InvalidSignal\FS_SetInhibit_InvalidSignal</tree>
					<cov>never</cov>
					<exec metric="object">0.000%</exec>
					<branches>0.000%</branches>
					<ok>0</ok>
					<taken>0</taken>
					<nottaken>0</nottaken>
					<never>60</never>
					<bytes>1446</bytes>
					<bytesok>0</bytesok>
					<line>
						<addrFrom>P:80003FE6</addrFrom>
						<addrTo>P:80003FE7</addrTo>
						<tree>FS_InvalidSignal.c \1792--1795</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>2</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003FE8</addrFrom>
						<addrTo>P:80003FEF</addrTo>
						<tree>FS_InvalidSignal.c \1796--1800</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>8</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003FF0</addrFrom>
						<addrTo>P:80003FFD</addrTo>
						<tree>FS_InvalidSignal.c \1801--1802</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003FFE</addrFrom>
						<addrTo>P:80004001</addrTo>
						<tree>FS_InvalidSignal.c \1803--1816</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004002</addrFrom>
						<addrTo>P:80004013</addrTo>
						<tree>FS_InvalidSignal.c \1817--1818</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004014</addrFrom>
						<addrTo>P:80004017</addrTo>
						<tree>FS_InvalidSignal.c \1819--1832</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004018</addrFrom>
						<addrTo>P:80004029</addrTo>
						<tree>FS_InvalidSignal.c \1833--1834</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000402A</addrFrom>
						<addrTo>P:80004033</addrTo>
						<tree>FS_InvalidSignal.c \1835--1850</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>10</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004034</addrFrom>
						<addrTo>P:80004045</addrTo>
						<tree>FS_InvalidSignal.c \1851--1852</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004046</addrFrom>
						<addrTo>P:80004051</addrTo>
						<tree>FS_InvalidSignal.c \1853--1975</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004052</addrFrom>
						<addrTo>P:80004063</addrTo>
						<tree>FS_InvalidSignal.c \1976--1977</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004064</addrFrom>
						<addrTo>P:80004067</addrTo>
						<tree>FS_InvalidSignal.c \1978--1991</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004068</addrFrom>
						<addrTo>P:80004079</addrTo>
						<tree>FS_InvalidSignal.c \1992--1993</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000407A</addrFrom>
						<addrTo>P:80004085</addrTo>
						<tree>FS_InvalidSignal.c \1994--2008</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004086</addrFrom>
						<addrTo>P:80004097</addrTo>
						<tree>FS_InvalidSignal.c \2009--2010</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004098</addrFrom>
						<addrTo>P:8000409B</addrTo>
						<tree>FS_InvalidSignal.c \2011--2024</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000409C</addrFrom>
						<addrTo>P:800040AD</addrTo>
						<tree>FS_InvalidSignal.c \2025--2026</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800040AE</addrFrom>
						<addrTo>P:800040B9</addrTo>
						<tree>FS_InvalidSignal.c \2027--2042</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800040BA</addrFrom>
						<addrTo>P:800040CB</addrTo>
						<tree>FS_InvalidSignal.c \2043--2044</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800040CC</addrFrom>
						<addrTo>P:800040CF</addrTo>
						<tree>FS_InvalidSignal.c \2045--2058</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800040D0</addrFrom>
						<addrTo>P:800040E1</addrTo>
						<tree>FS_InvalidSignal.c \2059--2060</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800040E2</addrFrom>
						<addrTo>P:800040E5</addrTo>
						<tree>FS_InvalidSignal.c \2061--2074</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800040E6</addrFrom>
						<addrTo>P:800040F7</addrTo>
						<tree>FS_InvalidSignal.c \2075--2076</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800040F8</addrFrom>
						<addrTo>P:800040FD</addrTo>
						<tree>FS_InvalidSignal.c \2077--2090</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800040FE</addrFrom>
						<addrTo>P:8000410F</addrTo>
						<tree>FS_InvalidSignal.c \2091--2092</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004110</addrFrom>
						<addrTo>P:80004115</addrTo>
						<tree>FS_InvalidSignal.c \2093--2106</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004116</addrFrom>
						<addrTo>P:80004127</addrTo>
						<tree>FS_InvalidSignal.c \2107--2108</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004128</addrFrom>
						<addrTo>P:8000412D</addrTo>
						<tree>FS_InvalidSignal.c \2109--2122</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000412E</addrFrom>
						<addrTo>P:8000413B</addrTo>
						<tree>FS_InvalidSignal.c \2123--2124</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000413C</addrFrom>
						<addrTo>P:80004141</addrTo>
						<tree>FS_InvalidSignal.c \2125--2138</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004142</addrFrom>
						<addrTo>P:80004153</addrTo>
						<tree>FS_InvalidSignal.c \2139--2140</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004154</addrFrom>
						<addrTo>P:80004159</addrTo>
						<tree>FS_InvalidSignal.c \2141--2154</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000415A</addrFrom>
						<addrTo>P:80004167</addrTo>
						<tree>FS_InvalidSignal.c \2155--2156</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004168</addrFrom>
						<addrTo>P:8000416D</addrTo>
						<tree>FS_InvalidSignal.c \2157--2170</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000416E</addrFrom>
						<addrTo>P:8000417F</addrTo>
						<tree>FS_InvalidSignal.c \2171--2172</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004180</addrFrom>
						<addrTo>P:80004185</addrTo>
						<tree>FS_InvalidSignal.c \2173--2187</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004186</addrFrom>
						<addrTo>P:80004197</addrTo>
						<tree>FS_InvalidSignal.c \2188--2189</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004198</addrFrom>
						<addrTo>P:800041A1</addrTo>
						<tree>FS_InvalidSignal.c \2190--2205</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>10</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800041A2</addrFrom>
						<addrTo>P:800041B3</addrTo>
						<tree>FS_InvalidSignal.c \2206--2207</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800041B4</addrFrom>
						<addrTo>P:800041C9</addrTo>
						<tree>FS_InvalidSignal.c \2208--2223</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>3</never>
						<bytes>22</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800041CA</addrFrom>
						<addrTo>P:800041D7</addrTo>
						<tree>FS_InvalidSignal.c \2224--2225</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800041D8</addrFrom>
						<addrTo>P:800041DB</addrTo>
						<tree>FS_InvalidSignal.c \2226--2239</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800041DC</addrFrom>
						<addrTo>P:800041E9</addrTo>
						<tree>FS_InvalidSignal.c \2240--2241</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800041EA</addrFrom>
						<addrTo>P:800041EF</addrTo>
						<tree>FS_InvalidSignal.c \2242--2256</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800041F0</addrFrom>
						<addrTo>P:800041FD</addrTo>
						<tree>FS_InvalidSignal.c \2257--2258</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>14</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800041FE</addrFrom>
						<addrTo>P:80004203</addrTo>
						<tree>FS_InvalidSignal.c \2259--2272</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004204</addrFrom>
						<addrTo>P:80004215</addrTo>
						<tree>FS_InvalidSignal.c \2273--2274</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004216</addrFrom>
						<addrTo>P:8000421F</addrTo>
						<tree>FS_InvalidSignal.c \2275--2289</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>10</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004220</addrFrom>
						<addrTo>P:80004231</addrTo>
						<tree>FS_InvalidSignal.c \2290--2291</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004232</addrFrom>
						<addrTo>P:8000423D</addrTo>
						<tree>FS_InvalidSignal.c \2292--2306</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000423E</addrFrom>
						<addrTo>P:8000424F</addrTo>
						<tree>FS_InvalidSignal.c \2307--2308</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004250</addrFrom>
						<addrTo>P:80004253</addrTo>
						<tree>FS_InvalidSignal.c \2309--2322</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004254</addrFrom>
						<addrTo>P:80004265</addrTo>
						<tree>FS_InvalidSignal.c \2323--2324</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004266</addrFrom>
						<addrTo>P:80004271</addrTo>
						<tree>FS_InvalidSignal.c \2325--2339</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004272</addrFrom>
						<addrTo>P:80004283</addrTo>
						<tree>FS_InvalidSignal.c \2340--2341</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004284</addrFrom>
						<addrTo>P:80004287</addrTo>
						<tree>FS_InvalidSignal.c \2342--2355</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004288</addrFrom>
						<addrTo>P:80004299</addrTo>
						<tree>FS_InvalidSignal.c \2356--2357</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000429A</addrFrom>
						<addrTo>P:800042A3</addrTo>
						<tree>FS_InvalidSignal.c \2358--2372</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>10</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800042A4</addrFrom>
						<addrTo>P:800042B5</addrTo>
						<tree>FS_InvalidSignal.c \2373--2374</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800042B6</addrFrom>
						<addrTo>P:800042BF</addrTo>
						<tree>FS_InvalidSignal.c \2375--2390</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>10</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800042C0</addrFrom>
						<addrTo>P:800042D1</addrTo>
						<tree>FS_InvalidSignal.c \2391--2392</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800042D2</addrFrom>
						<addrTo>P:800042DB</addrTo>
						<tree>FS_InvalidSignal.c \2393--2408</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>10</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800042DC</addrFrom>
						<addrTo>P:800042ED</addrTo>
						<tree>FS_InvalidSignal.c \2409--2410</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800042EE</addrFrom>
						<addrTo>P:800042F9</addrTo>
						<tree>FS_InvalidSignal.c \2411--2650</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800042FA</addrFrom>
						<addrTo>P:8000430B</addrTo>
						<tree>FS_InvalidSignal.c \2651--2652</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000430C</addrFrom>
						<addrTo>P:8000430F</addrTo>
						<tree>FS_InvalidSignal.c \2653--2667</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004310</addrFrom>
						<addrTo>P:80004321</addrTo>
						<tree>FS_InvalidSignal.c \2668--2669</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004322</addrFrom>
						<addrTo>P:8000432D</addrTo>
						<tree>FS_InvalidSignal.c \2670--2685</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>12</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000432E</addrFrom>
						<addrTo>P:8000433F</addrTo>
						<tree>FS_InvalidSignal.c \2686--2687</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004340</addrFrom>
						<addrTo>P:80004343</addrTo>
						<tree>FS_InvalidSignal.c \2688--2701</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004344</addrFrom>
						<addrTo>P:80004355</addrTo>
						<tree>FS_InvalidSignal.c \2702--2703</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004356</addrFrom>
						<addrTo>P:80004359</addrTo>
						<tree>FS_InvalidSignal.c \2704--2717</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000435A</addrFrom>
						<addrTo>P:8000436B</addrTo>
						<tree>FS_InvalidSignal.c \2718--2719</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000436C</addrFrom>
						<addrTo>P:80004373</addrTo>
						<tree>FS_InvalidSignal.c \2720--2734</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>8</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004374</addrFrom>
						<addrTo>P:8000437B</addrTo>
						<tree>FS_InvalidSignal.c \2735--2735</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>8</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000437C</addrFrom>
						<addrTo>P:8000438D</addrTo>
						<tree>FS_InvalidSignal.c \2736--2737</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000438E</addrFrom>
						<addrTo>P:80004391</addrTo>
						<tree>FS_InvalidSignal.c \2738--2751</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004392</addrFrom>
						<addrTo>P:80004399</addrTo>
						<tree>FS_InvalidSignal.c \2752--2752</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>8</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000439A</addrFrom>
						<addrTo>P:800043AB</addrTo>
						<tree>FS_InvalidSignal.c \2753--2754</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800043AC</addrFrom>
						<addrTo>P:800043B3</addrTo>
						<tree>FS_InvalidSignal.c \2755--2770</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>8</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800043B4</addrFrom>
						<addrTo>P:800043C5</addrTo>
						<tree>FS_InvalidSignal.c \2771--2772</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800043C6</addrFrom>
						<addrTo>P:800043C9</addrTo>
						<tree>FS_InvalidSignal.c \2773--2786</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800043CA</addrFrom>
						<addrTo>P:800043DB</addrTo>
						<tree>FS_InvalidSignal.c \2787--2788</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800043DC</addrFrom>
						<addrTo>P:800043DF</addrTo>
						<tree>FS_InvalidSignal.c \2789--2802</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800043E0</addrFrom>
						<addrTo>P:800043F1</addrTo>
						<tree>FS_InvalidSignal.c \2803--2804</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800043F2</addrFrom>
						<addrTo>P:800043F7</addrTo>
						<tree>FS_InvalidSignal.c \2805--2818</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800043F8</addrFrom>
						<addrTo>P:80004409</addrTo>
						<tree>FS_InvalidSignal.c \2819--2820</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000440A</addrFrom>
						<addrTo>P:8000440F</addrTo>
						<tree>FS_InvalidSignal.c \2821--2834</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004410</addrFrom>
						<addrTo>P:80004421</addrTo>
						<tree>FS_InvalidSignal.c \2835--2836</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004422</addrFrom>
						<addrTo>P:80004427</addrTo>
						<tree>FS_InvalidSignal.c \2837--2850</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004428</addrFrom>
						<addrTo>P:80004439</addrTo>
						<tree>FS_InvalidSignal.c \2851--2852</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000443A</addrFrom>
						<addrTo>P:8000443F</addrTo>
						<tree>FS_InvalidSignal.c \2853--2866</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004440</addrFrom>
						<addrTo>P:80004451</addrTo>
						<tree>FS_InvalidSignal.c \2867--2868</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004452</addrFrom>
						<addrTo>P:80004457</addrTo>
						<tree>FS_InvalidSignal.c \2869--2882</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004458</addrFrom>
						<addrTo>P:80004469</addrTo>
						<tree>FS_InvalidSignal.c \2883--2884</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000446A</addrFrom>
						<addrTo>P:8000446F</addrTo>
						<tree>FS_InvalidSignal.c \2885--2898</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004470</addrFrom>
						<addrTo>P:80004481</addrTo>
						<tree>FS_InvalidSignal.c \2899--2900</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004482</addrFrom>
						<addrTo>P:80004487</addrTo>
						<tree>FS_InvalidSignal.c \2901--2914</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004488</addrFrom>
						<addrTo>P:80004499</addrTo>
						<tree>FS_InvalidSignal.c \2915--2916</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000449A</addrFrom>
						<addrTo>P:8000449F</addrTo>
						<tree>FS_InvalidSignal.c \2917--2931</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800044A0</addrFrom>
						<addrTo>P:800044B1</addrTo>
						<tree>FS_InvalidSignal.c \2932--2933</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800044B2</addrFrom>
						<addrTo>P:800044B7</addrTo>
						<tree>FS_InvalidSignal.c \2934--2947</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800044B8</addrFrom>
						<addrTo>P:800044C9</addrTo>
						<tree>FS_InvalidSignal.c \2948--2949</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800044CA</addrFrom>
						<addrTo>P:800044CF</addrTo>
						<tree>FS_InvalidSignal.c \2950--2963</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800044D0</addrFrom>
						<addrTo>P:800044E1</addrTo>
						<tree>FS_InvalidSignal.c \2964--2965</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800044E2</addrFrom>
						<addrTo>P:800044E7</addrTo>
						<tree>FS_InvalidSignal.c \2966--2979</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800044E8</addrFrom>
						<addrTo>P:800044F9</addrTo>
						<tree>FS_InvalidSignal.c \2980--2981</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:800044FA</addrFrom>
						<addrTo>P:800044FF</addrTo>
						<tree>FS_InvalidSignal.c \2982--2995</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004500</addrFrom>
						<addrTo>P:80004511</addrTo>
						<tree>FS_InvalidSignal.c \2996--2997</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004512</addrFrom>
						<addrTo>P:80004517</addrTo>
						<tree>FS_InvalidSignal.c \2998--3011</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004518</addrFrom>
						<addrTo>P:80004529</addrTo>
						<tree>FS_InvalidSignal.c \3012--3013</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000452A</addrFrom>
						<addrTo>P:8000452F</addrTo>
						<tree>FS_InvalidSignal.c \3014--3027</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004530</addrFrom>
						<addrTo>P:80004541</addrTo>
						<tree>FS_InvalidSignal.c \3028--3029</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004542</addrFrom>
						<addrTo>P:80004547</addrTo>
						<tree>FS_InvalidSignal.c \3030--3043</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004548</addrFrom>
						<addrTo>P:80004559</addrTo>
						<tree>FS_InvalidSignal.c \3044--3045</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000455A</addrFrom>
						<addrTo>P:8000455F</addrTo>
						<tree>FS_InvalidSignal.c \3046--3059</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004560</addrFrom>
						<addrTo>P:80004571</addrTo>
						<tree>FS_InvalidSignal.c \3060--3061</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004572</addrFrom>
						<addrTo>P:80004577</addrTo>
						<tree>FS_InvalidSignal.c \3062--3075</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>1</never>
						<bytes>6</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80004578</addrFrom>
						<addrTo>P:80004589</addrTo>
						<tree>FS_InvalidSignal.c \3076--3077</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>18</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:8000458A</addrFrom>
						<addrTo>P:8000458B</addrTo>
						<tree>FS_InvalidSignal.c \3078--3092</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>2</bytes>
						<bytesok>0</bytesok>
					</line>
					<total>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>0.000%</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>60</never>
						<bytes>1446</bytes>
						<bytesok>0</bytesok>
					</total>
				</function>
				<total>
					<cov>never</cov>
					<exec metric="object">0.000%</exec>
					<branches>0.000%</branches>
					<ok>0</ok>
					<taken>0</taken>
					<nottaken>0</nottaken>
					<never>60</never>
					<bytes>1446</bytes>
					<bytesok>0</bytesok>
				</total>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_SWFailure</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>17</never>
				<bytes>304</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>5</never>
				<bytes>806</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart_tc1</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>402</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart_tc2</tree>
				<cov>partial</cov>
				<exec metric="object">81.094%</exec>
				<branches>87.500%</branches>
				<ok>3</ok>
				<taken>0</taken>
				<nottaken>1</nottaken>
				<never>0</never>
				<bytes>402</bytes>
				<bytesok>326</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart_tc3</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_main</tree>
				<cov>partial</cov>
				<exec metric="object">27.835%</exec>
				<branches>31.818%</branches>
				<ok>1</ok>
				<taken>4</taken>
				<nottaken>1</nottaken>
				<never>5</never>
				<bytes>388</bytes>
				<bytesok>108</bytesok>
			</module>
			<module>
				<addrFrom>P:800065B6</addrFrom>
				<addrTo>P:8000674B</addrTo>
				<tree>\\Test\prost_cstart_tc4</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>P:8000674C</addrFrom>
				<addrTo>P:800068E1</addrTo>
				<tree>\\Test\prost_cstart_tc5</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>P:80006A62</addrFrom>
				<addrTo>P:80006A91</addrTo>
				<tree>\\Test\prost_stubs</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>2</never>
				<bytes>48</bytes>
				<bytesok>0</bytesok>
			</module>
			<total>
				<cov>partial</cov>
				<exec metric="object">4.287%</exec>
				<branches>2.412%</branches>
				<ok>12</ok>
				<taken>7</taken>
				<nottaken>9</nottaken>
				<never>801</never>
				<bytes>16046</bytes>
				<bytesok>688</bytesok>
			</total>
		</COVerage.EXPORT.ListLine>
	</coverage>
	<marker>
		<BookMark.EXPORT ts="1621823194" t32ver="R.2020.09.000128638" t32pv="TRICORE" cpu="TC397XE">
		</BookMark.EXPORT>
	</marker>
	<listing>
		<List.EXPORT ts="1621823194" t32ver="R.2020.09.000128638" t32pv="TRICORE" order="source">
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1792</line><src>     || fr_c_rdr[FR_C_RDR_C188186_5].fault || fr_c_rdr[FR_C_RDR_C188186_6].fault || fr_c_rdr[FR_C_RDR_C188186_7].fault || fr_c_rdr[FR_C_RDR_C188186_8].fault || fr_c_rdr[FR_C_RDR_C188186_8].fault));</src></hll>
				<hll><line>1793</line><src>}</src></hll>
				<hll><line>1794</line><src></src></hll>
				<hll><cov>never</cov><line>1795</line><src>void FS_SetInhibit_InvalidSignal(void)</src></hll>
				<asm><cov>never</cov><addr>P:80003FE6</addr><code>2820</code><label>FS_SetInhibit_InvalidSignal:                                                                                                                                                                                                                                    </label><mnemonic>sub16.a   a10,#0x28</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1796</line><src>{</src></hll>
				<hll><line>1797</line><src>#if CCAN == CANFD</src></hll>
				<hll><line>1798</line><src>#if VEH_TYPE == NORMAL</src></hll>
				<hll><line>1799</line><src>    /* EMS */</src></hll>
				<hll><cov>never</cov><line>1800</line><src>    if (ems[EMS_C161386_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80003FE8</addr><code>FE8AFF61</code><mnemonic>fcall     0x80003CFC</mnemonic><comment>.cocofun_81</comment></asm>
				<asm><cov>never</cov><addr>P:80003FEC</addr><code>FF14</code><mnemonic>ld16.bu   d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003FEE</addr><code>185E</code><mnemonic>jne16     d15,#0x1,0x80003FFE</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1801</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1802</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80003FF0</addr><code>FE61FF61</code><mnemonic>fcall     0x80003CB2</mnemonic><comment>.cocofun_74</comment></asm>
				<asm><cov>never</cov><addr>P:80003FF4</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003FF6</addr><code>F863FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80003FFA</addr><code>0D73006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1803</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1804</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1805</line><src>                .sccml = {1},</src></hll>
				<hll><line>1806</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1807</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1808</line><src>                .hda = {0,1,1,1},</src></hll>
				<hll><line>1809</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1810</line><src>                .sea = {0},</src></hll>
				<hll><line>1811</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1812</line><src>                .warning = {0,3,3,3,HDA_FAULT,5,1},</src></hll>
				<hll><line>1813</line><src>            }</src></hll>
				<hll><line>1814</line><src>        );</src></hll>
				<hll><line>1815</line><src>    }</src></hll>
				<hll><cov>never</cov><line>1816</line><src>    if (ems[EMS_C161386_1].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80003FFE</addr><code>6F08</code><mnemonic>ld16.bu   d15,[a15]0x6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004000</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004014</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1817</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1818</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004002</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004006</addr><code>726822D9</code><mnemonic>lea       a2,[a2]0x25E8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000400A</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000400C</addr><code>F858FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004010</addr><code>0D68006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1819</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1820</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1821</line><src>                .sccml = {1},</src></hll>
				<hll><line>1822</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1823</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1824</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1825</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1826</line><src>                .sea = {1},</src></hll>
				<hll><line>1827</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1828</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1829</line><src>            }</src></hll>
				<hll><line>1830</line><src>        );</src></hll>
				<hll><line>1831</line><src>    }</src></hll>
				<hll><cov>never</cov><line>1832</line><src>    if (ems[EMS_C161386_2].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004014</addr><code>CF08</code><mnemonic>ld16.bu   d15,[a15]0x0C</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004016</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x8000402A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1833</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1834</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004018</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000401C</addr><code>E28AFFD9</code><mnemonic>lea       a15,[a15]0x2B8A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004020</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004022</addr><code>F853FF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:80004026</addr><code>0D5D006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1835</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1836</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1837</line><src>                .sccml = {0},</src></hll>
				<hll><line>1838</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1839</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1840</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>1841</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1842</line><src>                .sea = {1},</src></hll>
				<hll><line>1843</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1844</line><src>                .warning = {3,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>1845</line><src>            }</src></hll>
				<hll><line>1846</line><src>        );</src></hll>
				<hll><line>1847</line><src>    }</src></hll>
				<hll><line>1848</line><src></src></hll>
				<hll><line>1849</line><src>    /* TCU */</src></hll>
				<hll><cov>never</cov><line>1850</line><src>    if (tcu[TCU_C164686_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:8000402A</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000402E</addr><code>4072FF39</code><mnemonic>ld.bu     d15,[a15]0x532</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004032</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004046</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1851</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1852</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004034</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004038</addr><code>7268FFD9</code><mnemonic>lea       a15,[a15]0x25E8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000403C</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000403E</addr><code>F845FF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:80004042</addr><code>0D4F006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1853</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1854</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1855</line><src>                .sccml = {1},</src></hll>
				<hll><line>1856</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1857</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1858</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1859</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1860</line><src>                .sea = {1},</src></hll>
				<hll><line>1861</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1862</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1863</line><src>            }</src></hll>
				<hll><line>1864</line><src>        );</src></hll>
				<hll><line>1865</line><src>    }</src></hll>
				<hll><line>1866</line><src></src></hll>
				<hll><line>1867</line><src>#elif VEH_TYPE == EV</src></hll>
				<hll><line>1868</line><src>    /* VCU */</src></hll>
				<hll><line>1869</line><src>    if (vcu[VCU_C161C86_0].fault == TRUE) {</src></hll>
				<hll><line>1870</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1871</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1872</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1873</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1874</line><src>                .sccml = {1},</src></hll>
				<hll><line>1875</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1876</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1877</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1878</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1879</line><src>                .sea = {1},</src></hll>
				<hll><line>1880</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1881</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1882</line><src>            }</src></hll>
				<hll><line>1883</line><src>        );</src></hll>
				<hll><line>1884</line><src>    }</src></hll>
				<hll><line>1885</line><src>    if (vcu[VCU_C161C86_1].fault == TRUE) {</src></hll>
				<hll><line>1886</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1887</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1888</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1889</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1890</line><src>                .sccml = {1},</src></hll>
				<hll><line>1891</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1892</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1893</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>1894</line><src>                .bca = {0,0},</src></hll>
				<hll><line>1895</line><src>                .sea = {0},</src></hll>
				<hll><line>1896</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>1897</line><src>                .warning = {0,3,3,3,NO_FAULT,0,1},</src></hll>
				<hll><line>1898</line><src>            }</src></hll>
				<hll><line>1899</line><src>        );</src></hll>
				<hll><line>1900</line><src>    }</src></hll>
				<hll><line>1901</line><src></src></hll>
				<hll><line>1902</line><src>#elif VEH_TYPE == HEV</src></hll>
				<hll><line>1903</line><src>    /* EMS */</src></hll>
				<hll><line>1904</line><src>    if (ems[EMS_C161386_0].fault == TRUE) {</src></hll>
				<hll><line>1905</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1906</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1907</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1908</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1909</line><src>                .sccml = {1},</src></hll>
				<hll><line>1910</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1911</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1912</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1913</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1914</line><src>                .sea = {1},</src></hll>
				<hll><line>1915</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1916</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1917</line><src>            }</src></hll>
				<hll><line>1918</line><src>        );</src></hll>
				<hll><line>1919</line><src>    }</src></hll>
				<hll><line>1920</line><src></src></hll>
				<hll><line>1921</line><src>    /* HCU */</src></hll>
				<hll><line>1922</line><src>    if (hcu[HCU_C161C86_0].fault == TRUE) {</src></hll>
				<hll><line>1923</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1924</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1925</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1926</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1927</line><src>                .sccml = {1},</src></hll>
				<hll><line>1928</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1929</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1930</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1931</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1932</line><src>                .sea = {1},</src></hll>
				<hll><line>1933</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1934</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1935</line><src>            }</src></hll>
				<hll><line>1936</line><src>        );</src></hll>
				<hll><line>1937</line><src>    }</src></hll>
				<hll><line>1938</line><src>    if (hcu[HCU_C161C86_1].fault == TRUE) {</src></hll>
				<hll><line>1939</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1940</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1941</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1942</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1943</line><src>                .sccml = {0},</src></hll>
				<hll><line>1944</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1945</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1946</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>1947</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1948</line><src>                .sea = {1},</src></hll>
				<hll><line>1949</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1950</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>1951</line><src>            }</src></hll>
				<hll><line>1952</line><src>        );</src></hll>
				<hll><line>1953</line><src>    }</src></hll>
				<hll><line>1954</line><src></src></hll>
				<hll><line>1955</line><src>    /* HTCU */</src></hll>
				<hll><line>1956</line><src>    if (htcu[HTCU_C164686_0].fault == TRUE) {</src></hll>
				<hll><line>1957</line><src>        update_inhibit_info(</src></hll>
				<hll><line>1958</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>1959</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>1960</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1961</line><src>                .sccml = {1},</src></hll>
				<hll><line>1962</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1963</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1964</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1965</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1966</line><src>                .sea = {1},</src></hll>
				<hll><line>1967</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1968</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1969</line><src>            }</src></hll>
				<hll><line>1970</line><src>        );</src></hll>
				<hll><line>1971</line><src>    }</src></hll>
				<hll><line>1972</line><src>#endif /* VEH_TYPE */</src></hll>
				<hll><line>1973</line><src></src></hll>
				<hll><line>1974</line><src>    /* CLU */</src></hll>
				<hll><cov>never</cov><line>1975</line><src>    if (clu[CLU_C165686_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004046</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000404A</addr><code>306EFFD9</code><mnemonic>lea       a15,[a15]0x4EE</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000404E</addr><code>FF14</code><mnemonic>ld16.bu   d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004050</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004064</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1976</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1977</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004052</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004056</addr><code>32AC22D9</code><mnemonic>lea       a2,[a2]0x28EC</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000405A</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000405C</addr><code>F830FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004060</addr><code>0D40006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1978</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1979</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>1980</line><src>                .sccml = {1},</src></hll>
				<hll><line>1981</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>1982</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>1983</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>1984</line><src>                .bca = {1,0},</src></hll>
				<hll><line>1985</line><src>                .sea = {1},</src></hll>
				<hll><line>1986</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>1987</line><src>                .warning = {0,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>1988</line><src>            }</src></hll>
				<hll><line>1989</line><src>        );</src></hll>
				<hll><line>1990</line><src>    }</src></hll>
				<hll><cov>never</cov><line>1991</line><src>    if (clu[CLU_C165686_1].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004064</addr><code>6F08</code><mnemonic>ld16.bu   d15,[a15]0x6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004066</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x8000407A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1992</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>1993</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004068</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000406C</addr><code>4292FFD9</code><mnemonic>lea       a15,[a15]0x2912</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004070</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004072</addr><code>F82BFF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:80004076</addr><code>0D35006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1994</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>1995</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>1996</line><src>                .sccml = {0},</src></hll>
				<hll><line>1997</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>1998</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>1999</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2000</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2001</line><src>                .sea = {0},</src></hll>
				<hll><line>2002</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2003</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>2004</line><src>            }</src></hll>
				<hll><line>2005</line><src>        );</src></hll>
				<hll><line>2006</line><src>    }</src></hll>
				<hll><line>2007</line><src>    /* BCM */</src></hll>
				<hll><cov>never</cov><line>2008</line><src>    if (bcm[BCM_C184881_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:8000407A</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000407E</addr><code>3062FFD9</code><mnemonic>lea       a15,[a15]0x4E2</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004082</addr><code>FF14</code><mnemonic>ld16.bu   d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004084</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004098</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2009</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2010</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004086</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000408A</addr><code>B27E22D9</code><mnemonic>lea       a2,[a2]0x26FE</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000408E</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004090</addr><code>F816FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004094</addr><code>0D26006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2011</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2012</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2013</line><src>                .sccml = {0},</src></hll>
				<hll><line>2014</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2015</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2016</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2017</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2018</line><src>                .sea = {1},</src></hll>
				<hll><line>2019</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>2020</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>2021</line><src>            }</src></hll>
				<hll><line>2022</line><src>        );</src></hll>
				<hll><line>2023</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2024</line><src>    if (bcm[BCM_C184881_1].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004098</addr><code>6F08</code><mnemonic>ld16.bu   d15,[a15]0x6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000409A</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800040AE</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2025</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2026</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:8000409C</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040A0</addr><code>B27EFFD9</code><mnemonic>lea       a15,[a15]0x26FE</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040A4</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040A6</addr><code>F811FF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:800040AA</addr><code>0D1B006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2027</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2028</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2029</line><src>                .sccml = {0},</src></hll>
				<hll><line>2030</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2031</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2032</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2033</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2034</line><src>                .sea = {1},</src></hll>
				<hll><line>2035</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>2036</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>2037</line><src>            }</src></hll>
				<hll><line>2038</line><src>        );</src></hll>
				<hll><line>2039</line><src>    }</src></hll>
				<hll><line>2040</line><src></src></hll>
				<hll><line>2041</line><src>    /* ESC */</src></hll>
				<hll><cov>never</cov><line>2042</line><src>    if (esc[ESC_C164286_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800040AE</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040B2</addr><code>0046FFD9</code><mnemonic>lea       a15,[a15]0x406</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040B6</addr><code>FF14</code><mnemonic>ld16.bu   d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040B8</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800040CC</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2043</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2044</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800040BA</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040BE</addr><code>726822D9</code><mnemonic>lea       a2,[a2]0x25E8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040C2</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040C4</addr><code>F7FCFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800040C8</addr><code>0D0C006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2045</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2046</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2047</line><src>                .sccml = {1},</src></hll>
				<hll><line>2048</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2049</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2050</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>2051</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2052</line><src>                .sea = {1},</src></hll>
				<hll><line>2053</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>2054</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>2055</line><src>            }</src></hll>
				<hll><line>2056</line><src>        );</src></hll>
				<hll><line>2057</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2058</line><src>    if (esc[ESC_C164286_1].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800040CC</addr><code>6F08</code><mnemonic>ld16.bu   d15,[a15]0x6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040CE</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800040E2</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2059</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2060</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800040D0</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040D4</addr><code>52D222D9</code><mnemonic>lea       a2,[a2]0x2D52</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040D8</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040DA</addr><code>F7F1FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800040DE</addr><code>0D01006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2061</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2062</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2063</line><src>                .sccml = {0},</src></hll>
				<hll><line>2064</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2065</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2066</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2067</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2068</line><src>                .sea = {0},</src></hll>
				<hll><line>2069</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2070</line><src>                .warning = {3,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>2071</line><src>            }</src></hll>
				<hll><line>2072</line><src>        );</src></hll>
				<hll><line>2073</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2074</line><src>    if (esc[ESC_C164286_2].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800040E2</addr><code>CF08</code><mnemonic>ld16.bu   d15,[a15]0x0C</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040E4</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800040F8</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2075</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2076</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800040E6</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040EA</addr><code>52F822D9</code><mnemonic>lea       a2,[a2]0x2D78</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040EE</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040F0</addr><code>F7E6FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800040F4</addr><code>0CF6006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2077</line><src>                .fca = {0,0,0,0,0,0,1,1,1},</src></hll>
				<hll><line>2078</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2079</line><src>                .sccml = {0},</src></hll>
				<hll><line>2080</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2081</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2082</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>2083</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2084</line><src>                .sea = {0},</src></hll>
				<hll><line>2085</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>2086</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>2087</line><src>            }</src></hll>
				<hll><line>2088</line><src>        );</src></hll>
				<hll><line>2089</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2090</line><src>    if (esc[ESC_NA_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800040F8</addr><code>0852FF09</code><mnemonic>ld.bu     d15,[a15]0x12</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800040FC</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004110</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2091</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2092</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800040FE</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004102</addr><code>62DE22D9</code><mnemonic>lea       a2,[a2]0x2D9E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004106</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004108</addr><code>F7DAFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000410C</addr><code>0CEA006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2093</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2094</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2095</line><src>                .sccml = {0},</src></hll>
				<hll><line>2096</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2097</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2098</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2099</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2100</line><src>                .sea = {0},</src></hll>
				<hll><line>2101</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2102</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>2103</line><src>            }</src></hll>
				<hll><line>2104</line><src>        );</src></hll>
				<hll><line>2105</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2106</line><src>    if (esc[ESC_C16B981_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004110</addr><code>0858FF09</code><mnemonic>ld.bu     d15,[a15]0x18</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004114</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004128</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2107</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2108</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004116</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000411A</addr><code>52D222D9</code><mnemonic>lea       a2,[a2]0x2D52</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000411E</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004120</addr><code>F7CEFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004124</addr><code>0CDE006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2109</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2110</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2111</line><src>                .sccml = {0},</src></hll>
				<hll><line>2112</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2113</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2114</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2115</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2116</line><src>                .sea = {0},</src></hll>
				<hll><line>2117</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2118</line><src>                .warning = {3,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>2119</line><src>            }</src></hll>
				<hll><line>2120</line><src>        );</src></hll>
				<hll><line>2121</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2122</line><src>    if (esc[ESC_C136081_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004128</addr><code>0864FF09</code><mnemonic>ld.bu     d15,[a15]0x24</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000412C</addr><code>185E</code><mnemonic>jne16     d15,#0x1,0x8000413C</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2123</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2124</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:8000412E</addr><code>FDC2FF61</code><mnemonic>fcall     0x80003CB2</mnemonic><comment>.cocofun_74</comment></asm>
				<asm><cov>never</cov><addr>P:80004132</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004134</addr><code>F7C4FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004138</addr><code>0CD4006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2125</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2126</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2127</line><src>                .sccml = {1},</src></hll>
				<hll><line>2128</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2129</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2130</line><src>                .hda = {0,1,1,1},</src></hll>
				<hll><line>2131</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2132</line><src>                .sea = {0},</src></hll>
				<hll><line>2133</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2134</line><src>                .warning = {0,3,3,3,HDA_FAULT,5,1},</src></hll>
				<hll><line>2135</line><src>            }</src></hll>
				<hll><line>2136</line><src>        );</src></hll>
				<hll><line>2137</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2138</line><src>    if (esc[ESC_NA_1].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:8000413C</addr><code>086AFF09</code><mnemonic>ld.bu     d15,[a15]0x2A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004140</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004154</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2139</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2140</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004142</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004146</addr><code>72A822D9</code><mnemonic>lea       a2,[a2]0x29E8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000414A</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000414C</addr><code>F7B8FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004150</addr><code>0CC8006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2141</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2142</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2143</line><src>                .sccml = {1},</src></hll>
				<hll><line>2144</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2145</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2146</line><src>                .hda = {0,1,1,1},</src></hll>
				<hll><line>2147</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2148</line><src>                .sea = {0},</src></hll>
				<hll><line>2149</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2150</line><src>                .warning = {0,0,0,0,HDA_FAULT,5,1},</src></hll>
				<hll><line>2151</line><src>            }</src></hll>
				<hll><line>2152</line><src>        );</src></hll>
				<hll><line>2153</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2154</line><src>    if (esc[ESC_C16B981_1].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004154</addr><code>085EFF09</code><mnemonic>ld.bu     d15,[a15]0x1E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004158</addr><code>185E</code><mnemonic>jne16     d15,#0x1,0x80004168</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2155</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2156</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:8000415A</addr><code>FDACFF61</code><mnemonic>fcall     0x80003CB2</mnemonic><comment>.cocofun_74</comment></asm>
				<asm><cov>never</cov><addr>P:8000415E</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004160</addr><code>F7AEFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004164</addr><code>0CBE006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2157</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2158</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2159</line><src>                .sccml = {1},</src></hll>
				<hll><line>2160</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2161</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2162</line><src>                .hda = {0,1,1,1},</src></hll>
				<hll><line>2163</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2164</line><src>                .sea = {0},</src></hll>
				<hll><line>2165</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2166</line><src>                .warning = {0,3,3,3,HDA_FAULT,5,1},</src></hll>
				<hll><line>2167</line><src>            }</src></hll>
				<hll><line>2168</line><src>        );</src></hll>
				<hll><line>2169</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2170</line><src>    if (esc[ESC_C164282_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004168</addr><code>0870FF09</code><mnemonic>ld.bu     d15,[a15]0x30</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000416C</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004180</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2171</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2172</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:8000416E</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004172</addr><code>42B822D9</code><mnemonic>lea       a2,[a2]0x2938</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004176</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004178</addr><code>F7A2FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000417C</addr><code>0CB2006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2173</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2174</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2175</line><src>                .sccml = {1},</src></hll>
				<hll><line>2176</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2177</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2178</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>2179</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2180</line><src>                .sea = {0},</src></hll>
				<hll><line>2181</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>2182</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>2183</line><src>            }</src></hll>
				<hll><line>2184</line><src>        );</src></hll>
				<hll><line>2185</line><src>    }</src></hll>
				<hll><line>2186</line><src></src></hll>
				<hll><cov>never</cov><line>2187</line><src>    if (esc[ESC_C164281_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004180</addr><code>0876FF09</code><mnemonic>ld.bu     d15,[a15]0x36</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004184</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004198</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2188</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2189</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004186</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000418A</addr><code>828EFFD9</code><mnemonic>lea       a15,[a15]0x2A0E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000418E</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004190</addr><code>F79CFF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:80004194</addr><code>0CA6006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2190</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2191</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2192</line><src>                .sccml = {0},</src></hll>
				<hll><line>2193</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2194</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2195</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2196</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2197</line><src>                .sea = {0},</src></hll>
				<hll><line>2198</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2199</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>2200</line><src>            }</src></hll>
				<hll><line>2201</line><src>        );</src></hll>
				<hll><line>2202</line><src>    }</src></hll>
				<hll><line>2203</line><src></src></hll>
				<hll><line>2204</line><src>    /* ICU */</src></hll>
				<hll><cov>never</cov><line>2205</line><src>    if (icu[ICU_C183E86_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004198</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000419C</addr><code>4078FF39</code><mnemonic>ld.bu     d15,[a15]0x538</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041A0</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800041B4</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2206</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2207</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800041A2</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041A6</addr><code>A24CFFD9</code><mnemonic>lea       a15,[a15]0x268C</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041AA</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041AC</addr><code>F78EFF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:800041B0</addr><code>0C98006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2208</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2209</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2210</line><src>                .sccml = {0},</src></hll>
				<hll><line>2211</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2212</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2213</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2214</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2215</line><src>                .sea = {0},</src></hll>
				<hll><line>2216</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2217</line><src>                .warning = {0,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2218</line><src>            }</src></hll>
				<hll><line>2219</line><src>        );</src></hll>
				<hll><line>2220</line><src>    }</src></hll>
				<hll><line>2221</line><src></src></hll>
				<hll><line>2222</line><src>    /* MDPS */</src></hll>
				<hll><cov>never</cov><line>2223</line><src>    if ((mdps[MDPS_C168886_0].fault || mdps[MDPS_C168886_1].fault) == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800041B4</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041B8</addr><code>1068FFD9</code><mnemonic>lea       a15,[a15]0x468</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041BC</addr><code>FF14</code><mnemonic>ld16.bu   d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041BE</addr><code>0082</code><mnemonic>mov16     d0,#0x0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041C0</addr><code>03EE</code><mnemonic>jnz16     d15,0x800041C6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041C2</addr><code>6F08</code><mnemonic>ld16.bu   d15,[a15]0x6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041C4</addr><code>026E</code><mnemonic>jz16      d15,0x800041C8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041C6</addr><code>1082</code><mnemonic>mov16     d0,#0x1</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041C8</addr><code>0876</code><mnemonic>jz16      d0,0x800041D8</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2224</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2225</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800041CA</addr><code>FD79FF61</code><mnemonic>fcall     0x80003CBC</mnemonic><comment>.cocofun_75</comment></asm>
				<asm><cov>never</cov><addr>P:800041CE</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041D0</addr><code>F776FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800041D4</addr><code>0C86006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2226</line><src>                .fca = {0,0,0,0,0,0,1,1,1},</src></hll>
				<hll><line>2227</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2228</line><src>                .sccml = {0},</src></hll>
				<hll><line>2229</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2230</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2231</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>2232</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2233</line><src>                .sea = {0},</src></hll>
				<hll><line>2234</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2235</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>2236</line><src>            }</src></hll>
				<hll><line>2237</line><src>        );</src></hll>
				<hll><line>2238</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2239</line><src>    if (mdps[MDPS_C168886_2].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800041D8</addr><code>CF08</code><mnemonic>ld16.bu   d15,[a15]0x0C</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041DA</addr><code>185E</code><mnemonic>jne16     d15,#0x1,0x800041EA</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2240</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2241</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800041DC</addr><code>FD70FF61</code><mnemonic>fcall     0x80003CBC</mnemonic><comment>.cocofun_75</comment></asm>
				<asm><cov>never</cov><addr>P:800041E0</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041E2</addr><code>F76DFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800041E6</addr><code>0C7D006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2242</line><src>                .fca = {0,0,0,0,0,0,1,1,1},</src></hll>
				<hll><line>2243</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2244</line><src>                .sccml = {0},</src></hll>
				<hll><line>2245</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2246</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2247</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>2248</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2249</line><src>                .sea = {0},</src></hll>
				<hll><line>2250</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2251</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>2252</line><src>            }</src></hll>
				<hll><line>2253</line><src>        );</src></hll>
				<hll><line>2254</line><src>    }</src></hll>
				<hll><line>2255</line><src></src></hll>
				<hll><cov>never</cov><line>2256</line><src>    if (mdps[MDPS_C223986_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800041EA</addr><code>0852FF09</code><mnemonic>ld.bu     d15,[a15]0x12</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041EE</addr><code>185E</code><mnemonic>jne16     d15,#0x1,0x800041FE</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2257</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2258</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800041F0</addr><code>FD66FF61</code><mnemonic>fcall     0x80003CBC</mnemonic><comment>.cocofun_75</comment></asm>
				<asm><cov>never</cov><addr>P:800041F4</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800041F6</addr><code>F763FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800041FA</addr><code>0C73006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2259</line><src>                .fca = {0,0,0,0,0,0,1,1,1},</src></hll>
				<hll><line>2260</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2261</line><src>                .sccml = {0},</src></hll>
				<hll><line>2262</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2263</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2264</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>2265</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2266</line><src>                .sea = {0},</src></hll>
				<hll><line>2267</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2268</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>2269</line><src>            }</src></hll>
				<hll><line>2270</line><src>        );</src></hll>
				<hll><line>2271</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2272</line><src>    if (mdps[MDPS_C223986_1].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800041FE</addr><code>0858FF09</code><mnemonic>ld.bu     d15,[a15]0x18</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004202</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004216</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2273</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2274</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004204</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004208</addr><code>82B4FFD9</code><mnemonic>lea       a15,[a15]0x2A34</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000420C</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000420E</addr><code>F75DFF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:80004212</addr><code>0C67006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2275</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2276</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2277</line><src>                .sccml = {0},</src></hll>
				<hll><line>2278</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2279</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2280</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>2281</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2282</line><src>                .sea = {0},</src></hll>
				<hll><line>2283</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2284</line><src>                .warning = {0,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>2285</line><src>            }</src></hll>
				<hll><line>2286</line><src>        );</src></hll>
				<hll><line>2287</line><src>    }</src></hll>
				<hll><line>2288</line><src>    /* SAS */</src></hll>
				<hll><cov>never</cov><line>2289</line><src>    if (sas[SAS_C181486_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004216</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000421A</addr><code>407EFF39</code><mnemonic>ld.bu     d15,[a15]0x53E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000421E</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004232</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2290</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2291</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004220</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004224</addr><code>42B8FFD9</code><mnemonic>lea       a15,[a15]0x2938</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004228</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000422A</addr><code>F74FFF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:8000422E</addr><code>0C59006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2292</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2293</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2294</line><src>                .sccml = {1},</src></hll>
				<hll><line>2295</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2296</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2297</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>2298</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2299</line><src>                .sea = {0},</src></hll>
				<hll><line>2300</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>2301</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>2302</line><src>            }</src></hll>
				<hll><line>2303</line><src>        );</src></hll>
				<hll><line>2304</line><src>    }</src></hll>
				<hll><line>2305</line><src>    /* SBCM */</src></hll>
				<hll><cov>never</cov><line>2306</line><src>    if (sbcm[SBCM_C185481_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004232</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004236</addr><code>307AFFD9</code><mnemonic>lea       a15,[a15]0x4FA</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000423A</addr><code>FF14</code><mnemonic>ld16.bu   d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000423C</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004250</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2307</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2308</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:8000423E</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004242</addr><code>D24A22D9</code><mnemonic>lea       a2,[a2]0x274A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004246</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004248</addr><code>F73AFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000424C</addr><code>0C4A006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2309</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2310</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2311</line><src>                .sccml = {0},</src></hll>
				<hll><line>2312</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2313</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2314</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2315</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2316</line><src>                .sea = {0},</src></hll>
				<hll><line>2317</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2318</line><src>                .warning = {0,0,0,0,NO_FAULT,0,2},</src></hll>
				<hll><line>2319</line><src>            }</src></hll>
				<hll><line>2320</line><src>        );</src></hll>
				<hll><line>2321</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2322</line><src>    if (sbcm[SBCM_C185381_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004250</addr><code>6F08</code><mnemonic>ld16.bu   d15,[a15]0x6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004252</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004266</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2323</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2324</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004254</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004258</addr><code>D24AFFD9</code><mnemonic>lea       a15,[a15]0x274A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000425C</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000425E</addr><code>F735FF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:80004262</addr><code>0C3F006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2325</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2326</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2327</line><src>                .sccml = {0},</src></hll>
				<hll><line>2328</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2329</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2330</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2331</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2332</line><src>                .sea = {0},</src></hll>
				<hll><line>2333</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2334</line><src>                .warning = {0,0,0,0,NO_FAULT,0,2},</src></hll>
				<hll><line>2335</line><src>            }</src></hll>
				<hll><line>2336</line><src>        );</src></hll>
				<hll><line>2337</line><src>    }</src></hll>
				<hll><line>2338</line><src>    /* HOD */</src></hll>
				<hll><cov>never</cov><line>2339</line><src>    if (hod[HOD_NA_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004266</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000426A</addr><code>4046FFD9</code><mnemonic>lea       a15,[a15]0x506</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000426E</addr><code>FF14</code><mnemonic>ld16.bu   d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004270</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004284</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2340</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2341</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004272</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004276</addr><code>529E22D9</code><mnemonic>lea       a2,[a2]0x295E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000427A</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000427C</addr><code>F720FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004280</addr><code>0C30006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2342</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2343</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2344</line><src>                .sccml = {0},</src></hll>
				<hll><line>2345</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2346</line><src>                .lfa = {2,0},</src></hll>
				<hll><line>2347</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2348</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2349</line><src>                .sea = {0},</src></hll>
				<hll><line>2350</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2351</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>2352</line><src>            }</src></hll>
				<hll><line>2353</line><src>        );</src></hll>
				<hll><line>2354</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2355</line><src>    if (hod[HOD_NA_1].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004284</addr><code>6F08</code><mnemonic>ld16.bu   d15,[a15]0x6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004286</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x8000429A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2356</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2357</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004288</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000428C</addr><code>529EFFD9</code><mnemonic>lea       a15,[a15]0x295E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004290</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004292</addr><code>F71BFF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:80004296</addr><code>0C25006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2358</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2359</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2360</line><src>                .sccml = {0},</src></hll>
				<hll><line>2361</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2362</line><src>                .lfa = {2,0},</src></hll>
				<hll><line>2363</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2364</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2365</line><src>                .sea = {0},</src></hll>
				<hll><line>2366</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2367</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>2368</line><src>            }</src></hll>
				<hll><line>2369</line><src>        );</src></hll>
				<hll><line>2370</line><src>    }</src></hll>
				<hll><line>2371</line><src>    /* ICSC */</src></hll>
				<hll><cov>never</cov><line>2372</line><src>    if (icsc[ICSC_C187002_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:8000429A</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000429E</addr><code>5050FF39</code><mnemonic>ld.bu     d15,[a15]0x550</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042A2</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800042B6</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2373</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2374</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800042A4</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042A8</addr><code>4292FFD9</code><mnemonic>lea       a15,[a15]0x2912</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042AC</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042AE</addr><code>F70DFF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:800042B2</addr><code>0C17006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2375</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2376</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2377</line><src>                .sccml = {0},</src></hll>
				<hll><line>2378</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2379</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2380</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2381</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2382</line><src>                .sea = {0},</src></hll>
				<hll><line>2383</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2384</line><src>                .warning = {0,0,0,0,NO_FAULT,0,1},</src></hll>
				<hll><line>2385</line><src>            }</src></hll>
				<hll><line>2386</line><src>        );</src></hll>
				<hll><line>2387</line><src>    }</src></hll>
				<hll><line>2388</line><src></src></hll>
				<hll><line>2389</line><src>    /* YRS */</src></hll>
				<hll><cov>never</cov><line>2390</line><src>    if (yrs[YRS_C184286_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800042B6</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042BA</addr><code>5044FF39</code><mnemonic>ld.bu     d15,[a15]0x544</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042BE</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800042D2</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2391</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2392</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800042C0</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042C4</addr><code>7268FFD9</code><mnemonic>lea       a15,[a15]0x25E8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042C8</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042CA</addr><code>F6FFFF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:800042CE</addr><code>0C09006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2393</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2394</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2395</line><src>                .sccml = {1},</src></hll>
				<hll><line>2396</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2397</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2398</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>2399</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2400</line><src>                .sea = {1},</src></hll>
				<hll><line>2401</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>2402</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>2403</line><src>            }</src></hll>
				<hll><line>2404</line><src>        );</src></hll>
				<hll><line>2405</line><src>    }</src></hll>
				<hll><line>2406</line><src></src></hll>
				<hll><line>2407</line><src>    /* SWRC */</src></hll>
				<hll><cov>never</cov><line>2408</line><src>    if (swrc[SWRC_C183D82_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800042D2</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042D6</addr><code>504AFF39</code><mnemonic>ld.bu     d15,[a15]0x54A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042DA</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800042EE</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2409</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2410</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800042DC</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042E0</addr><code>B258FFD9</code><mnemonic>lea       a15,[a15]0x26D8</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042E4</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042E6</addr><code>F6F1FF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:800042EA</addr><code>0BFB006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2411</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2412</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2413</line><src>                .sccml = {1},</src></hll>
				<hll><line>2414</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2415</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2416</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>2417</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2418</line><src>                .sea = {0},</src></hll>
				<hll><line>2419</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2420</line><src>                .warning = {0,3,3,3,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>2421</line><src>            }</src></hll>
				<hll><line>2422</line><src>        );</src></hll>
				<hll><line>2423</line><src>    }</src></hll>
				<hll><line>2424</line><src></src></hll>
				<hll><line>2425</line><src>#elif CCAN == HSCAN</src></hll>
				<hll><line>2426</line><src>    /* CGW */</src></hll>
				<hll><line>2427</line><src>    if (cgw[CGW_C181786_0].fault == TRUE) {</src></hll>
				<hll><line>2428</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2429</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2430</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2431</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2432</line><src>                .sccml = {1},</src></hll>
				<hll><line>2433</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2434</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2435</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>2436</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>2437</line><src>            }</src></hll>
				<hll><line>2438</line><src>        );</src></hll>
				<hll><line>2439</line><src>    }</src></hll>
				<hll><line>2440</line><src></src></hll>
				<hll><line>2441</line><src>    /* CLU */</src></hll>
				<hll><line>2442</line><src>    if (clu[CLU_C165686_0].fault == TRUE) {</src></hll>
				<hll><line>2443</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2444</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2445</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2446</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2447</line><src>                .sccml = {1},</src></hll>
				<hll><line>2448</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2449</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2450</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>2451</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>2452</line><src>            }</src></hll>
				<hll><line>2453</line><src>        );</src></hll>
				<hll><line>2454</line><src>    }</src></hll>
				<hll><line>2455</line><src>    if (clu[CLU_C165686_1].fault == TRUE) {</src></hll>
				<hll><line>2456</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2457</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2458</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2459</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2460</line><src>                .sccml = {0},</src></hll>
				<hll><line>2461</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2462</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2463</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2464</line><src>                .warning = {0,0,0,0,NO_FAULT,5},</src></hll>
				<hll><line>2465</line><src>            }</src></hll>
				<hll><line>2466</line><src>        );</src></hll>
				<hll><line>2467</line><src>    }</src></hll>
				<hll><line>2468</line><src></src></hll>
				<hll><line>2469</line><src>    /* ESC */</src></hll>
				<hll><line>2470</line><src>    if (esc[ESC_C164286_0].fault == TRUE) {</src></hll>
				<hll><line>2471</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2472</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2473</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2474</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2475</line><src>                .sccml = {1},</src></hll>
				<hll><line>2476</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2477</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2478</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>2479</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>2480</line><src>            }</src></hll>
				<hll><line>2481</line><src>        );</src></hll>
				<hll><line>2482</line><src>    }</src></hll>
				<hll><line>2483</line><src>    if (esc[ESC_C164286_1].fault == TRUE) {</src></hll>
				<hll><line>2484</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2485</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2486</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2487</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2488</line><src>                .sccml = {0},</src></hll>
				<hll><line>2489</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2490</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2491</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2492</line><src>                .warning = {3,0,0,0,NO_FAULT,0},</src></hll>
				<hll><line>2493</line><src>            }</src></hll>
				<hll><line>2494</line><src>        );</src></hll>
				<hll><line>2495</line><src>    }</src></hll>
				<hll><line>2496</line><src>    if (esc[ESC_NA_0].fault == TRUE) {</src></hll>
				<hll><line>2497</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2498</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2499</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2500</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2501</line><src>                .sccml = {0},</src></hll>
				<hll><line>2502</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2503</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2504</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2505</line><src>                .warning = {0,0,0,0,NO_FAULT,0},</src></hll>
				<hll><line>2506</line><src>            }</src></hll>
				<hll><line>2507</line><src>        );</src></hll>
				<hll><line>2508</line><src>    }</src></hll>
				<hll><line>2509</line><src>    if (esc[ESC_C16B981_0].fault == TRUE) {</src></hll>
				<hll><line>2510</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2511</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2512</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2513</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2514</line><src>                .sccml = {0},</src></hll>
				<hll><line>2515</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2516</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2517</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2518</line><src>                .warning = {3,0,0,0,NO_FAULT,0},</src></hll>
				<hll><line>2519</line><src>            }</src></hll>
				<hll><line>2520</line><src>        );</src></hll>
				<hll><line>2521</line><src>    }</src></hll>
				<hll><line>2522</line><src>    if (esc[ESC_C136081_0].fault == TRUE) {</src></hll>
				<hll><line>2523</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2524</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2525</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2526</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2527</line><src>                .sccml = {1},</src></hll>
				<hll><line>2528</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2529</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2530</line><src>                .hda = {0,1,1,1},</src></hll>
				<hll><line>2531</line><src>                .warning = {0,3,3,3,HDA_FAULT,5},</src></hll>
				<hll><line>2532</line><src>            }</src></hll>
				<hll><line>2533</line><src>        );</src></hll>
				<hll><line>2534</line><src>    }</src></hll>
				<hll><line>2535</line><src>    if (esc[ESC_NA_1].fault == TRUE) {</src></hll>
				<hll><line>2536</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2537</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2538</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2539</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2540</line><src>                .sccml = {1},</src></hll>
				<hll><line>2541</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2542</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2543</line><src>                .hda = {0,1,1,1},</src></hll>
				<hll><line>2544</line><src>                .warning = {0,0,0,0,HDA_FAULT,5},</src></hll>
				<hll><line>2545</line><src>            }</src></hll>
				<hll><line>2546</line><src>        );</src></hll>
				<hll><line>2547</line><src>    }</src></hll>
				<hll><line>2548</line><src>    if (esc[ESC_C16B981_1].fault == TRUE) {</src></hll>
				<hll><line>2549</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2550</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2551</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2552</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2553</line><src>                .sccml = {1},</src></hll>
				<hll><line>2554</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2555</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2556</line><src>                .hda = {0,1,1,1},</src></hll>
				<hll><line>2557</line><src>                .warning = {0,3,3,3,HDA_FAULT,5},</src></hll>
				<hll><line>2558</line><src>            }</src></hll>
				<hll><line>2559</line><src>        );</src></hll>
				<hll><line>2560</line><src>    }</src></hll>
				<hll><line>2561</line><src></src></hll>
				<hll><line>2562</line><src>    /* MDPS */</src></hll>
				<hll><line>2563</line><src>    if ((mdps[MDPS_C168886_0].fault || mdps[MDPS_C168886_1].fault) == TRUE) {</src></hll>
				<hll><line>2564</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2565</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2566</line><src>                .fca = {0,0,0,0,0,0,1,1,1},</src></hll>
				<hll><line>2567</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2568</line><src>                .sccml = {0},</src></hll>
				<hll><line>2569</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2570</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2571</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>2572</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>2573</line><src>            }</src></hll>
				<hll><line>2574</line><src>        );</src></hll>
				<hll><line>2575</line><src>    }</src></hll>
				<hll><line>2576</line><src>    if (mdps[MDPS_C223986_0].fault == TRUE) {</src></hll>
				<hll><line>2577</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2578</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2579</line><src>                .fca = {0,0,0,0,0,0,1,1,1},</src></hll>
				<hll><line>2580</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2581</line><src>                .sccml = {0},</src></hll>
				<hll><line>2582</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2583</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2584</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>2585</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>2586</line><src>            }</src></hll>
				<hll><line>2587</line><src>        );</src></hll>
				<hll><line>2588</line><src>    }</src></hll>
				<hll><line>2589</line><src></src></hll>
				<hll><line>2590</line><src>    /* SAS */</src></hll>
				<hll><line>2591</line><src>    if (sas[SAS_C181486_0].fault == TRUE) {</src></hll>
				<hll><line>2592</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2593</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2594</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2595</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2596</line><src>                .sccml = {1},</src></hll>
				<hll><line>2597</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2598</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2599</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>2600</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>2601</line><src>            }</src></hll>
				<hll><line>2602</line><src>        );</src></hll>
				<hll><line>2603</line><src>    }</src></hll>
				<hll><line>2604</line><src></src></hll>
				<hll><line>2605</line><src>    /* EMS */</src></hll>
				<hll><line>2606</line><src>    if (ems[EMS_C161386_0].fault == TRUE) {</src></hll>
				<hll><line>2607</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2608</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2609</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2610</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2611</line><src>                .sccml = {1},</src></hll>
				<hll><line>2612</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2613</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2614</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>2615</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>2616</line><src>            }</src></hll>
				<hll><line>2617</line><src>        );</src></hll>
				<hll><line>2618</line><src>    }</src></hll>
				<hll><line>2619</line><src>    if (ems[EMS_C161386_1].fault == TRUE) {</src></hll>
				<hll><line>2620</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2621</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2622</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2623</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2624</line><src>                .sccml = {0},</src></hll>
				<hll><line>2625</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2626</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2627</line><src>                .hda = {0,0,0,0},</src></hll>
				<hll><line>2628</line><src>                .warning = {3,0,0,0,NO_FAULT,0},</src></hll>
				<hll><line>2629</line><src>            }</src></hll>
				<hll><line>2630</line><src>        );</src></hll>
				<hll><line>2631</line><src>    }</src></hll>
				<hll><line>2632</line><src></src></hll>
				<hll><line>2633</line><src>    /* TCU */</src></hll>
				<hll><line>2634</line><src>    if (tcu[TCU_C164686_0].fault == TRUE) {</src></hll>
				<hll><line>2635</line><src>        update_inhibit_info(</src></hll>
				<hll><line>2636</line><src>            (struct inhibit_info){</src></hll>
				<hll><line>2637</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2638</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2639</line><src>                .sccml = {1},</src></hll>
				<hll><line>2640</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2641</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2642</line><src>                .hda = {1,1,1,1},</src></hll>
				<hll><line>2643</line><src>                .warning = {3,3,3,3,HDA_LFA_FAULT,5},</src></hll>
				<hll><line>2644</line><src>            }</src></hll>
				<hll><line>2645</line><src>        );</src></hll>
				<hll><line>2646</line><src>    }</src></hll>
				<hll><line>2647</line><src>#endif /* CCAN */</src></hll>
				<hll><line>2648</line><src></src></hll>
				<hll><line>2649</line><src>    /* Navi */</src></hll>
				<hll><cov>never</cov><line>2650</line><src>    if (navi[NAVI_C183186_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800042EE</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042F2</addr><code>4052FFD9</code><mnemonic>lea       a15,[a15]0x512</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042F6</addr><code>FF14</code><mnemonic>ld16.bu   d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042F8</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x8000430C</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2651</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2652</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800042FA</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800042FE</addr><code>D27022D9</code><mnemonic>lea       a2,[a2]0x2770</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004302</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004304</addr><code>F6DCFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004308</addr><code>0BEC006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2653</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2654</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2655</line><src>                .sccml = {0},</src></hll>
				<hll><line>2656</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2657</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2658</line><src>                .hda = {0,0,1,1},</src></hll>
				<hll><line>2659</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2660</line><src>                .sea = {0},</src></hll>
				<hll><line>2661</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2662</line><src>                .warning = {0,0,0,3,HDA_FAULT,5,1},</src></hll>
				<hll><line>2663</line><src>            }</src></hll>
				<hll><line>2664</line><src>        );</src></hll>
				<hll><line>2665</line><src>    }</src></hll>
				<hll><line>2666</line><src>#if CCAN == CANFD</src></hll>
				<hll><cov>never</cov><line>2667</line><src>    if (navi[NAVI_C183186_1].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:8000430C</addr><code>6F08</code><mnemonic>ld16.bu   d15,[a15]0x6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000430E</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004322</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2668</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2669</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004310</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004314</addr><code>D270FFD9</code><mnemonic>lea       a15,[a15]0x2770</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004318</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000431A</addr><code>F6D7FF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:8000431E</addr><code>0BE1006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2670</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2671</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2672</line><src>                .sccml = {0},</src></hll>
				<hll><line>2673</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2674</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2675</line><src>                .hda = {0,0,1,1},</src></hll>
				<hll><line>2676</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2677</line><src>                .sea = {0},</src></hll>
				<hll><line>2678</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2679</line><src>                .warning = {0,0,0,3,HDA_FAULT,5,1},</src></hll>
				<hll><line>2680</line><src>            }</src></hll>
				<hll><line>2681</line><src>        );</src></hll>
				<hll><line>2682</line><src>    }</src></hll>
				<hll><line>2683</line><src>#endif /* CCAN */</src></hll>
				<hll><line>2684</line><src>    /* Front Camera */</src></hll>
				<hll><cov>never</cov><line>2685</line><src>    if (fr_cmr[FR_CMR_28B086_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004322</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004326</addr><code>206EFFD9</code><mnemonic>lea       a15,[a15]0x4AE</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000432A</addr><code>FF14</code><mnemonic>ld16.bu   d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000432C</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004340</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2686</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2687</line><src>            (struct inhibit_info) {</src></hll>
				<asm><cov>never</cov><addr>P:8000432E</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004332</addr><code>12BA22D9</code><mnemonic>lea       a2,[a2]0x287A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004336</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004338</addr><code>F6C2FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000433C</addr><code>0BD2006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2688</line><src>                .fca = {0,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2689</line><src>                .scc = {0,0,1,1},</src></hll>
				<hll><line>2690</line><src>                .sccml = {0},</src></hll>
				<hll><line>2691</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2692</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2693</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>2694</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2695</line><src>                .sea = {0},</src></hll>
				<hll><line>2696</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2697</line><src>                .warning = {3,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>2698</line><src>            }</src></hll>
				<hll><line>2699</line><src>        );</src></hll>
				<hll><line>2700</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2701</line><src>    if (fr_cmr[FR_CMR_28B086_1].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004340</addr><code>6F08</code><mnemonic>ld16.bu   d15,[a15]0x6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004342</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004356</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2702</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2703</line><src>            (struct inhibit_info) {</src></hll>
				<asm><cov>never</cov><addr>P:80004344</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004348</addr><code>82B422D9</code><mnemonic>lea       a2,[a2]0x2A34</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000434C</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000434E</addr><code>F6B7FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004352</addr><code>0BC7006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2704</line><src>                .fca = {0,0,0,0,0,0,0,0,0},</src></hll>
				<hll><line>2705</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2706</line><src>                .sccml = {0},</src></hll>
				<hll><line>2707</line><src>                .nscc = {0,0},</src></hll>
				<hll><line>2708</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2709</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>2710</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2711</line><src>                .sea = {0},</src></hll>
				<hll><line>2712</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2713</line><src>                .warning = {0,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>2714</line><src>            }</src></hll>
				<hll><line>2715</line><src>        );</src></hll>
				<hll><line>2716</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2717</line><src>    if (fr_cmr[FR_CMR_NA_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004356</addr><code>CF08</code><mnemonic>ld16.bu   d15,[a15]0x0C</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004358</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x8000436C</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2718</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2719</line><src>            (struct inhibit_info) {</src></hll>
				<asm><cov>never</cov><addr>P:8000435A</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000435E</addr><code>929AFFD9</code><mnemonic>lea       a15,[a15]0x2A5A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004362</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004364</addr><code>F6B2FF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:80004368</addr><code>0BBC006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2720</line><src>                .fca = {0,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2721</line><src>                .scc = {0,0,1,1},</src></hll>
				<hll><line>2722</line><src>                .sccml = {0},</src></hll>
				<hll><line>2723</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2724</line><src>                .lfa = {1,1},</src></hll>
				<hll><line>2725</line><src>                .hda = {1,0,1,1},</src></hll>
				<hll><line>2726</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2727</line><src>                .sea = {0},</src></hll>
				<hll><line>2728</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2729</line><src>                .warning = {5,0,0,0,HDA_LFA_FAULT,5,1},</src></hll>
				<hll><line>2730</line><src>            }</src></hll>
				<hll><line>2731</line><src>        );</src></hll>
				<hll><line>2732</line><src>    }</src></hll>
				<hll><line>2733</line><src>    /* Front Radar */</src></hll>
				<hll><cov>never</cov><line>2734</line><src>    if (fr_rdr[FR_RDR_C28B186_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:8000436C</addr><code>FC99FF61</code><mnemonic>fcall     0x80003C9E</mnemonic><comment>.cocofun_72</comment></asm>
				<asm><cov>never</cov><addr>P:80004370</addr><code>FF14</code><mnemonic>ld16.bu   d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004372</addr><code>1E5E</code><mnemonic>jne16     d15,#0x1,0x8000438E</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><cov>never</cov><line>2735</line><src>        chk_rdr_inhibit = TRUE;</src></hll>
				<asm><cov>never</cov><addr>P:80004374</addr><code>29004091</code><mnemonic>movh.a    a2,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004378</addr><code>80512FE9</code><mnemonic>st.b      [a2]0x611,d15</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2736</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2737</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:8000437C</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004380</addr><code>E25622D9</code><mnemonic>lea       a2,[a2]0x2796</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004384</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004386</addr><code>F69BFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000438A</addr><code>0BAB006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2738</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2739</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2740</line><src>                .sccml = {1},</src></hll>
				<hll><line>2741</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2742</line><src>                .lfa = {0,1},</src></hll>
				<hll><line>2743</line><src>                .hda = {0,1,1,1},</src></hll>
				<hll><line>2744</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2745</line><src>                .sea = {0},</src></hll>
				<hll><line>2746</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2747</line><src>                .warning = {3,3,3,3,HDA_FAULT,5,1},</src></hll>
				<hll><line>2748</line><src>            }</src></hll>
				<hll><line>2749</line><src>        );</src></hll>
				<hll><line>2750</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2751</line><src>    if (fr_rdr[FR_RDR_NA_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:8000438E</addr><code>6F08</code><mnemonic>ld16.bu   d15,[a15]0x6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004390</addr><code>1E5E</code><mnemonic>jne16     d15,#0x1,0x800043AC</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><cov>never</cov><line>2752</line><src>        chk_rdr_inhibit = TRUE;</src></hll>
				<asm><cov>never</cov><addr>P:80004392</addr><code>F9004091</code><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004396</addr><code>8051FFE9</code><mnemonic>st.b      [a15]0x611,d15</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2753</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2754</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:8000439A</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000439E</addr><code>A280FFD9</code><mnemonic>lea       a15,[a15]0x2A80</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043A2</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043A4</addr><code>F692FF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:800043A8</addr><code>0B9C006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2755</line><src>                .fca = {1,1,1,1,1,1,1,1,1},</src></hll>
				<hll><line>2756</line><src>                .scc = {1,1,1,1},</src></hll>
				<hll><line>2757</line><src>                .sccml = {1},</src></hll>
				<hll><line>2758</line><src>                .nscc = {1,1},</src></hll>
				<hll><line>2759</line><src>                .lfa = {0,1},</src></hll>
				<hll><line>2760</line><src>                .hda = {0,1,1,1},</src></hll>
				<hll><line>2761</line><src>                .bca = {0,0},</src></hll>
				<hll><line>2762</line><src>                .sea = {0},</src></hll>
				<hll><line>2763</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2764</line><src>                .warning = {6,2,0,0,HDA_FAULT,5,1},</src></hll>
				<hll><line>2765</line><src>            }</src></hll>
				<hll><line>2766</line><src>        );</src></hll>
				<hll><line>2767</line><src>    }</src></hll>
				<hll><line>2768</line><src></src></hll>
				<hll><line>2769</line><src>    /* Front Corner Radar */</src></hll>
				<hll><cov>never</cov><line>2770</line><src>    if (fr_c_rdr[FR_C_RDR_C188186_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800043AC</addr><code>FC74FF61</code><mnemonic>fcall     0x80003C94</mnemonic><comment>.cocofun_71</comment></asm>
				<asm><cov>never</cov><addr>P:800043B0</addr><code>FF14</code><mnemonic>ld16.bu   d15,[a15]</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043B2</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800043C6</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2771</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2772</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800043B4</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043B8</addr><code>A2A622D9</code><mnemonic>lea       a2,[a2]0x2AA6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043BC</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043BE</addr><code>F67FFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800043C2</addr><code>0B8F006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2773</line><src>                .fca = {0,0,3,0,1,1,1,1,1},</src></hll>
				<hll><line>2774</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>2775</line><src>                .sccml = {0},</src></hll>
				<hll><line>2776</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2777</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2778</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2779</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2780</line><src>                .sea = {1},</src></hll>
				<hll><line>2781</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>2782</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2783</line><src>            }</src></hll>
				<hll><line>2784</line><src>        );</src></hll>
				<hll><line>2785</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2786</line><src>    if (fr_c_rdr[FR_C_RDR_C188186_1].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800043C6</addr><code>6F08</code><mnemonic>ld16.bu   d15,[a15]0x6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043C8</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800043DC</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2787</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2788</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800043CA</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043CE</addr><code>A2A622D9</code><mnemonic>lea       a2,[a2]0x2AA6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043D2</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043D4</addr><code>F674FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800043D8</addr><code>0B84006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2789</line><src>                .fca = {0,0,3,0,1,1,1,1,1},</src></hll>
				<hll><line>2790</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>2791</line><src>                .sccml = {0},</src></hll>
				<hll><line>2792</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2793</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2794</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2795</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2796</line><src>                .sea = {1},</src></hll>
				<hll><line>2797</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>2798</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2799</line><src>            }</src></hll>
				<hll><line>2800</line><src>        );</src></hll>
				<hll><line>2801</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2802</line><src>    if (fr_c_rdr[FR_C_RDR_C188186_2].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800043DC</addr><code>CF08</code><mnemonic>ld16.bu   d15,[a15]0x0C</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043DE</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800043F2</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2803</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2804</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800043E0</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043E4</addr><code>B28C22D9</code><mnemonic>lea       a2,[a2]0x2ACC</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043E8</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043EA</addr><code>F669FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800043EE</addr><code>0B79006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2805</line><src>                .fca = {0,0,3,0,1,1,1,1,1},</src></hll>
				<hll><line>2806</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>2807</line><src>                .sccml = {0},</src></hll>
				<hll><line>2808</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2809</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2810</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2811</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2812</line><src>                .sea = {0},</src></hll>
				<hll><line>2813</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2814</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2815</line><src>            }</src></hll>
				<hll><line>2816</line><src>        );</src></hll>
				<hll><line>2817</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2818</line><src>    if (fr_c_rdr[FR_C_RDR_C188186_3].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800043F2</addr><code>0852FF09</code><mnemonic>ld.bu     d15,[a15]0x12</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043F6</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x8000440A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2819</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2820</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800043F8</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800043FC</addr><code>B2B222D9</code><mnemonic>lea       a2,[a2]0x2AF2</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004400</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004402</addr><code>F65DFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004406</addr><code>0B6D006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2821</line><src>                .fca = {0,0,3,0,0,0,1,1,1},</src></hll>
				<hll><line>2822</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2823</line><src>                .sccml = {0},</src></hll>
				<hll><line>2824</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2825</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2826</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2827</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2828</line><src>                .sea = {1},</src></hll>
				<hll><line>2829</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>2830</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2831</line><src>            }</src></hll>
				<hll><line>2832</line><src>        );</src></hll>
				<hll><line>2833</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2834</line><src>    if (fr_c_rdr[FR_C_RDR_C188186_4].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:8000440A</addr><code>0858FF09</code><mnemonic>ld.bu     d15,[a15]0x18</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000440E</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004422</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2835</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2836</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004410</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004414</addr><code>C29822D9</code><mnemonic>lea       a2,[a2]0x2B18</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004418</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000441A</addr><code>F651FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000441E</addr><code>0B61006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2837</line><src>                .fca = {0,0,2,0,0,0,1,1,1},</src></hll>
				<hll><line>2838</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2839</line><src>                .sccml = {0},</src></hll>
				<hll><line>2840</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2841</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2842</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2843</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2844</line><src>                .sea = {1},</src></hll>
				<hll><line>2845</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>2846</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2847</line><src>            }</src></hll>
				<hll><line>2848</line><src>        );</src></hll>
				<hll><line>2849</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2850</line><src>    if (fr_c_rdr[FR_C_RDR_C188186_5].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004422</addr><code>085EFF09</code><mnemonic>ld.bu     d15,[a15]0x1E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004426</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x8000443A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2851</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2852</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004428</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000442C</addr><code>C2BE22D9</code><mnemonic>lea       a2,[a2]0x2B3E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004430</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004432</addr><code>F645FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004436</addr><code>0B55006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2853</line><src>                .fca = {0,0,2,0,1,1,1,1,1},</src></hll>
				<hll><line>2854</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>2855</line><src>                .sccml = {0},</src></hll>
				<hll><line>2856</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2857</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2858</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2859</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2860</line><src>                .sea = {1},</src></hll>
				<hll><line>2861</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>2862</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2863</line><src>            }</src></hll>
				<hll><line>2864</line><src>        );</src></hll>
				<hll><line>2865</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2866</line><src>    if (fr_c_rdr[FR_C_RDR_C188186_6].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:8000443A</addr><code>0864FF09</code><mnemonic>ld.bu     d15,[a15]0x24</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000443E</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004452</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2867</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2868</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004440</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004444</addr><code>D2A422D9</code><mnemonic>lea       a2,[a2]0x2B64</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004448</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000444A</addr><code>F639FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000444E</addr><code>0B49006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2869</line><src>                .fca = {0,0,2,0,1,1,1,1,1},</src></hll>
				<hll><line>2870</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>2871</line><src>                .sccml = {0},</src></hll>
				<hll><line>2872</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2873</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2874</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2875</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2876</line><src>                .sea = {0},</src></hll>
				<hll><line>2877</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2878</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2879</line><src>            }</src></hll>
				<hll><line>2880</line><src>        );</src></hll>
				<hll><line>2881</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2882</line><src>    if (fr_c_rdr[FR_C_RDR_C188186_7].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004452</addr><code>086AFF09</code><mnemonic>ld.bu     d15,[a15]0x2A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004456</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x8000446A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2883</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2884</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004458</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000445C</addr><code>E2B022D9</code><mnemonic>lea       a2,[a2]0x2BB0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004460</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004462</addr><code>F62DFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004466</addr><code>0B3D006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2885</line><src>                .fca = {0,0,1,0,1,1,1,1,1},</src></hll>
				<hll><line>2886</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>2887</line><src>                .sccml = {0},</src></hll>
				<hll><line>2888</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2889</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2890</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2891</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2892</line><src>                .sea = {0},</src></hll>
				<hll><line>2893</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2894</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2895</line><src>            }</src></hll>
				<hll><line>2896</line><src>        );</src></hll>
				<hll><line>2897</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2898</line><src>    if (fr_c_rdr[FR_C_RDR_C188186_8].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:8000446A</addr><code>0870FF09</code><mnemonic>ld.bu     d15,[a15]0x30</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000446E</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004482</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2899</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2900</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004470</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004474</addr><code>F26222D9</code><mnemonic>lea       a2,[a2]0x27E2</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004478</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000447A</addr><code>F621FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000447E</addr><code>0B31006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2901</line><src>                .fca = {0,0,1,0,1,1,1,1,1},</src></hll>
				<hll><line>2902</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>2903</line><src>                .sccml = {0},</src></hll>
				<hll><line>2904</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2905</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2906</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2907</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2908</line><src>                .sea = {1},</src></hll>
				<hll><line>2909</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>2910</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2911</line><src>            }</src></hll>
				<hll><line>2912</line><src>        );</src></hll>
				<hll><line>2913</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2914</line><src>    if (fr_c_rdr[FR_C_RDR_C188186_9].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004482</addr><code>0876FF09</code><mnemonic>ld.bu     d15,[a15]0x36</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004486</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x8000449A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2915</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2916</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004488</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000448C</addr><code>F29622D9</code><mnemonic>lea       a2,[a2]0x2BD6</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004490</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004492</addr><code>F615FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004496</addr><code>0B25006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2917</line><src>                .fca = {0,0,1,0,0,0,1,1,1},</src></hll>
				<hll><line>2918</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2919</line><src>                .sccml = {0},</src></hll>
				<hll><line>2920</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2921</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2922</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2923</line><src>                .bca = {1,0},</src></hll>
				<hll><line>2924</line><src>                .sea = {1},</src></hll>
				<hll><line>2925</line><src>                .rcca = {1,0},</src></hll>
				<hll><line>2926</line><src>                .warning = {3,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2927</line><src>            }</src></hll>
				<hll><line>2928</line><src>        );</src></hll>
				<hll><line>2929</line><src>    }</src></hll>
				<hll><line>2930</line><src></src></hll>
				<hll><cov>never</cov><line>2931</line><src>    if (fr_c_rdr[FR_C_RDR_NA_0].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:8000449A</addr><code>087CFF09</code><mnemonic>ld.bu     d15,[a15]0x3C</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000449E</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800044B2</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2932</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2933</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800044A0</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044A4</addr><code>F2BC22D9</code><mnemonic>lea       a2,[a2]0x2BFC</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044A8</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044AA</addr><code>F609FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800044AE</addr><code>0B19006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2934</line><src>                .fca = {0,0,3,0,1,1,1,1,1},</src></hll>
				<hll><line>2935</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>2936</line><src>                .sccml = {0},</src></hll>
				<hll><line>2937</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2938</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2939</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2940</line><src>                .bca = {0,1},</src></hll>
				<hll><line>2941</line><src>                .sea = {1},</src></hll>
				<hll><line>2942</line><src>                .rcca = {0,1},</src></hll>
				<hll><line>2943</line><src>                .warning = {6,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2944</line><src>            }</src></hll>
				<hll><line>2945</line><src>        );</src></hll>
				<hll><line>2946</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2947</line><src>    if (fr_c_rdr[FR_C_RDR_NA_1].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800044B2</addr><code>1842FF09</code><mnemonic>ld.bu     d15,[a15]0x42</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044B6</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800044CA</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2948</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2949</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800044B8</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044BC</addr><code>F2BC22D9</code><mnemonic>lea       a2,[a2]0x2BFC</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044C0</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044C2</addr><code>F5FDFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800044C6</addr><code>0B0D006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2950</line><src>                .fca = {0,0,3,0,1,1,1,1,1},</src></hll>
				<hll><line>2951</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>2952</line><src>                .sccml = {0},</src></hll>
				<hll><line>2953</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2954</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2955</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2956</line><src>                .bca = {0,1},</src></hll>
				<hll><line>2957</line><src>                .sea = {1},</src></hll>
				<hll><line>2958</line><src>                .rcca = {0,1},</src></hll>
				<hll><line>2959</line><src>                .warning = {6,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2960</line><src>            }</src></hll>
				<hll><line>2961</line><src>        );</src></hll>
				<hll><line>2962</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2963</line><src>    if (fr_c_rdr[FR_C_RDR_NA_2].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800044CA</addr><code>1848FF09</code><mnemonic>ld.bu     d15,[a15]0x48</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044CE</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800044E2</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2964</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2965</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800044D0</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044D4</addr><code>02E222D9</code><mnemonic>lea       a2,[a2]0x2C22</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044D8</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044DA</addr><code>F5F1FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800044DE</addr><code>0B01006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2966</line><src>                .fca = {0,0,3,0,1,1,1,1,1},</src></hll>
				<hll><line>2967</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>2968</line><src>                .sccml = {0},</src></hll>
				<hll><line>2969</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2970</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2971</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2972</line><src>                .bca = {0,1},</src></hll>
				<hll><line>2973</line><src>                .sea = {0},</src></hll>
				<hll><line>2974</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>2975</line><src>                .warning = {6,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2976</line><src>            }</src></hll>
				<hll><line>2977</line><src>        );</src></hll>
				<hll><line>2978</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2979</line><src>    if (fr_c_rdr[FR_C_RDR_NA_3].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800044E2</addr><code>184EFF09</code><mnemonic>ld.bu     d15,[a15]0x4E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044E6</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x800044FA</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2980</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2981</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:800044E8</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044EC</addr><code>12C822D9</code><mnemonic>lea       a2,[a2]0x2C48</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044F0</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044F2</addr><code>F5E5FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:800044F6</addr><code>0AF5006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2982</line><src>                .fca = {0,0,3,0,0,0,1,1,1},</src></hll>
				<hll><line>2983</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>2984</line><src>                .sccml = {0},</src></hll>
				<hll><line>2985</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>2986</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>2987</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>2988</line><src>                .bca = {0,1},</src></hll>
				<hll><line>2989</line><src>                .sea = {1},</src></hll>
				<hll><line>2990</line><src>                .rcca = {0,1},</src></hll>
				<hll><line>2991</line><src>                .warning = {6,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>2992</line><src>            }</src></hll>
				<hll><line>2993</line><src>        );</src></hll>
				<hll><line>2994</line><src>    }</src></hll>
				<hll><cov>never</cov><line>2995</line><src>    if (fr_c_rdr[FR_C_RDR_NA_4].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:800044FA</addr><code>1854FF09</code><mnemonic>ld.bu     d15,[a15]0x54</mnemonic></asm>
				<asm><cov>never</cov><addr>P:800044FE</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004512</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2996</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>2997</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004500</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004504</addr><code>12EE22D9</code><mnemonic>lea       a2,[a2]0x2C6E</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004508</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000450A</addr><code>F5D9FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000450E</addr><code>0AE9006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>2998</line><src>                .fca = {0,0,2,0,0,0,1,1,1},</src></hll>
				<hll><line>2999</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>3000</line><src>                .sccml = {0},</src></hll>
				<hll><line>3001</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>3002</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>3003</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>3004</line><src>                .bca = {0,1},</src></hll>
				<hll><line>3005</line><src>                .sea = {1},</src></hll>
				<hll><line>3006</line><src>                .rcca = {0,1},</src></hll>
				<hll><line>3007</line><src>                .warning = {6,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>3008</line><src>            }</src></hll>
				<hll><line>3009</line><src>        );</src></hll>
				<hll><line>3010</line><src>    }</src></hll>
				<hll><cov>never</cov><line>3011</line><src>    if (fr_c_rdr[FR_C_RDR_NA_5].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004512</addr><code>185AFF09</code><mnemonic>ld.bu     d15,[a15]0x5A</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004516</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x8000452A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>3012</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>3013</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004518</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000451C</addr><code>22D422D9</code><mnemonic>lea       a2,[a2]0x2C94</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004520</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004522</addr><code>F5CDFF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004526</addr><code>0ADD006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>3014</line><src>                .fca = {0,0,2,0,1,1,1,1,1},</src></hll>
				<hll><line>3015</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>3016</line><src>                .sccml = {0},</src></hll>
				<hll><line>3017</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>3018</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>3019</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>3020</line><src>                .bca = {0,1},</src></hll>
				<hll><line>3021</line><src>                .sea = {1},</src></hll>
				<hll><line>3022</line><src>                .rcca = {0,1},</src></hll>
				<hll><line>3023</line><src>                .warning = {6,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>3024</line><src>            }</src></hll>
				<hll><line>3025</line><src>        );</src></hll>
				<hll><line>3026</line><src>    }</src></hll>
				<hll><cov>never</cov><line>3027</line><src>    if (fr_c_rdr[FR_C_RDR_NA_6].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:8000452A</addr><code>1860FF09</code><mnemonic>ld.bu     d15,[a15]0x60</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000452E</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004542</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>3028</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>3029</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004530</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004534</addr><code>22FA22D9</code><mnemonic>lea       a2,[a2]0x2CBA</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004538</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000453A</addr><code>F5C1FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000453E</addr><code>0AD1006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>3030</line><src>                .fca = {0,0,2,0,1,1,1,1,1},</src></hll>
				<hll><line>3031</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>3032</line><src>                .sccml = {0},</src></hll>
				<hll><line>3033</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>3034</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>3035</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>3036</line><src>                .bca = {0,1},</src></hll>
				<hll><line>3037</line><src>                .sea = {0},</src></hll>
				<hll><line>3038</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>3039</line><src>                .warning = {6,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>3040</line><src>            }</src></hll>
				<hll><line>3041</line><src>        );</src></hll>
				<hll><line>3042</line><src>    }</src></hll>
				<hll><cov>never</cov><line>3043</line><src>    if (fr_c_rdr[FR_C_RDR_NA_7].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004542</addr><code>1866FF09</code><mnemonic>ld.bu     d15,[a15]0x66</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004546</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x8000455A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>3044</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>3045</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004548</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000454C</addr><code>32E022D9</code><mnemonic>lea       a2,[a2]0x2CE0</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004550</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004552</addr><code>F5B5FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:80004556</addr><code>0AC5006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>3046</line><src>                .fca = {0,0,1,0,1,1,1,1,1},</src></hll>
				<hll><line>3047</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>3048</line><src>                .sccml = {0},</src></hll>
				<hll><line>3049</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>3050</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>3051</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>3052</line><src>                .bca = {0,1},</src></hll>
				<hll><line>3053</line><src>                .sea = {0},</src></hll>
				<hll><line>3054</line><src>                .rcca = {0,0},</src></hll>
				<hll><line>3055</line><src>                .warning = {6,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>3056</line><src>            }</src></hll>
				<hll><line>3057</line><src>        );</src></hll>
				<hll><line>3058</line><src>    }</src></hll>
				<hll><cov>never</cov><line>3059</line><src>    if (fr_c_rdr[FR_C_RDR_NA_8].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:8000455A</addr><code>186CFF09</code><mnemonic>ld.bu     d15,[a15]0x6C</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000455E</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x80004572</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>3060</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>3061</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004560</addr><code>28000091</code><mnemonic>movh.a    a2,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004564</addr><code>42C622D9</code><mnemonic>lea       a2,[a2]0x2D06</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004568</addr><code>A440</code><mnemonic>mov16.aa  a4,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000456A</addr><code>F5A9FF61</code><mnemonic>fcall     0x800030BC</mnemonic><comment>.cocofun_27</comment></asm>
				<asm><cov>never</cov><addr>P:8000456E</addr><code>0AB9006D</code><mnemonic>call      0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>3062</line><src>                .fca = {0,0,1,0,1,1,1,1,1},</src></hll>
				<hll><line>3063</line><src>                .scc = {0,0,0,1},</src></hll>
				<hll><line>3064</line><src>                .sccml = {0},</src></hll>
				<hll><line>3065</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>3066</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>3067</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>3068</line><src>                .bca = {0,1},</src></hll>
				<hll><line>3069</line><src>                .sea = {1},</src></hll>
				<hll><line>3070</line><src>                .rcca = {0,1},</src></hll>
				<hll><line>3071</line><src>                .warning = {6,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>3072</line><src>            }</src></hll>
				<hll><line>3073</line><src>        );</src></hll>
				<hll><line>3074</line><src>    }</src></hll>
				<hll><cov>never</cov><line>3075</line><src>    if (fr_c_rdr[FR_C_RDR_NA_9].fault == TRUE) {</src></hll>
				<asm><cov>never</cov><addr>P:80004572</addr><code>1872FF09</code><mnemonic>ld.bu     d15,[a15]0x72</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004576</addr><code>1A5E</code><mnemonic>jne16     d15,#0x1,0x8000458A</mnemonic></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>3076</line><src>        update_inhibit_info(</src></hll>
				<hll><cov>never</cov><line>3077</line><src>            (struct inhibit_info){</src></hll>
				<asm><cov>never</cov><addr>P:80004578</addr><code>F8000091</code><mnemonic>movh.a    a15,#0x8000</mnemonic></asm>
				<asm><cov>never</cov><addr>P:8000457C</addr><code>42ECFFD9</code><mnemonic>lea       a15,[a15]0x2D2C</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004580</addr><code>A240</code><mnemonic>mov16.aa  a2,a10</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80004582</addr><code>F5A3FF61</code><mnemonic>fcall     0x800030C8</mnemonic><comment>.cocofun_28</comment></asm>
				<asm><cov>never</cov><addr>P:80004586</addr><code>0AAD001D</code><mnemonic>j         0x80005AE0</mnemonic><comment>update_inhibit_info</comment></asm>
			</mixed>
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>3078</line><src>                .fca = {0,0,1,0,0,0,1,1,1},</src></hll>
				<hll><line>3079</line><src>                .scc = {0,0,0,0},</src></hll>
				<hll><line>3080</line><src>                .sccml = {0},</src></hll>
				<hll><line>3081</line><src>                .nscc = {0,1},</src></hll>
				<hll><line>3082</line><src>                .lfa = {0,0},</src></hll>
				<hll><line>3083</line><src>                .hda = {0,0,0,1},</src></hll>
				<hll><line>3084</line><src>                .bca = {0,1},</src></hll>
				<hll><line>3085</line><src>                .sea = {1},</src></hll>
				<hll><line>3086</line><src>                .rcca = {0,1},</src></hll>
				<hll><line>3087</line><src>                .warning = {6,0,0,0,NO_FAULT,5,1},</src></hll>
				<hll><line>3088</line><src>            }</src></hll>
				<hll><line>3089</line><src>        );</src></hll>
				<hll><line>3090</line><src>    }</src></hll>
				<hll><line>3091</line><src></src></hll>
				<hll><cov>never</cov><line>3092</line><src>}</src></hll>
				<asm><cov>never</cov><addr>P:8000458A</addr><code>9000</code><mnemonic>ret16     </mnemonic></asm>
			</mixed>
		</List.EXPORT>
	</listing>
</TRACE32>
