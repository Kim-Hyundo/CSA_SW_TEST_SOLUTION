<?xml version="1.0" encoding="iso-8859-1" standalone="no" ?>
<?xml-stylesheet type="text/xsl" href="t32transform.xsl"?>
<TRACE32 file="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Gen\20210524_TRACE32_20_02\Failsafe-TestSpec_RS4_Temp4_210518\Report\Total\Test\FS_InvalidSignal\func-p-80003cfc-80003d05.xml">
	<coverage>
		<COVerage.EXPORT.ListLine ts="1621823194" t32ver="R.2020.09.000128638" t32pv="TRICORE" cpu="TC397XE" metric="object">
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\Rte_SWC_Diag</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>-</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>0</never>
				<bytes>638</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_HWFailure</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>16</never>
				<bytes>236</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\SWC_Failsafe</tree>
				<cov>partial</cov>
				<exec metric="object">0.600%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>16</never>
				<bytes>1666</bytes>
				<bytesok>10</bytesok>
			</module>
			<module>
				<addrFrom>P:80002DEA</addrFrom>
				<addrTo>P:80002F83</addrTo>
				<tree>\\Test\FS_BatteryVoltage</tree>
				<cov>partial</cov>
				<exec metric="object">59.512%</exec>
				<branches>52.000%</branches>
				<ok>8</ok>
				<taken>3</taken>
				<nottaken>7</nottaken>
				<never>7</never>
				<bytes>410</bytes>
				<bytesok>244</bytesok>
			</module>
			<module>
				<addrFrom>P:80002F84</addrFrom>
				<addrTo>P:800030BB</addrTo>
				<tree>\\Test\FS_CANBusOff</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>17</never>
				<bytes>312</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_CANTimeout</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>350</never>
				<bytes>2458</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_InvalidSignal</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>350</never>
				<bytes>6758</bytes>
				<bytesok>0</bytesok>
				<function>
					<addrFrom>P:80003CFC</addrFrom>
					<addrTo>P:80003D05</addrTo>
					<tree uid="p-80003cfc-80003d05">\\Test\FS_InvalidSignal\.cocofun_81</tree>
					<cov>never</cov>
					<exec metric="object">0.000%</exec>
					<branches>-</branches>
					<ok>0</ok>
					<taken>0</taken>
					<nottaken>0</nottaken>
					<never>0</never>
					<bytes>10</bytes>
					<bytesok>0</bytesok>
					<line>
						<addrFrom>P:80003CFC</addrFrom>
						<addrTo>P:80003D05</addrTo>
						<tree>FS_InvalidSignal.c \1--65</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>10</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003CFC</addrFrom>
						<addrTo>P:80003D05</addrTo>
						<tree>FS_InvalidSignal.c \1717--1724</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>10</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80003CFC</addrFrom>
						<addrTo>P:80003D05</addrTo>
						<tree>FS_InvalidSignal.c \1796--1800</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>10</bytes>
						<bytesok>0</bytesok>
					</line>
					<total>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>30</bytes>
						<bytesok>0</bytesok>
					</total>
				</function>
				<total>
					<cov>never</cov>
					<exec metric="object">0.000%</exec>
					<branches>-</branches>
					<ok>0</ok>
					<taken>0</taken>
					<nottaken>0</nottaken>
					<never>0</never>
					<bytes>10</bytes>
					<bytesok>0</bytesok>
				</total>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\FS_SWFailure</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>17</never>
				<bytes>304</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>5</never>
				<bytes>806</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart_tc1</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>402</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart_tc2</tree>
				<cov>partial</cov>
				<exec metric="object">81.094%</exec>
				<branches>87.500%</branches>
				<ok>3</ok>
				<taken>0</taken>
				<nottaken>1</nottaken>
				<never>0</never>
				<bytes>402</bytes>
				<bytesok>326</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_cstart_tc3</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\Test\prost_main</tree>
				<cov>partial</cov>
				<exec metric="object">27.835%</exec>
				<branches>31.818%</branches>
				<ok>1</ok>
				<taken>4</taken>
				<nottaken>1</nottaken>
				<never>5</never>
				<bytes>388</bytes>
				<bytesok>108</bytesok>
			</module>
			<module>
				<addrFrom>P:800065B6</addrFrom>
				<addrTo>P:8000674B</addrTo>
				<tree>\\Test\prost_cstart_tc4</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>P:8000674C</addrFrom>
				<addrTo>P:800068E1</addrTo>
				<tree>\\Test\prost_cstart_tc5</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>P:80006A62</addrFrom>
				<addrTo>P:80006A91</addrTo>
				<tree>\\Test\prost_stubs</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>2</never>
				<bytes>48</bytes>
				<bytesok>0</bytesok>
			</module>
			<total>
				<cov>partial</cov>
				<exec metric="object">4.287%</exec>
				<branches>2.412%</branches>
				<ok>12</ok>
				<taken>7</taken>
				<nottaken>9</nottaken>
				<never>801</never>
				<bytes>16046</bytes>
				<bytesok>688</bytesok>
			</total>
		</COVerage.EXPORT.ListLine>
	</coverage>
	<marker>
		<BookMark.EXPORT ts="1621823194" t32ver="R.2020.09.000128638" t32pv="TRICORE" cpu="TC397XE">
		</BookMark.EXPORT>
	</marker>
	<listing>
		<List.EXPORT ts="1621823194" t32ver="R.2020.09.000128638" t32pv="TRICORE" order="source">
			<mixed module="\\Test\FS_InvalidSignal" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\Test\Target_SW\ASW\Failsafe\FS_Items\FS_InvalidSignal.c">
				<hll><line>1</line><src>/*</src></hll>
				<hll><line>2</line><src> * Author: Insub Song (insub.song@halla.com)</src></hll>
				<hll><line>3</line><src> * Date  : 2019.02.01</src></hll>
				<hll><line>4</line><src> */</src></hll>
				<hll><line>5</line><src></src></hll>
				<hll><line>6</line><src></src></hll>
				<hll><line>7</line><src>#include &quot;Rte_SWC_DiagnosticMonitor.h&quot;</src></hll>
				<hll><line>8</line><src>#include &quot;App_NvM_Ram.h&quot;</src></hll>
				<hll><line>9</line><src></src></hll>
				<hll><line>10</line><src>#include &quot;SWC_Failsafe.h&quot;</src></hll>
				<hll><line>11</line><src>#include &quot;FS_InvalidSignal.h&quot;</src></hll>
				<hll><line>12</line><src>#include &quot;DRV_par.h&quot;</src></hll>
				<hll><line>13</line><src></src></hll>
				<hll><line>14</line><src>#pragma noclear</src></hll>
				<hll><line>15</line><src>boolean is_navi_boot;</src></hll>
				<hll><line>16</line><src>uint16 navi_boot_tick;</src></hll>
				<hll><line>17</line><src>boolean is_navi_handshaking;</src></hll>
				<hll><line>18</line><src>#pragma noclear restore</src></hll>
				<hll><line>19</line><src></src></hll>
				<hll><line>20</line><src>uint8 rdr_fail_flag = 0;</src></hll>
				<hll><line>21</line><src>extern uint8 rdr_another_fail_flag;</src></hll>
				<hll><line>22</line><src>extern boolean chk_rdr_inhibit;</src></hll>
				<hll><line>23</line><src></src></hll>
				<hll><line>24</line><src>#if CCAN == CANFD</src></hll>
				<hll><line>25</line><src>#if VEH_TYPE == NORMAL</src></hll>
				<hll><line>26</line><src>static sigerr_t ems[EMS_ITEM_NUM];</src></hll>
				<hll><line>27</line><src>static sigerr_t tcu[TCU_ITEM_NUM];</src></hll>
				<hll><line>28</line><src>#elif VEH_TYPE == EV</src></hll>
				<hll><line>29</line><src>static sigerr_t vcu[VCU_ITEM_NUM];</src></hll>
				<hll><line>30</line><src>#elif VEH_TYPE == HEV</src></hll>
				<hll><line>31</line><src>static sigerr_t ems[EMS_ITEM_NUM];</src></hll>
				<hll><line>32</line><src>static sigerr_t hcu[HCU_ITEM_NUM];</src></hll>
				<hll><line>33</line><src>static sigerr_t htcu[HTCU_ITEM_NUM];</src></hll>
				<hll><line>34</line><src>#endif /* VEH_TYPE */</src></hll>
				<hll><line>35</line><src>static sigerr_t bcm[BCM_ITEM_NUM];</src></hll>
				<hll><line>36</line><src>static sigerr_t clu[CLU_ITEM_NUM];</src></hll>
				<hll><line>37</line><src>static sigerr_t esc[ESC_ITEM_NUM];</src></hll>
				<hll><line>38</line><src>static sigerr_t icu[ICU_ITEM_NUM];</src></hll>
				<hll><line>39</line><src>static sigerr_t mdps[MDPS_ITEM_NUM];</src></hll>
				<hll><line>40</line><src>static sigerr_t sas[SAS_ITEM_NUM];</src></hll>
				<hll><line>41</line><src>static sigerr_t sbcm[SBCM_ITEM_NUM];</src></hll>
				<hll><line>42</line><src>static sigerr_t hod[HOD_ITEM_NUM];</src></hll>
				<hll><line>43</line><src>static sigerr_t yrs[YRS_ITEM_NUM];</src></hll>
				<hll><line>44</line><src>static sigerr_t swrc[SWRC_ITEM_NUM];</src></hll>
				<hll><line>45</line><src>static sigerr_t icsc[ICSC_ITEM_NUM];</src></hll>
				<hll><line>46</line><src></src></hll>
				<hll><line>47</line><src>#elif CCAN == HSCAN</src></hll>
				<hll><line>48</line><src>static sigerr_t ems[EMS_ITEM_NUM];</src></hll>
				<hll><line>49</line><src>static sigerr_t tcu[TCU_ITEM_NUM];</src></hll>
				<hll><line>50</line><src>static sigerr_t cgw[CGW_ITEM_NUM];</src></hll>
				<hll><line>51</line><src>static sigerr_t clu[CLU_ITEM_NUM];</src></hll>
				<hll><line>52</line><src>static sigerr_t esc[ESC_ITEM_NUM];</src></hll>
				<hll><line>53</line><src>static sigerr_t mdps[MDPS_ITEM_NUM];</src></hll>
				<hll><line>54</line><src>static sigerr_t sas[SAS_ITEM_NUM];</src></hll>
				<hll><line>55</line><src>#endif /* CCAN */</src></hll>
				<hll><line>56</line><src>static sigerr_t navi[NAVI_ITEM_NUM];</src></hll>
				<hll><line>57</line><src>static sigerr_t fr_cmr[FR_CMR_ITEM_NUM];</src></hll>
				<hll><line>58</line><src>static sigerr_t fr_c_rdr[FR_C_RDR_ITEM_NUM];</src></hll>
				<hll><line>59</line><src>sigerr_t fr_rdr[FR_RDR_ITEM_NUM];</src></hll>
				<hll><line>60</line><src></src></hll>
				<hll><line>61</line><src>boolean is_valid_ems(void)</src></hll>
				<hll><line>62</line><src>{</src></hll>
				<hll><line>63</line><src>#if CCAN == CANFD</src></hll>
				<hll><line>64</line><src>#if VEH_TYPE == NORMAL</src></hll>
				<hll><cov>never</cov><line>65</line><src>    return ((is_timeout(CHASSIS_0, EMS_01_10ms_POS) || is_timeout(CHASSIS_0, EMS_02_10ms_POS) || ems[EMS_C161386_0].fault || ems[EMS_C161386_1].fault || ems[EMS_C161386_2].fault) == FALSE);</src></hll>
				<asm><cov>never</cov><addr>P:80003CFC</addr><code>F9004091</code><label>.cocofun_81:                                                                                                                                                                                                                                                    </label><mnemonic>movh.a    a15,#0x9004</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003D00</addr><code>205CFFD9</code><mnemonic>lea       a15,[a15]0x49C</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80003D04</addr><code>7000</code><mnemonic>fret16    </mnemonic></asm>
			</mixed>
		</List.EXPORT>
	</listing>
</TRACE32>
