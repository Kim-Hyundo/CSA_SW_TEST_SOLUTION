<?xml version="1.0" encoding="iso-8859-1" standalone="no" ?>
<?xml-stylesheet type="text/xsl" href="t32transform.xsl"?>
<TRACE32 file="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Gen\20210610_TRACE32_20_02\Failsafe-TestSpec_RS4_0104\Report\DCU15_FAILSAFE_002_BUS\MANDO_FailSafe_Integration\prost_cstart_tc1\func-p-80005b40-80005b5f.xml">
	<coverage>
		<COVerage.EXPORT.ListLine ts="1623300831" t32ver="R.2020.09.000128638" t32pv="TRICORE" cpu="TC397XE" metric="object">
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\MANDO_FailSafe_Integration\Rte_SWC_Diag</tree>
				<cov>partial</cov>
				<exec metric="object">50.847%</exec>
				<branches>-</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>0</never>
				<bytes>590</bytes>
				<bytesok>300</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\MANDO_FailSafe_Integration\FS_HWFailure</tree>
				<cov>partial</cov>
				<exec metric="object">16.831%</exec>
				<branches>10.000%</branches>
				<ok>0</ok>
				<taken>1</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>202</bytes>
				<bytesok>34</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\MANDO_FailSafe_Integration\SWC_Failsafe</tree>
				<cov>partial</cov>
				<exec metric="object">66.020%</exec>
				<branches>-</branches>
				<ok>4</ok>
				<taken>6</taken>
				<nottaken>21</nottaken>
				<bytes>1548</bytes>
				<bytesok>1022</bytesok>
			</module>
			<module>
				<addrFrom>P:80002C38</addrFrom>
				<addrTo>P:80002DC9</addrTo>
				<tree>\\MANDO_FailSafe_Integration\FS_BatteryVoltage</tree>
				<cov>partial</cov>
				<exec metric="object">48.258%</exec>
				<branches>33.333%</branches>
				<ok>0</ok>
				<taken>11</taken>
				<nottaken>5</nottaken>
				<never>8</never>
				<bytes>402</bytes>
				<bytesok>194</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\MANDO_FailSafe_Integration\FS_CANBusOff</tree>
				<cov>partial</cov>
				<exec metric="object">88.372%</exec>
				<branches>3.191%</branches>
				<ok>7</ok>
				<taken>2</taken>
				<nottaken>5</nottaken>
				<never>315</never>
				<bytes>258</bytes>
				<bytesok>228</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\MANDO_FailSafe_Integration\FS_CANTimeout</tree>
				<cov>partial</cov>
				<exec metric="object">41.776%</exec>
				<branches>19.908%</branches>
				<ok>11</ok>
				<taken>79</taken>
				<nottaken>30</nottaken>
				<never>209</never>
				<bytes>2432</bytes>
				<bytesok>1016</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\MANDO_FailSafe_Integration\FS_InvalidSignal</tree>
				<cov>partial</cov>
				<exec metric="object">55.779%</exec>
				<branches>37.689%</branches>
				<ok>6</ok>
				<taken>129</taken>
				<nottaken>107</nottaken>
				<never>87</never>
				<bytes>5866</bytes>
				<bytesok>3272</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\MANDO_FailSafe_Integration\FS_SWFailure</tree>
				<cov>partial</cov>
				<exec metric="object">51.020%</exec>
				<branches>2.127%</branches>
				<ok>2</ok>
				<taken>4</taken>
				<nottaken>6</nottaken>
				<never>317</never>
				<bytes>392</bytes>
				<bytesok>200</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\MANDO_FailSafe_Integration\prost_cstart</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>5</never>
				<bytes>806</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>P:80005B2A</addrFrom>
				<addrTo>P:80005CBB</addrTo>
				<tree>\\MANDO_FailSafe_Integration\prost_cstart_tc1</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>402</bytes>
				<bytesok>0</bytesok>
				<function>
					<addrFrom>P:80005B40</addrFrom>
					<addrTo>P:80005B5F</addrTo>
					<tree uid="p-80005b40-80005b5f">\\MANDO_FailSafe_Integration\prost_cstart_tc1\endinit_clear_tc1</tree>
					<cov>never</cov>
					<exec metric="object">0.000%</exec>
					<branches>-</branches>
					<ok>0</ok>
					<taken>0</taken>
					<nottaken>0</nottaken>
					<never>0</never>
					<bytes>32</bytes>
					<bytesok>0</bytesok>
					<line>
						<addrFrom>P:80005B5E</addrFrom>
						<addrTo>P:80005B5F</addrTo>
						<tree>prost_cstart_tc1.c \1--92</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>2</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005B40</addrFrom>
						<addrTo>P:80005B49</addrTo>
						<tree>prost_cstart_tc1.c \373--426</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>10</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005B4A</addrFrom>
						<addrTo>P:80005B4D</addrTo>
						<tree>prost_cstart_tc1.c \427--428</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005B4E</addrFrom>
						<addrTo>P:80005B51</addrTo>
						<tree>prost_cstart_tc1.c \429--429</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005B4E</addrFrom>
						<addrTo>P:80005B51</addrTo>
						<tree>prost_cstart_tc1.c \430--431</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005B52</addrFrom>
						<addrTo>P:80005B55</addrTo>
						<tree>prost_cstart_tc1.c \432--439</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005B56</addrFrom>
						<addrTo>P:80005B59</addrTo>
						<tree>prost_cstart_tc1.c \440--440</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>4</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005B5A</addrFrom>
						<addrTo>P:80005B5B</addrTo>
						<tree>prost_cstart_tc1.c \441--441</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>2</bytes>
						<bytesok>0</bytesok>
					</line>
					<line>
						<addrFrom>P:80005B5C</addrFrom>
						<addrTo>P:80005B5D</addrTo>
						<tree>prost_cstart_tc1.c \442--442</tree>
						<srcpath>C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c</srcpath>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>2</bytes>
						<bytesok>0</bytesok>
					</line>
					<total>
						<cov>never</cov>
						<exec metric="object">0.000%</exec>
						<branches>-</branches>
						<ok>0</ok>
						<taken>0</taken>
						<nottaken>0</nottaken>
						<never>0</never>
						<bytes>36</bytes>
						<bytesok>0</bytesok>
					</total>
				</function>
				<total>
					<cov>never</cov>
					<exec metric="object">0.000%</exec>
					<branches>-</branches>
					<ok>0</ok>
					<taken>0</taken>
					<nottaken>0</nottaken>
					<never>0</never>
					<bytes>32</bytes>
					<bytesok>0</bytesok>
				</total>
			</module>
			<module>
				<addrFrom>P:80005CBC</addrFrom>
				<addrTo>P:80005E4D</addrTo>
				<tree>\\MANDO_FailSafe_Integration\prost_cstart_tc2</tree>
				<cov>partial</cov>
				<exec metric="object">81.094%</exec>
				<branches>87.500%</branches>
				<ok>3</ok>
				<taken>0</taken>
				<nottaken>1</nottaken>
				<never>0</never>
				<bytes>402</bytes>
				<bytesok>326</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\MANDO_FailSafe_Integration\prost_cstart_tc3</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\MANDO_FailSafe_Integration\prost_cstart_tc4</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>multiple</addrFrom>
				<tree>\\MANDO_FailSafe_Integration\prost_main</tree>
				<cov>partial</cov>
				<exec metric="object">23.456%</exec>
				<branches>25.000%</branches>
				<ok>1</ok>
				<taken>1</taken>
				<nottaken>1</nottaken>
				<never>5</never>
				<bytes>324</bytes>
				<bytesok>76</bytesok>
			</module>
			<module>
				<addrFrom>P:80006180</addrFrom>
				<addrTo>P:80006315</addrTo>
				<tree>\\MANDO_FailSafe_Integration\prost_cstart_tc5</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>4</never>
				<bytes>406</bytes>
				<bytesok>0</bytesok>
			</module>
			<module>
				<addrFrom>P:80006456</addrFrom>
				<addrTo>P:80006485</addrTo>
				<tree>\\MANDO_FailSafe_Integration\prost_stubs</tree>
				<cov>never</cov>
				<exec metric="object">0.000%</exec>
				<branches>0.000%</branches>
				<ok>0</ok>
				<taken>0</taken>
				<nottaken>0</nottaken>
				<never>2</never>
				<bytes>48</bytes>
				<bytesok>0</bytesok>
			</module>
			<total>
				<cov>partial</cov>
				<exec metric="object">44.781%</exec>
				<branches>17.220%</branches>
				<ok>34</ok>
				<taken>233</taken>
				<nottaken>176</nottaken>
				<never>942</never>
				<bytes>14890</bytes>
				<bytesok>6668</bytesok>
			</total>
		</COVerage.EXPORT.ListLine>
	</coverage>
	<marker>
		<BookMark.EXPORT ts="1623300831" t32ver="R.2020.09.000128638" t32pv="TRICORE" cpu="TC397XE">
		</BookMark.EXPORT>
	</marker>
	<listing>
		<List.EXPORT ts="1623300831" t32ver="R.2020.09.000128638" t32pv="TRICORE" order="source">
			<mixed module="\\MANDO_FailSafe_Integration\prost_cstart_tc1" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c">
				<hll><line>1</line><src>/**************************************************************************</src></hll>
				<hll><line>2</line><src>**                                                                        *</src></hll>
				<hll><line>3</line><src>**  FILE        :  cstart_tc1.c                                           *</src></hll>
				<hll><line>4</line><src>**                                                                        *</src></hll>
				<hll><line>5</line><src>**  DESCRIPTION :                                                         *</src></hll>
				<hll><line>6</line><src>**      The system startup code initializes the processor&apos;s registers     *</src></hll>
				<hll><line>7</line><src>**      and the application C variables for core 1.                       *</src></hll>
				<hll><line>8</line><src>**                                                                        *</src></hll>
				<hll><line>9</line><src>**  Copyright 1996-2018 TASKING BV                                        *</src></hll>
				<hll><line>10</line><src>**                                                                        *</src></hll>
				<hll><line>11</line><src>**************************************************************************/</src></hll>
				<hll><line>12</line><src></src></hll>
				<hll><line>13</line><src>#include &quot;prost_cstart_tc1.h&quot;         /* include configuration */</src></hll>
				<hll><line>14</line><src></src></hll>
				<hll><line>15</line><src>#include &lt;stdlib.h&gt;</src></hll>
				<hll><line>16</line><src>#include &lt;stdbool.h&gt;</src></hll>
				<hll><line>17</line><src></src></hll>
				<hll><line>18</line><src>#ifdef __CPU__</src></hll>
				<hll><line>19</line><src>#include __SFRFILE__(__CPU__)</src></hll>
				<hll><line>20</line><src>#endif</src></hll>
				<hll><line>21</line><src></src></hll>
				<hll><line>22</line><src>#if ( 1&gt;0 ) &amp;&amp; ( defined _REGTC21X_H || defined _REGTC22X_H || defined _REGTC23X_ADAS_H || defined _REGTC23X_H )</src></hll>
				<hll><line>23</line><src>#pragma message &quot;This derivative only supports core 0&quot;</src></hll>
				<hll><line>24</line><src>#else</src></hll>
				<hll><line>25</line><src>#if 1&gt;1 &amp;&amp; ( defined _REGTC26X_H || defined _REGTC26XB_H )</src></hll>
				<hll><line>26</line><src>#pragma message &quot;This derivative only supports core 0 and 1.&quot;</src></hll>
				<hll><line>27</line><src>#else</src></hll>
				<hll><line>28</line><src>#if ( 1&gt;2 ) &amp;&amp; !( defined _REGTC38X_H || defined _REGTC39X_H || defined _REGTC39XB_H || defined _REGUSERDEF162_H )</src></hll>
				<hll><line>29</line><src>#pragma message &quot;This derivative only supports core 0, 1 and 2&quot;</src></hll>
				<hll><line>30</line><src>#else</src></hll>
				<hll><line>31</line><src>#if ( 1&gt;3 ) &amp;&amp; !( defined _REGTC39X_H || defined _REGTC39XB_H || defined _REGUSERDEF162_H )</src></hll>
				<hll><line>32</line><src>#pragma message &quot;This derivative only supports core 0, 1, 2 and 3&quot;</src></hll>
				<hll><line>33</line><src>#else</src></hll>
				<hll><line>34</line><src></src></hll>
				<hll><line>35</line><src>#pragma weak    exit</src></hll>
				<hll><line>36</line><src>#pragma extern  _Exit</src></hll>
				<hll><line>37</line><src>#pragma tradeoff 4                              /* preset tradeoff level (for size) */</src></hll>
				<hll><line>38</line><src>#pragma runtime BCM                             /* disable runtime error checking for cstart */</src></hll>
				<hll><line>39</line><src>#pragma nomisrac                                /* disable MISRA-C checking */</src></hll>
				<hll><line>40</line><src>#pragma immediate_in_code                       /* no external ROM access before bus configuration */</src></hll>
				<hll><line>41</line><src></src></hll>
				<hll><line>42</line><src>#if __USE_ARGC_ARGV_TC1</src></hll>
				<hll><line>43</line><src>#pragma noclear                                 /* bss clearing not before cinit */</src></hll>
				<hll><line>44</line><src>static char argcv_tc1[__ARGCV_BUFSIZE_TC1] __align(4);</src></hll>
				<hll><line>45</line><src>#pragma clear</src></hll>
				<hll><line>46</line><src>extern int _argcv( const char *, size_t );</src></hll>
				<hll><line>47</line><src>#endif</src></hll>
				<hll><line>48</line><src></src></hll>
				<hll><line>49</line><src>/* linker definitions */</src></hll>
				<hll><line>50</line><src>extern __far void _lc_ue_ustack_tc1[];  /* user stack end */</src></hll>
				<hll><line>51</line><src>extern __far void _lc_ue_istack_tc1[];  /* interrupt stack end */</src></hll>
				<hll><line>52</line><src>extern __far void _lc_u_int_tab_tc1[];  /* interrupt table */</src></hll>
				<hll><line>53</line><src>extern __far void _lc_u_trap_tab_tc1[]; /* trap table */</src></hll>
				<hll><line>54</line><src>extern __far void _SMALL_DATA_TC1[];       /* centre of A0 addressable area */</src></hll>
				<hll><line>55</line><src>extern __far void _LITERAL_DATA_TC1[];     /* centre of A1 addressable area */</src></hll>
				<hll><line>56</line><src>extern __far void _A8_DATA_TC1[];          /* centre of A8 addressable area */</src></hll>
				<hll><line>57</line><src>extern __far void _A9_DATA_TC1[];          /* centre of A9 addressable area */</src></hll>
				<hll><line>58</line><src></src></hll>
				<hll><line>59</line><src>/* external functions */</src></hll>
				<hll><line>60</line><src>#if __C_TC1_INIT</src></hll>
				<hll><line>61</line><src>extern void _c_init_tc1(void);          /* C initialization function */</src></hll>
				<hll><line>62</line><src>#endif</src></hll>
				<hll><line>63</line><src>#ifdef __CALL_TC1_INIT</src></hll>
				<hll><line>64</line><src>extern void _call_init_tc1(void);               /* call a user function before main() */</src></hll>
				<hll><line>65</line><src>#endif</src></hll>
				<hll><line>66</line><src>#ifdef _CALL_ENDINIT_TC1</src></hll>
				<hll><line>67</line><src>extern void _endinit_tc1(void);         /* call a user function with protection switched off */</src></hll>
				<hll><line>68</line><src>#endif</src></hll>
				<hll><line>69</line><src></src></hll>
				<hll><line>70</line><src>/* main references with default core association share */</src></hll>
				<hll><line>71</line><src>#pragma extern main_core1</src></hll>
				<hll><line>72</line><src>extern int main_core1( int argc, char *argv[] );</src></hll>
				<hll><line>73</line><src></src></hll>
				<hll><line>74</line><src>/* local functions */</src></hll>
				<hll><line>75</line><src>static void __noinline__ __noreturn__ __jump__ __init_sp( void );</src></hll>
				<hll><line>76</line><src>static void __noinline__ __noreturn__ __jump__ _start( void );</src></hll>
				<hll><line>77</line><src></src></hll>
				<hll><line>78</line><src>/* endinit types */</src></hll>
				<hll><line>79</line><src>typedef enum</src></hll>
				<hll><line>80</line><src>{</src></hll>
				<hll><line>81</line><src>        _ENDINIT_DISABLE,</src></hll>
				<hll><line>82</line><src>        _ENDINIT_ENABLE</src></hll>
				<hll><line>83</line><src>}       _endinit_t;</src></hll>
				<hll><line>84</line><src></src></hll>
				<hll><line>85</line><src>/*</src></hll>
				<hll><line>86</line><src> *      Inlining is required for endinit_set and safety_endinit_set,</src></hll>
				<hll><line>87</line><src> *      because the CSA list is not ready to support function calls.</src></hll>
				<hll><line>88</line><src> */</src></hll>
				<hll><line>89</line><src>static void inline endinit_set(_endinit_t endinit_value);</src></hll>
				<hll><line>90</line><src>        </src></hll>
				<hll><line>91</line><src>/* external interface to endinit_set */</src></hll>
				<hll><cov>never</cov><line>92</line><src>extern void _endinit_clear_tc1(void) { endinit_set(_ENDINIT_DISABLE); }</src></hll>
				<asm><cov>never</cov><addr>P:80005B5E</addr><code>9000</code><mnemonic>ret16     </mnemonic></asm>
			</mixed>
			<mixed module="\\MANDO_FailSafe_Integration\prost_cstart_tc1" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c">
				<hll><line>373</line><src>#endif</src></hll>
				<hll><line>374</line><src></src></hll>
				<hll><line>375</line><src>        /*</src></hll>
				<hll><line>376</line><src>         * Default trap vectors are resolved from the C-library.</src></hll>
				<hll><line>377</line><src>         */</src></hll>
				<hll><line>378</line><src>#if __BTV_TC1_INIT</src></hll>
				<hll><line>379</line><src>#  if __RESOLVE_TRAP_0_TC1</src></hll>
				<hll><line>380</line><src>#    pragma extern  _trapmmu</src></hll>
				<hll><line>381</line><src>#  endif</src></hll>
				<hll><line>382</line><src>#  if __RESOLVE_TRAP_1_TC1</src></hll>
				<hll><line>383</line><src>#    pragma extern  _trapprotection</src></hll>
				<hll><line>384</line><src>#  endif</src></hll>
				<hll><line>385</line><src>#  if __RESOLVE_TRAP_2_TC1</src></hll>
				<hll><line>386</line><src>#    pragma extern  _trapinstruction</src></hll>
				<hll><line>387</line><src>#  endif</src></hll>
				<hll><line>388</line><src>#  if __RESOLVE_TRAP_3_TC1</src></hll>
				<hll><line>389</line><src>#    pragma extern  _trapcontext</src></hll>
				<hll><line>390</line><src>#  endif</src></hll>
				<hll><line>391</line><src>#  if __RESOLVE_TRAP_4_TC1</src></hll>
				<hll><line>392</line><src>#    pragma extern  _trapbus</src></hll>
				<hll><line>393</line><src>#  endif</src></hll>
				<hll><line>394</line><src>#  if __RESOLVE_TRAP_5_TC1</src></hll>
				<hll><line>395</line><src>#    pragma extern  _trapassertion</src></hll>
				<hll><line>396</line><src>#  endif</src></hll>
				<hll><line>397</line><src>#  if __RESOLVE_TRAP_6_TC1</src></hll>
				<hll><line>398</line><src>#    pragma extern  _trapsystem</src></hll>
				<hll><line>399</line><src>#  endif</src></hll>
				<hll><line>400</line><src>#  if __RESOLVE_TRAP_7_TC1</src></hll>
				<hll><line>401</line><src>#    pragma extern  _trapnmi</src></hll>
				<hll><line>402</line><src>#  endif</src></hll>
				<hll><line>403</line><src>#endif</src></hll>
				<hll><line>404</line><src></src></hll>
				<hll><line>405</line><src>}</src></hll>
				<hll><line>406</line><src></src></hll>
				<hll><line>407</line><src>#pragma optimize R</src></hll>
				<hll><line>408</line><src></src></hll>
				<hll><line>409</line><src>/**************************************************************************</src></hll>
				<hll><line>410</line><src> *</src></hll>
				<hll><line>411</line><src> * FUNCTION:     endinit_set</src></hll>
				<hll><line>412</line><src> *</src></hll>
				<hll><line>413</line><src> * DESCRIPTION:  Sets or Clears the ENDINIT bit in the SCU_WDTCPU1CON0</src></hll>
				<hll><line>414</line><src> *               register in order to enabled or disable the write-protection for</src></hll>
				<hll><line>415</line><src> *               registers protected via the EndInit feature</src></hll>
				<hll><line>416</line><src> *               (ie. BTV, BIV, ISP, PCON0, DCON0).</src></hll>
				<hll><line>417</line><src> *</src></hll>
				<hll><line>418</line><src> *************************************************************************/</src></hll>
				<hll><line>419</line><src>static void inline endinit_set( _endinit_t endinit_value )</src></hll>
				<hll><line>420</line><src>{</src></hll>
				<hll><line>421</line><src>        unsigned int wdt_con0;</src></hll>
				<hll><line>422</line><src></src></hll>
				<hll><line>423</line><src>        /*</src></hll>
				<hll><line>424</line><src>         * 1st step: Password access (create password and send to SCU_WDTCPU1CON0)</src></hll>
				<hll><line>425</line><src>         */        </src></hll>
				<hll><cov>never</cov><line>426</line><src>        wdt_con0 = SCU_WDTCPU1CON0.U;</src></hll>
				<asm><cov>never</cov><addr>P:80005B40</addr><code>FF003091</code><label>_endinit_clear_tc1:                                                                                                                                                                                                                                             </label><mnemonic>movh.a    a15,#0xF003</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005B44</addr><code>9618FFD9</code><mnemonic>lea       a15,[a15]0x6258</mnemonic></asm>
				<asm><cov>never</cov><addr>P:80005B48</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic></asm>
			</mixed>
			<mixed module="\\MANDO_FailSafe_Integration\prost_cstart_tc1" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c">
				<hll><line>427</line><src></src></hll>
				<hll><cov>never</cov><line>428</line><src>        wdt_con0 &amp;= 0xffffff01;                 /* clear WDTLCK, WDTHPW0, WDTHPW1 */</src></hll>
				<asm><cov>never</cov><addr>P:80005B4A</addr><code>F0870FB7</code><mnemonic>insert    d15,d15,#0x0,0x1,#0x7</mnemonic></asm>
			</mixed>
			<mixed module="\\MANDO_FailSafe_Integration\prost_cstart_tc1" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c">
				<hll><cov>never</cov><line>429</line><src>        wdt_con0 |= 0xf1;                       /* set WDTHPW1 to 0xf and ENDINIT to 1</src></hll>
				<asm><cov>never</cov><addr>P:80005B4E</addr><code>F196</code><mnemonic>or16      d15,#0xF1</mnemonic><comment>wdt_con0,#241</comment></asm>
				<asm><cov>never</cov><addr>P:80005B50</addr><code>FF74</code><mnemonic>st16.w    [a15],d15</mnemonic><comment>[a15],wdt_con0</comment></asm>
			</mixed>
			<mixed module="\\MANDO_FailSafe_Integration\prost_cstart_tc1" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c">
				<hll><line>432</line><src></src></hll>
				<hll><line>433</line><src>        /*</src></hll>
				<hll><line>434</line><src>         * 2nd step: Modify access, set the bit ENDINIT to 1 or 0 to allow access to</src></hll>
				<hll><line>435</line><src>         *           registers: SCU_WDTCPU1CON1, BTV, BIV, ISP and mod_CLC</src></hll>
				<hll><line>436</line><src>         *</src></hll>
				<hll><line>437</line><src>         */</src></hll>
				<hll><line>438</line><src>        wdt_con0 &amp;= 0xfffffff0;                 /* clear WDTHPW0, WDTLCK, ENDINIT  */</src></hll>
				<hll><cov>never</cov><line>439</line><src>        wdt_con0 |= 0x02 | endinit_value;       /* WDTHPW0=0, WDTLCK=1, ENDINIT=endinit_value */</src></hll>
				<asm><cov>never</cov><addr>P:80005B52</addr><code>F0042FB7</code><mnemonic>insert    d15,d15,#0x2,0x0,#0x4</mnemonic><comment>wdt_con0,wdt_con0,#2,0,#4</comment></asm>
			</mixed>
			<mixed module="\\MANDO_FailSafe_Integration\prost_cstart_tc1" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c">
				<hll><cov>never</cov><line>440</line><src>        __isync();</src></hll>
				<asm><cov>never</cov><addr>P:80005B56</addr><code>04C0000D</code><mnemonic>isync     </mnemonic></asm>
			</mixed>
			<mixed module="\\MANDO_FailSafe_Integration\prost_cstart_tc1" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c">
				<hll><cov>never</cov><line>441</line><src>        SCU_WDTCPU1CON0.U = wdt_con0;          </src></hll>
				<asm><cov>never</cov><addr>P:80005B5A</addr><code>FF74</code><mnemonic>st16.w    [a15],d15</mnemonic><comment>[a15],wdt_con0</comment></asm>
			</mixed>
			<mixed module="\\MANDO_FailSafe_Integration\prost_cstart_tc1" srcpath="C:\Users\CSA_DEV\Documents\Working\Prost_v2.0\Workspace\MANDO_FailSafe_Integration\Target_SW\prost_cstart_tc1.c">
				<hll><cov>never</cov><line>442</line><src>        SCU_WDTCPU1CON0.U;         /* read is required */</src></hll>
				<asm><cov>never</cov><addr>P:80005B5C</addr><code>FF54</code><mnemonic>ld16.w    d15,[a15]</mnemonic><comment>wdt_con0,[a15]</comment></asm>
			</mixed>
		</List.EXPORT>
	</listing>
</TRACE32>
