; --------------------------------------------------------------------------------
; @Title: SMX specific menu
; @Description: -
; @Author: DIE
; @Copyright: (c) 1989-2014 Lauterbach GmbH, licensed for use with TRACE32(R) only
; --------------------------------------------------------------------------------
; $Id: smx.men 1088 2014-07-03 07:53:05Z kjmal $


add
menu
(
  popup "&SMX"
  (
    menuitem "Display Configuration"      "TASK.ConFigtab"
    default
    menuitem "Display Tasks"       "TASK.TASK"
    menuitem "Display Pools"       "TASK.POOL"
    menuitem "Display Blocks"      "TASK.BLOCK"
    menuitem "Display Messages"    "TASK.MeSsaGe"
    menuitem "Display Exchanges"   "TASK.eXCHanGe"
    menuitem "Display Semaphores"  "TASK.SEMAphore"
    menuitem "Display Mutexes"     "TASK.MuTeX"
    menuitem "Display Events"      "TASK.EvtQueue"
    menuitem "Display Event Tables"
    (
        if task.config(saversion)<400.
          &htp="ht_present"
        else
          &htp="smx_htpres"
        if data.byte(&htp)!=0
          TASK.EvtTable
        else
          sYmbol.Browse ev* /Click "Task.EvtTable data.long(*)" /Delete
    )
    menuitem "Display Pipes"    "TASK.PIPE"
    enable task.config(saversion)<400.
    menuitem "Display Buckets"  "TASK.BUCKet"
    menuitem "Display LSRs"     "TASK.LSR"
    menuitem "Display Timers"   "TASK.TIMER"

    separator
    popup "&Stack Coverage"
    (
      menuitem "List Stacks"           "TASK.STacK"
      menuitem "Add Task to Cov"       "TASK.STacK.ADD"
      menuitem "Remove Task from Cov"  "TASK.STacK.ReMove"
      enable ice()||fire()
      menuitem "Reset Coverage" "TASK.STacK.RESet"
    )
  )
  popup "Trace"
  (
    popup "List"
    (
      separator
      menuitem "&Task Switches"    "Trace.List List.TASK"
      menuitem "Default and Tasks" "Trace.List List.TASK def"
    )
  )
  popup "Perf"
  (
    separator
    popup "&Task Runtime"
    (
        menuitem "&Prepare"
        (
          if t.method.analyzer()
          (
            Analyzer.AutoInit on
          )
          if (ice()||fire())&&!a.mode.flow()
          (
            Analyzer.ReProgram
            (
              Sample.Enable if AlphaBreak&&Write
            )
          )
	      Break.Delete /Alpha
	      Break.Set task.config(magic)++(task.config(magicsize)-1) /Alpha
        )
        menuitem "[:perf]Show &Numerical"   "Trace.STATistic.TASK"
        menuitem "[:achart]Show as &Timing" "Trace.CHART.TASK"
        menuitem "[:achart]Tracking with Trace &List"
        (
          Trace.List List.TASK DEFault /Track
          Trace.CHART.TASK /Track
        )
    )
    popup "&Task Function Runtime"
    (
      menuitem "&Prepare"
      (
        if t.method.analyzer()
        (
          Analyzer.AutoInit on
          Analyzer.STATistic.PreFetch on
        )

        if (ice()||fire())&&!a.mode.flow()
        (
          if a.config.hac()
          (
             Analyzer.ReProgram
             (
               Sample.Enable if AlphaBreak
               Sample.Enable if BetaBreak
               Mark.A        if AlphaBreak
               Mark.B        if BetaBreak
             )
          )
          else
          (
             Analyzer.ReProgram
             (
               Sample.Enable if AlphaBreak||BetaBreak
               Mark.A if AlphaBreak
               Mark.B if BetaBreak
             )
          )
	    )

        Break.Delete /Alpha /Beta /Charly
        Break.SetFunc
	    Break.Set task.config(magic)++(task.config(magicsize)-1) /Alpha
      )
      menuitem "[:perf]Show &Numerical"     "Trace.STATistic.TASKFUNC"
      menuitem "[:perf]Show as &Tree"       "Trace.STATistic.TASKTREE"
      menuitem "[:perf]Show &Detailed Tree" "Trace.STATistic.TASKTREE ALL"
      menuitem "[:achart]Show as &Timing"   "Trace.CHART.TASKFUNC"
      menuitem "[:alist]Show N&esting"      "Trace.List List.TASK FUNC TI.FUNC"
    )
  )
  popup "&Help"
  (
     menuitem "SMX Multitask Debugger Manual" "HELP __RTOS_SMX_"
  )
)


menu "task.task"
(
  default
  menuitem "Display Detailed"  "TASK.TASK track.address()"
  menuitem "Display TCB"
  (
    &address=address.offset(track.address())
    Var.View %m (TCB*)&address
  )
  menuitem "Display Stack Frame"   
  (
    &task=address.offset(track.address())
    Var.Frame /Locals /Caller /Task &task
  )
  separator
  menuitem "Add to Stack Cov"  "TASK.STK.ADD address.offset(track.address())"
  menuitem "Rm from Stack Cov" "TASK.STK.RM  address.offset(track.address())"
  separator
  menuitem "Dump TCB"
  (
    &address=address.offset(track.address())
    Data.dump &address
  )
)


menu "task.pool"
(
  default
  menuitem "Display Detailed"  "TASK.POOL track.address()"
  menuitem "Display PCB"
  (
    &address=address.offset(track.address())
    Var.View %m (PCB*)&address
  )
  menuitem "Dump PCB"          "Data.dump track.address()"
)


menu "task.tim"
(
  default
  menuitem "Display Detailed"  "TASK.TIMer track.address()"
  menuitem "Display TMCB"
  (
    &address=address.offset(track.address())
    Var.View %m (TMCB*)&address
  )
  menuitem "Dump TMCB"         "Data.dump track.address()"
)

