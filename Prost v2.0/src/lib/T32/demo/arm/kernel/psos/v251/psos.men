; --------------------------------------------------------------------------------
; @Title: additional menu for pSOS+ support
; @Description: -
; @Author: DIE
; @Copyright: (c) 1989-2014 Lauterbach GmbH, licensed for use with TRACE32(R) only
; --------------------------------------------------------------------------------
; $Id: psos.men 7320 2014-07-03 08:57:49Z kjmal $

add
menu
(
  popup "pSOS+"
  (
    if y.exist(T32OUT)
    (
      menuitem "pROBE Terminal" "TERM T32OUT T32IN"
      menuitem "&Break to pROBE"
      (
        d.s e:T32IN 0x0
        d.s e:T32IN 0x9
      )
      separator
    )
    popup "Query &Configuration"
    (
      menuitem "&Node"   "TASK.QC node"
      menuitem "&pSOS+"  "TASK.QC PSOS"
      menuitem "&pROBE+" "TASK.QC PROBE"
      menuitem "&pHILE+" "TASK.QC PHILE"
      menuitem "&pREPC+" "TASK.QC PREPC"
      menuitem "&pNA+"   "TASK.QC PNA"
      menuitem "&pSE+"   "TASK.QC PSE"
      menuitem "&pMONT+" "TASK.QC PMONT"
      menuitem "&IOJ+"   "TASK.QC IOJ"
    )
    default
    menuitem "Query &Task"      "TASK.QT"
    menuitem "Query &Queue"     "TASK.QQ"
    menuitem "Query &Semaphore" "TASK.QS"
    menuitem "Query &Mutex"     "TASK.QMU"
    menuitem "Query C&Variable" "TASK.QCV"  
    menuitem "Query &Region"    "TASK.QR"
    menuitem "Query &Partition" "TASK.QP"
    menuitem "Query TaskData"   "TASK.QTSD"

    popup    "Query &Objects"
    (
      menuitem "&All"        "TASK.QO.all"
      menuitem "&Task"       "TASK.QO.Task"
      menuitem "&Queue"      "TASK.QO.Queue"
      menuitem "&Semaphore"  "TASK.QO.Semaphore"
      menuitem "&Mutexes"    "TASK.QO.MUtex"
      menuitem "C&Variables" "TASK.QO.CondVar"
      menuitem "&Region"     "TASK.QO.Region"
      menuitem "&Partition"  "TASK.QO.Partition"
      menuitem "Task Data"   "TASK.QO.TaSkData"
    )
    menuitem "Query &I/O Table" "TASK.QIOJ"
    menuitem "Query &Date/Time" "TASK.QD"
    menuitem "Query &Versions"  "TASK.QV"
    separator
    popup "&Stack Coverage"
    (
      menuitem "&List Stacks"          "TASK.STacK"
      menuitem "Add Task to Cov"       "TASK.STacK.ADD"
      menuitem "Remove Task from Cov"  "TASK.STacK.ReMove"
      enable ice()||fire()
      menuitem "Reset Coverage"        "TASK.STK.RES"
    )
  )
  popup "Trace"
  (
    popup "[:alist]List"
    (
      separator
      menuitem "&Task Switches"     "Trace.List List.TASK"
      menuitem "&Default and Tasks" "Trace.List List.TASK DEFault"
    )
  )
  popup "Perf"
  (
    separator
    popup "&Task Runtime"
    (
      menuitem "&Prepare"
      (
        if t.method.analyzer()
        (
          Analyzer.AutoInit on
        )
        if (ice()||fire())&&!a.mode.flow()
        (
          Analyzer.ReProgram
          (
            Sample.Enable if AlphaBreak&&Write
          )
        )
	    Break.Delete /Alpha
	    Break.Set task.config(magic)++(task.config(magicsize)-1) /Alpha
      )
      menuitem "[:perf]Show &Numerical"   "Trace.STATistic.TASK"
      menuitem "[:achart]Show as &Timing" "Trace.CHART.TASK"
      menuitem "[:achart]Tracking with Trace &List"
      (
        Trace.List List.TASK DEFault /Track
        Trace.CHART.TASK /Track
      )
    )
    popup "Task &Function Runtime"
    (
      menuitem "&Prepare"
      (
        if t.method.analyzer()
        (
          Analyzer.AutoInit on
          Analyzer.STATistic.PreFetch on
        )

        if (ice()||fire())&&!a.mode.flow()
        (
          if a.config.hac()
          (
             Analyzer.ReProgram
             (
               Sample.Enable if AlphaBreak
               Sample.Enable if BetaBreak
               Mark.A        if AlphaBreak
               Mark.B        if BetaBreak
             )
          )
          else
          (
             Analyzer.ReProgram
             (
               Sample.Enable if AlphaBreak||BetaBreak
               Mark.A if AlphaBreak
               Mark.B if BetaBreak
             )
          )
	    )

        Break.Delete /Alpha /Beta /Charly
        Break.SetFunc
	    Break.Set task.config(magic)++(task.config(magicsize)-1) /Alpha
      )
      menuitem "[:perf]Show &Numerical"     "Trace.STATistic.TASKFUNC"
      menuitem "[:perf]Show as &Tree"       "Trace.STATistic.TASKTREE"
      menuitem "[:perf]Show &Detailed Tree" "Trace.STATistic.TASKTREE ALL"
      menuitem "[:achart]Show as &Timing"   "Trace.CHART.TASKFUNC"
      menuitem "[:alist]Show N&esting"      "Trace.List List.TASK FUNC TI.FUNC"
    )
    popup "Task &Status"
    (
      menuitem "&Prepare"
      (
        if t.method.analyzer()
        (
          Analyzer.AutoInit on
        )
        if (ice()||fire())&&!a.mode.flow()
        (
          Analyzer.ReProgram
          (
            Sample.Enable if AlphaBreak&&Write
          )
        )
	    Break.Delete /Alpha
	    Break.Set task.config(magic)++(task.config(magicsize)-1) /Alpha
	    TASK.TASKState
      )
      menuitem "[:perf]Show &Numerical"   "Trace.STATistic.TASKSTATE"
      menuitem "[:achart]Show as &Timing" "Trace.CHART.TASKSTATE"
      menuitem "[:achart]Tracking with Trace &List"
      (
        Trace.List List.TASK DEFault /Track
        Trace.CHART.TASKSTATE /Track
      )
    )
  )
  popup "&Help"
  (
    menuitem "pSOS+ Awareness Manual" "HELP __RTOS_PSOS_"
  )
)

