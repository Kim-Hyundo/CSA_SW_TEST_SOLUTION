<Application x:Class="GraphProject.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:GraphProject" StartupUri="MainWindow.xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d1p1:Ignorable="d" xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:vm="clr-namespace:GraphProject.ViewModel" xmlns:views="clr-namespace:GraphProject.Views"
             
             >
    <Application.Resources>
        <ResourceDictionary >
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Combobox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DialogHost.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListView.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Menu.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.GroupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="CaptionButtonStyle" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="LayoutRoot" Background="Transparent" Width="44" Height="30">
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" 
                                   Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="LayoutRoot" Property="Background" Value="#E5E5E5"/>
                                    <Setter TargetName="txt" Property="Foreground" Value="#000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MaterialToggleButtonCustomStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignSwitchToggleButton}">
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="Red" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="DataGrid" BasedOn="{StaticResource MaterialDesignDataGrid}">
                <Setter Property="Background" Value="Transparent"/>
            </Style>


            <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                <Setter Property="Content" Value="&#xE106;"/>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Fonts/Roboto-Light.ttf #Roboto"/>
            </Style>

            <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" />
            <DataTemplate DataType="{x:Type vm:ChartViewModel}">
                <views:ChartView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TestFailListViewModel}">
                <views:PieChartView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:MemoryUsageContainerViewModel}">
                <views:MemoryUsageContainerView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TestFailListContainerViewModel}">
                <views:TestFailListContainerView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TestFailGridViewModel}">
                <views:TestFailGridView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TestSummaryContainerViewModel}">
                <views:TestSummaryContainerView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TestSummaryViewModel}">
                <views:TestSummaryView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TotalMemoryUsageViewModel}">
                <views:TotalMemoryUsageView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TestCoverageContainerViewModel}">
                <views:TestCoverageContainerView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TestCoverageViewModel}">
                <views:TestCoverageVIew/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TimingChartContainerViewModel}">
                <views:TimingChartContainerView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TimingChartViewModel}">
                <views:TimingChartView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TotalTestCoverageContainerViewModel}">
                <views:TotalTestCoverageContainerView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TotalTestCoverageViewModel}">
                <views:TotalTestCoverageView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TotalMCDCCoverageContainerViewModel}">
                <views:TotalMCDCCoverageContainerView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TotalMCDCCoverageViewModel}">
                <views:TotalMCDCCoverageView/>
            </DataTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>