<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WSF</name>
    </assembly>
    <members>
        <member name="T:WSF.Browser">
            <summary>
            Implements core API type methods and properties that are used to interact
            with Windows Shell System Items (folders and known folders).
            </summary>
        </member>
        <member name="F:WSF.Browser._filterKF">
             <summary>
             Filtering these folders since they are not too useful here
             and cause odd exception in later processing steps ...
            
             SyncSetupFolder, SyncResultsFolder, ConflictFolder
             AppUpdatesFolder, ChangeRemoveProgramsFolder, SyncCenterFolder
             </summary>
        </member>
        <member name="M:WSF.Browser.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="P:WSF.Browser.SysDefault">
            <summary>
            Gets the default system drive - usually 'C:\'.
            </summary>
            <returns></returns>
        </member>
        <member name="P:WSF.Browser.DesktopDirectory">
            <summary>
            Gets the <see cref="T:WSF.Interfaces.IDirectoryBrowser"/> interface
            for a user's desktop folder.
            </summary>
        </member>
        <member name="P:WSF.Browser.CurrentUserDirectory">
            <summary>
            Gets the <see cref="T:WSF.Interfaces.IDirectoryBrowser"/> interface
            for a current system user's directory and known folder item.
            </summary>
        </member>
        <member name="P:WSF.Browser.MyComputer">
            <summary>
            Gets the interface for a user's 'This PC' (virtual folder).
            
            This item usually lists Mounted drives (eg: 'C:\'),
            and frequently used special folders like: Desktop, Music, Video, Downloads etc..
            </summary>
        </member>
        <member name="P:WSF.Browser.PublicDocuments">
            <summary>
            Gets the <see cref="T:WSF.Interfaces.IDirectoryBrowser"/> interface
            for the Public Documents folder (%PUBLIC%\Documents).
            </summary>
        </member>
        <member name="P:WSF.Browser.Network">
            <summary>
            Gets the interface for the Network
            (virtual folder, Legacy: My Network Places).
            </summary>
        </member>
        <member name="P:WSF.Browser.RecycleBin">
            <summary>
            Gets the interface
            for the Rycycle Bin (virtual folder).
            </summary>
        </member>
        <member name="P:WSF.Browser.KnownFileSystemFolders">
            <summary>
            Contains a collection of known folders with a file system folder.
            This collection is build on program start-up.
            </summary>
        </member>
        <member name="M:WSF.Browser.Create(System.String)">
            <summary>Creates a new object that implements the
            <see cref="T:WSF.Interfaces.IDirectoryBrowser"/> interface. The created
            instance is based on the given parameter, which can be
            a path based string (e.g: 'c:\') or a special folder
            based string (e.g: '::{...}').
            
            The <see cref="T:WSF.Interfaces.IDirectoryBrowser"/> object is always created
            and returned unless the given string parameter is null or empty
            which results in an <see cref="T:System.ArgumentNullException"/>
            Exception being thrown.
            </summary>
            <param name="fullPath"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.Create(System.String,System.String,System.String,System.Boolean)">
            <summary>Creates a new object that implements the
            <see cref="T:WSF.Interfaces.IDirectoryBrowser"/> interface from a
            <paramref name="parseName"/>, <paramref name="name"/>,
            and <paramref name="labelName"/>.
            
            This method is a short-cut to by-pass additional Windows Shell API
            queries for this items. An enumeration of Windows Shell items, for
            instance, can already result into all three items, so we by-pass
            the IShellFolder query stuff to speed up processing in this situation.
            
            The created instance is based on the given <paramref name="parseName"/>
            parameter, which can be a path based string (e.g: 'c:\') or
            a special folder based string (e.g: '::{...}').
            
            The <see cref="T:WSF.Interfaces.IDirectoryBrowser"/> object is always created
            and returned unless the given <paramref name="parseName"/>
            parameter is null or empty which results in an <see cref="T:System.ArgumentNullException"/>
            Exception being thrown.
            </summary>
            <param name="parseName"></param>
            <param name="labelName"></param>
            <param name="name"></param>
            <param name="lazyLodingProperties"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.Create(WSF.Shell.Pidl.IdList)">
            <summary>Creates a new object that implements the
            <see cref="T:WSF.Interfaces.IDirectoryBrowser"/> interface from a
            <paramref name="fullPidl"/> that represents an item in the browsing structure.
            
            Returns null if a parseName could not be determined.
            </summary>
            <param name="fullPidl"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.GetChildItems(System.String,System.String,WSF.Enums.SubItemFilter,System.Boolean)">
            <summary>
            Gets an enumeration of all childitems below the
            <paramref name="folderParseName"/> item.
            </summary>
            <param name="folderParseName">Is the parse name that should be used to emit child items for.</param>
            <param name="searchMask">Optional name of an item that should be filtered
            in case insensitive fashion when searching for a certain child rather than all children.</param>
            <param name="itemFilter">Specify wether to filter only on names or on names and ParseNames</param>
            <param name="lazyLodingProperties"></param>
            <returns>returns each item as <see cref="T:WSF.Interfaces.IDirectoryBrowser"/> object</returns>
        </member>
        <member name="M:WSF.Browser.IsTypeOf(System.String)">
            <summary>
            Parses the first two characters of a given path to determine its type.
            Paths that are shorter than 2 characters are classified <see cref="F:WSF.Enums.PathType.Unknown"/>.
            
            Paths with 2 or more characters having no File Fystem or Special Folder signature
            are clasified as <seealso cref="F:WSF.Enums.PathType.WinShellPath"/>.
            
            Returns false for strings 
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.DirectoryExists(System.String,WSF.Interfaces.IDirectoryBrowser[]@)">
            <summary>
            Determines if a directory (special or not) exists at the givem path
            (path can be formatted as special path KF_IDD) and returns <paramref name="pathItems"/>
            if path was a sequence of Windows shell named items (eg 'Libraries\Music').
            </summary>
            <param name="path"></param>
            <param name="pathItems"></param>
            <returns>Returns true if item has a filesystem path otherwise false.</returns>
        </member>
        <member name="M:WSF.Browser.GetFileSystemPathItems(System.String,System.Boolean)">
            <summary>
            Converts a given existing file system path string into a sequence
            of <see cref="T:WSF.Interfaces.IDirectoryBrowser"/> items or null if path cannot be resolved.
            </summary>
            <param name="fs_path">The file system path to be resolved.</param>
            <param name="bFindKF">Determines if known folder should be looked up
            even if given folder is a normal string such as (eg.: 'C:\Windows\').
            Set this parameter only if you are sure that you need it as it will
            have a performance impact on the time required to generate the object.
            </param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.GetWinShellPathItems(System.String)">
            <summary>
            Converts a given existing Windows shell Path string
            (eg 'Libraries\Music') into a sequence of <see cref="T:WSF.Interfaces.IDirectoryBrowser"/>
            items or null if path cannot be resolved.
            </summary>
            <param name="path">The Windows Shell Path to be resolved.</param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.GetDirectories(System.String)">
            <summary>
            Split the current folder in an array of sub-folder names and return it.
            </summary>
            <returns>Returns a string array of su-folder names (including drive) or null if there are no sub-folders.</returns>
        </member>
        <member name="M:WSF.Browser.NormalizePath(System.String)">
            <summary>
            Make sure that a path reference does actually work with
            <see cref="T:System.IO.DirectoryInfo"/> by replacing 'C:' by 'C:\'.
            </summary>
            <param name="dirOrfilePath"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.ExtendPath(System.Collections.Generic.List{WSF.Interfaces.IDirectoryBrowser}@,System.String)">
            <summary>
            Extends a list of <see cref="T:WSF.Interfaces.IDirectoryBrowser"/> path models with the
            given path extension if these items can be verified in the file system structure.
            </summary>
            <param name="pathList"></param>
            <param name="pathExtension"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.FindRoot(WSF.Interfaces.IDirectoryBrowser)">
            <summary>
            Attempts to re-root a path model item
            under the Desktop or ThisPC (filesystem) by looking up its PIDLS
            and building a sequence of path models from those PIDLS.
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.FindRoot(WSF.Interfaces.IDirectoryBrowser[],System.String,System.Boolean@)">
            <summary>
            Attempts to re-root a sequence of path model items
            under the Desktop or ThisPC (filesystem).
            </summary>
            <param name="pathItems"></param>
            <param name="newPath"></param>
            <param name="pathIsRooted">Determines whether the output result
            was succesfully rooted or not. This parameter was introduced to
            support returning empty collection to indicate Desktop
            - NOT 100% sure if this is still required.</param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.IsParentPathOf(System.String,System.String,System.String@)">
            <summary>
            Determines if the given <paramref name="childPath"/> could be mounted
            somewhere into the path of the <paramref name="parentPath"/> and returns
            true if thats the case.
            </summary>
            <param name="parentPath"></param>
            <param name="childPath"></param>
            <param name="pathExtension">Contains the part of the <paramref name="childPath"/>
            that could be used to extend the <paramref name="parentPath"/> in order to find
            an alternative path representation.</param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.IsCurrentPath(System.String,System.String)">
            <summary>
            Compares 2 to paths and indicates whether they match or not.
            Both strings should be normalized before calling this method.
            </summary>
            <param name="inputPath"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.FindCommonRoot(WSF.Interfaces.IDirectoryBrowser[],System.String,System.String@)">
            <summary>
            Attempts to find a common root between the given path of <see cref="T:WSF.Interfaces.IDirectoryBrowser"/>
            model items and the string based path and returns the part of the alternative path
            that could be joined on to the element with the indicated index.
            
            Returns the maximum common root (eg.: 'C:\Windows' is returned instead of 'C:\').
            </summary>
            <param name="currentPath"></param>
            <param name="navigateToThisLocation"></param>
            <param name="pathExtension"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.PathItemsAsIdList(WSF.Interfaces.IDirectoryBrowser)">
            <summary>
            Gets a list of fullids that represent a path to the given <paramref name="location"/>.
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.PathItemsAsParseNames(WSF.Interfaces.IDirectoryBrowser)">
            <summary>
            Gets a list of ParseNames that (taken together) represent a path to
            a given <paramref name="location"/>.
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.FindKnownFolderByFileSystemPath(System.String)">
            <summary>
            Tries to determine whether there is a known folder associated with this
            path or not.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browser.GetAllKFs">
            <summary>
            Gets a strongly-typed collection of all registered known folders that have
            an associated file system path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Browse.BrowseItemFromPath.#ctor(System.String,System.String)">
            <summary>
            constructor to initialize only <see cref="P:WSF.Browse.BrowseItemFromPath.Path_RAW"/> and
            <see cref="P:WSF.Browse.BrowseItemFromPath.PathFileSystem"/> property or
            <see cref="P:WSF.Browse.BrowseItemFromPath.PathSpecialItemId"/> property. 
            <paramref name="rawPath"/> can be either a real path
            or special folder path starting with '::{...}'
            </summary>
            <param name="rawPath"></param>
            <param name="parsingName"></param>
        </member>
        <member name="M:WSF.Browse.BrowseItemFromPath.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Parameterized class constructor
            </summary>
            <param name="pathRaw"></param>
            <param name="parseName"></param>
            <param name="name"></param>
            <param name="labelName"></param>
            <param name="specialPathId"></param>
            <param name="normPath"></param>
        </member>
        <member name="M:WSF.Browse.BrowseItemFromPath.#ctor">
            <summary>
            Hidden standard constructor
            </summary>
        </member>
        <member name="P:WSF.Browse.BrowseItemFromPath.Name">
            <summary>
            The name of a folder that should be used for display
            (e.g. 'Windows' for 'c:\Windows' or Documents for '::{...}')
            </summary>
        </member>
        <member name="P:WSF.Browse.BrowseItemFromPath.ParseName">
            <summary>
            Gets the parse name that was returned from the IShellFolder2 interface.
            </summary>
        </member>
        <member name="P:WSF.Browse.BrowseItemFromPath.LabelName">
            <summary>
            Gets a label string that may differ from other naming
            strings if the item (eg Drive) supports labeling.
            
            String is suitable for display only and should
            not be used as index as it is not unique.
            </summary>
        </member>
        <member name="P:WSF.Browse.BrowseItemFromPath.PathSpecialItemId">
            <summary>
            Contains the special path (Guid) Id for a special known folder
            or null if this item is not special and cannot be identified
            through a seperate GUID.
            </summary>
        </member>
        <member name="P:WSF.Browse.BrowseItemFromPath.IsSpecialParseItem">
            <summary>
            Indicates whether the parse name is available with a special path reference,
            such as, '::{...}'. This type of reference indicates a knownfolder reference
            that should be available in <see cref="P:WSF.Browse.BrowseItemFromPath.PathSpecialItemId"/> if this property
            returns true.
            </summary>
        </member>
        <member name="P:WSF.Browse.BrowseItemFromPath.PathFileSystem">
            <summary>
            Contains the file system path of this item or null if this
            item has no file system representation.
            </summary>
        </member>
        <member name="P:WSF.Browse.BrowseItemFromPath.Path_RAW">
            <summary>
            The raw path string that was originally passed in (for debugging only).
            </summary>
        </member>
        <member name="M:WSF.Browse.BrowseItemFromPath.InitItem(System.String)">
            <summary>
            Initializes the items type flags and path properties.
            </summary>
            <param name="path">Is either a path reference a la 'C:' or a
            special folder path reference a la '::{...}' <seealso cref="T:WSF.IDs.KF_IID"/>
            for more details.</param>
            <returns>Returns a simple pojo type object to initialize
            the calling object members.</returns>
        </member>
        <member name="M:WSF.Browse.BrowseItemFromPath.InitItem(System.String,System.String,System.String)">
            <summary>
            Class constructor from strings that are commonly exposed by
            <see cref="T:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2"/> interfaces. Constructing from these
            items can speed up enumeration since we do not need to revisit
            each items <see cref="T:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2"/> interfaces.
            </summary>
            <param name="parseName"></param>
            <param name="name"></param>
            <param name="labelName"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browse.BrowseItemFromPath.InitDesktopRootItem">
            <summary>
            Gets an initialized object for the desktop root item.
            </summary>
            <returns></returns>
        </member>
        <member name="T:WSF.Browse.DirectoryBrowser">
            <summary>
            Implements a light weight Windows Shell Browser class that can be used
            to model and browse the shell tree structure of the Windows (7-10) Shell.
            </summary>
        </member>
        <member name="M:WSF.Browse.DirectoryBrowser.#ctor(WSF.Browse.BrowseItemFromPath)">
            <summary>
            Class constructor
            </summary>
        </member>
        <member name="M:WSF.Browse.DirectoryBrowser.#ctor(WSF.Browse.DirectoryBrowser)">
            <summary>
            Copy constructor
            </summary>
            <param name="copyThis"></param>
        </member>
        <member name="P:WSF.Browse.DirectoryBrowser.Name">
            <summary>
            Gets the (localized) name of an item.
            </summary>
        </member>
        <member name="P:WSF.Browse.DirectoryBrowser.Label">
            <summary>
            Gets a label string that may differ from other naming
            strings if the item (eg Drive) supports labeling.
            
            String is suitable for display only and should
            not be used as index as it is not unique.
            </summary>
        </member>
        <member name="P:WSF.Browse.DirectoryBrowser.PathShell">
            <summary>
            Gets the logical path of a directory item.
            The logical path can differ from the physical storage location path
            because there are some special folder items
            that have no storage location (e.g. 'This PC')
            and a special folder can be identified:
            
            1) with GUID based strings (see KF_IID) or
            2) via its path ('C:\Windows')
            
            3) via its name ('G:\')
               A device that is not ready (eg: DVD drive without DVD)
               will have neither a special id nor a filesystem path.
            </summary>
        </member>
        <member name="P:WSF.Browse.DirectoryBrowser.SpecialPathId">
            <summary>
            Contains the special path GUID if this item is a special shell space item.
            </summary>
        </member>
        <member name="P:WSF.Browse.DirectoryBrowser.PathFileSystem">
            <summary>
            Gets the filesystem path (e.g. 'C:\') if this item has a dedicated
            or associated storage location in the file system.
            </summary>
        </member>
        <member name="P:WSF.Browse.DirectoryBrowser.ParentIdList">
            <summary>
            Gets the IdList (if available) that describes the full
            shell path for this item)
            </summary>
        </member>
        <member name="P:WSF.Browse.DirectoryBrowser.ChildIdList">
            <summary>
            Gets the IdList (if available) that describes the full
            shell path for this item)
            </summary>
        </member>
        <member name="P:WSF.Browse.DirectoryBrowser.IconResourceId">
             <summary>
             Gets an optional pointer to the default icon resource used when the folder is created.
             This is a null-terminated Unicode string in this form:
            
             Module name, Resource ID
             or null is this information is not available.
             </summary>
        </member>
        <member name="P:WSF.Browse.DirectoryBrowser.KnownFolder">
             <summary>
             Gets the knownfolder properties if this item represents a knownfolder,
             otherwise null.
            
             https://msdn.microsoft.com/en-us/library/windows/desktop/bb773325(v=vs.85).aspx
             </summary>
        </member>
        <member name="P:WSF.Browse.DirectoryBrowser.IsFullyInitialized">
            <summary>
            Gets whether all properties have been fully resolved or not.
            
            Properties like <see cref="P:WSF.Browse.DirectoryBrowser.KnownFolder"/>, <see cref="P:WSF.Browse.DirectoryBrowser.IconResourceId"/>,
            or <see cref="P:WSF.Browse.DirectoryBrowser.ItemType"/> can be loaded lazily
            - call <see cref="M:WSF.Browse.DirectoryBrowser.LoadProperties"/> method to complete this process
            before using these properties.
            </summary>
        </member>
        <member name="P:WSF.Browse.DirectoryBrowser.PathRAW">
            <summary>
            Gets the raw string that was used to construct this object.
            This property is for debug purposes only and should not be
            visible in any UI or ViewModel.
            </summary>
        </member>
        <member name="P:WSF.Browse.DirectoryBrowser.FullName">
            <summary>
            Get Known file system Path  or FolderId for this folder.
            
            That is:
            1) A storage location (if it exists) in the filesystem
            
            2) A knownfolder GUID (if it exists) is shown
               here as default preference over
               
            </summary>
        </member>
        <member name="M:WSF.Browse.DirectoryBrowser.LoadProperties">
            <summary>
            Resolves remaining properties if <see cref="P:WSF.Browse.DirectoryBrowser.IsFullyInitialized"/> indicates
            missing values (useful for lazy initialization).
            </summary>
        </member>
        <member name="M:WSF.Browse.DirectoryBrowser.DirectoryPathExists">
            <summary>
            Determines if this item refers to an existing path in the filesystem or not.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Browse.DirectoryBrowser.ToString">
            <summary>
            Standard ToString() function to support internal debugging.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Browse.DirectoryBrowser.Equals(WSF.Interfaces.IDirectoryBrowser)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="other">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:WSF.Browse.DirectoryBrowser.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:WSF.Browse.DirectoryBrowser.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:WSF.Browse.DirectoryBrowser.EqualsParseName(System.String)">
             <summary>
             Compares a given parse name with the parse names known in this object.
             
             Considers case insensitive string matching for:
             1> SpecialPathId
               1.2> PathRAW (if SpecialPathId fails and CLSID may have been used to create this)
            
             3> PathFileSystem
             </summary>
             <param name="parseName">True is a matching parse name was found and false if not.</param>
             <returns></returns>
        </member>
        <member name="M:WSF.Browse.FilterMask.#ctor(System.String,System.Boolean)">
            <summary>
            Parameterized class constructor.
            </summary>
            <param name="fileMask"></param>
            <param name="forceSlashCheck"></param>
        </member>
        <member name="M:WSF.Browse.FilterMask.#ctor">
            <summary>
            Hidden class constructor
            </summary>
        </member>
        <member name="M:WSF.Browse.FilterMask.MatchFileMask(System.String)">
            <summary>
            Determine whether filename matches a regular expression
            specified in constructors parameters ( * and ? supported) or not.
            
            Source: http://stackoverflow.com/questions/725341/c-file-mask
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Browse.FilterMask.constructFileMaskRegexPattern(System.String,System.Boolean)">
            <summary>
            Returns a regular expression pattern that has escapped typical regular
            expression charcters, such as, '.' and so forth.
            
            Escapes a minimal set of characters (\, *, +, ?, |, {, [, (,), ^, $,., #, and
            white space) by replacing them with their escape codes. This instructs the regular
            expression engine to interpret these characters literally rather than as metacharacters.
            </summary>
            <param name="fileMask"></param>
            <param name="forceSlashCheck"></param>
            <returns></returns>
        </member>
        <member name="T:WSF.Enums.DirectoryItemFlags">
            <summary>
            Provides high level flags to identify specific types of a Windows Shell item.
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.Unknown">
            <summary>
            Default option to use for initialization.
            
            This value indicates an error, if its still available after initialization.
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.DesktopRoot">
            <summary>
            Indicates a special folder item that represents
            the root item in the shell browsing structure.
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.Special">
            <summary>
            This item is a Windows special folder.
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.FileSystemDirectory">
            <summary>
            This item has a directory representation in the file system storage system.
            (eg. 'Documents')
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.FileSystemFile">
            <summary>
            This item has a file representation in the file system storage system.
            (eg. 'Bm.zip')
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.DataFileContainer">
            <summary>
            This item has a representation in the file system storage system
            as a valid file that contains a sub-directroy structure (zip) in turn.
            
            So, its a file (*.zip) but it can be browsed further as if it was a regular
            folder data structure on disk.
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.DataFileContainerFolder">
            <summary>
            This is a zip file or folder inside a zip data file container.
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.Virtual">
            <summary>
            This item DOES NOT have a representation in the file system storage system.
            (eg. 'My PC')
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.Drive">
            <summary>
            This item represents a drive in the file system.
            (eg. 'C:\')
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.Desktop">
            <summary>
            This item represents the desktop special folder.
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.SpecialDesktopFileSystemDirectory">
            <summary>
            Indicates the special folder Desktop item in the browsing structure.
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.Documents">
            <summary>
            This item represents the documents special folder.
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.Downloads">
            <summary>
            This item represents the Downloads special folder.
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.Music">
            <summary>
            This item represents the Music special folder.
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.Pictures">
            <summary>
            This item represents the Pictures special folder.
            </summary>
        </member>
        <member name="F:WSF.Enums.DirectoryItemFlags.Videos">
            <summary>
            This item represents the Videos special folder.
            </summary>
        </member>
        <member name="T:WSF.Enums.PathMatch">
            <summary>
            Enumeration can be used to indicate the type of a match between
            a source and a target path. Both paths describe the same location
            <see cref="F:WSF.Enums.PathMatch.CompleteMatch"/> or be completely <see cref="F:WSF.Enums.PathMatch.Unrelated"/>.
            
            The source path is the parent path of target: <see cref="F:WSF.Enums.PathMatch.PartialSource"/>.
            The target path is the parent path of source: <see cref="F:WSF.Enums.PathMatch.PartialTarget"/>.
            </summary>
        </member>
        <member name="F:WSF.Enums.PathMatch.Unrelated">
            <summary>
            Both paths are completely unrelated.
            </summary>
        </member>
        <member name="F:WSF.Enums.PathMatch.CompleteMatch">
            <summary>
            Both paths describe the same location.
            </summary>
        </member>
        <member name="F:WSF.Enums.PathMatch.PartialSource">
            <summary>
            The source path is the parent path of target.
            </summary>
        </member>
        <member name="F:WSF.Enums.PathMatch.PartialTarget">
            <summary>
            The target path is the parent path of source.
            </summary>
        </member>
        <member name="T:WSF.Enums.PathType">
            <summary>
            Defines a type of path based on the way it is stated in a string.
            </summary>
        </member>
        <member name="F:WSF.Enums.PathType.Unknown">
            <summary>
            The type of path cannot be determined by method that returns this value.
            </summary>
        </member>
        <member name="F:WSF.Enums.PathType.WinShellPath">
            <summary>
            The path is based on a sequence of localized named items.
            Eg:
            'Libraries\Documents'    in English
            'Bibleotheken\Dokumente' in German
            </summary>
        </member>
        <member name="F:WSF.Enums.PathType.SpecialFolder">
            <summary>
            The path is based on a SpecialFolder id
            Eg: '::{0AC0837C-BBF8-452A-850D-79D08E667CA7}' <seealso cref="T:WSF.IDs.KF_IID"/>
            </summary>
        </member>
        <member name="F:WSF.Enums.PathType.FileSystemPath">
            <summary>
            The path is based on a drive or UNC based reference.
            Eg: 'C:\Windows\' or '\\MyServer\MyShare\'
            </summary>
        </member>
        <member name="T:WSF.Enums.SubItemFilter">
            <summary>
            Specifies a filter for WinShell items which can be filtered by their
            1: Name only or by their
            2: Name or Parse Name
            
            Example:
            -> Filter is 'c*'
            -> item.Name = "Operating System (C:)" and item.ParseName="C:\"
            
            Would be filtered by ParseName since name does not start with 'c'.
            </summary>
        </member>
        <member name="F:WSF.Enums.SubItemFilter.NameOnly">
            <summary>
            Apply filter on item Names only.
            
            Items whos Name does not satisfy the specified filter expression are not shown.
            </summary>
        </member>
        <member name="F:WSF.Enums.SubItemFilter.NameOrParsName">
            <summary>
            Apply filter on item Name or ParseNames.
            
            Items whos Name or ParseName do not satisfy the specified filter expression are not shown.
            </summary>
        </member>
        <member name="T:WSF.FileSystemCommands">
            <summary>
            Class implements base services for opening and working with folders and files in Windows.
            </summary>
        </member>
        <member name="M:WSF.FileSystemCommands.OpenContainingFolder(System.String,System.String)">
            <summary>
            Convinience method to open Windows Explorer with a selected file (if it exists).
            Otherwise, Windows Explorer is opened in the location where the file should be at.
            Returns falsem if neither file nor given directory exist.
            </summary>
            <param name="sFileName"></param>
            <param name="sParent"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.FileSystemCommands.OpenInWindows(System.String)">
            <summary>
            Opens a file with the current Windows default application.
            </summary>
            <param name="sFileName"></param>
        </member>
        <member name="M:WSF.FileSystemCommands.CopyPath(System.String)">
            <summary>
            Copies the given string into the Windows clipboard.
            </summary>
            <param name="sFileName"></param>
        </member>
        <member name="T:WSF.IDs.KF_ParseName_IID">
            <summary>
            Class models parse names for knownfolders that have a parsename (special id)
            thats different from the knownfolder id.
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.UsersLibrariesFolder">
            <summary>
            Localized Name: "" (En-US) -> "Libraries" (Name)
            Canonical Name: "UsersLibrariesFolder"
             KnownFolderId: "a302545d-deff-464b-abe8-61c8648d939b"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.MusicLibrary">
            <summary>
            Localized Name: "Music" (En-US)
            Canonical Name: "MusicLibrary"
             KnownFolderId:                                           "2112AB0A-C86A-4ffe-A368-0DE96E47012E"
                            "::{031E4825-7B94-4dc3-B131-E946B44C8DD5}\{2112AB0A-C86A-4ffe-A368-0DE96E47012E}"
                 is same as "::{031E4825-7B94-4DC3-B131-E946B44C8DD5}\Music.library-ms"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.SavedPicturesLibrary">
            <summary>
            Localized Name: "Saved Pictures" (En-US)
            Canonical Name: "SavedPicturesLibrary"
             KnownFolderId:                                           "E25B5812-BE88-4bd9-94B0-29233477B6C3"
                            "::{031E4825-7B94-4dc3-B131-E946B44C8DD5}\{E25B5812-BE88-4bd9-94B0-29233477B6C3}"
                 is same as "::{031E4825-7B94-4DC3-B131-E946B44C8DD5}\SavedPictures.library-ms"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.VideosLibrary">
            <summary>
            Localized Name: "Videos" (En-US)
            Canonical Name: "VideosLibrary"
             KnownFolderId:                                           "491E922F-5643-4af4-A7EB-4E7A138D8174"
                            "::{031E4825-7B94-4dc3-B131-E946B44C8DD5}\{491E922F-5643-4af4-A7EB-4E7A138D8174}"
                 is same as "::{031E4825-7B94-4DC3-B131-E946B44C8DD5}\Videos.library-ms"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.CameraRollLibrary">
            <summary>
            Localized Name: "Camera Roll" (En-US)
            Canonical Name: "CameraRollLibrary"
             KnownFolderId:                                           "2B20DF75-1EDA-4039-8097-38798227D5B7"
                            "::{031E4825-7B94-4dc3-B131-E946B44C8DD5}\{2B20DF75-1EDA-4039-8097-38798227D5B7}"
                 is same as "::{031E4825-7B94-4DC3-B131-E946B44C8DD5}\CameraRoll.library-ms"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.DocumentsLibrary">
            <summary>
            Localized Name: "Documents" (En-US)
            Canonical Name: "DocumentsLibrary"
             KnownFolderId:                                           "7b0db17d-9cd2-4a93-9733-46cc89022e7c"
                            "::{031E4825-7B94-4dc3-B131-E946B44C8DD5}\{7b0db17d-9cd2-4a93-9733-46cc89022e7c}"
                 is same as "::{031E4825-7B94-4DC3-B131-E946B44C8DD5}\Documents.library-ms"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.PicturesLibrary">
            <summary>
            Localized Name: "Pictures" (En-US)
            Canonical Name: "PicturesLibrary"
             KnownFolderId:                                           "A990AE9F-A03B-4e80-94BC-9912D7504104"
                            "::{031E4825-7B94-4dc3-B131-E946B44C8DD5}\{A990AE9F-A03B-4e80-94BC-9912D7504104}"
                 is same as "::{031E4825-7B94-4DC3-B131-E946B44C8DD5}\Pictures.library-ms"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.UsersFilesFolder">
            <summary>
            Canonical Name: "UsersFilesFolder"
             KnownFolderId: "f3ce0f7c-4901-4acc-8648-d5d44b04ef8f"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.Links">
            <summary>
            Canonical Name: "Links"
             KnownFolderId: "bfb9d5e0-c6a9-404c-b2b2-ae6db6af4968"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.SavedGames">
            <summary>
            Canonical Name: "SavedGames"
             LocalizedName: Saved Games
             KnownFolderId: "4c5c32ff-bb9d-43b0-b5b4-2d72e54eaaa4"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.Contacts">
            <summary>
            Canonical Name: "Contacts"
             KnownFolderId: "56784854-c6cb-462b-8169-88e350acb882"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.Searches">
            <summary>
            Canonical Name: "Searches"
             KnownFolderId: "7d1d3a04-debb-4115-95cf-2f29da2920da"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.ConnectionsFolder">
            <summary>
            Canonical Name: "ConnectionsFolder"
             KnownFolderId: "6f0cd92b-2e97-45d1-88ff-b0d186b8dedd"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.PrintersFolder">
            <summary>
            Canonical Name: "PrintersFolder"
             KnownFolderId: "76fc4e2d-d6ad-4519-a663-37bd56068185"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.OneDrive">
            <summary>
            Canonical Name: "OneDrive"
             KnownFolderId: "a52bba46-e9e1-435f-b3d9-28daa648c0f6"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.My_Pictures">
            <summary>
            Canonical Name: "My Pictures"
             LocalizedName: Pictures
             KnownFolderId: "33e28130-4e1e-4676-835a-98395c3bc3bb"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.My_Videos">
            <summary>
            Canonical Name: "My Video"
             LocalizedName: Videos
             KnownFolderId: "18989b1d-99b5-455b-841c-ab7c74e4ddfc"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.My_Music">
            <summary>
            Canonical Name: "My Music"
             LocalizedName: Music
             KnownFolderId: "4bd8d571-6d19-48d3-be97-422220080e43"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.Downloads">
            <summary>
            Canonical Name: "Downloads"
             LocalizedName: Downloads
             KnownFolderId: "374de290-123f-4565-9164-39c4925e467b"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.Personal">
            <summary>
            Canonical Name: "Personal"
             LocalizedName: Documents
             KnownFolderId: "fdd39ad0-238f-46af-adb4-6c85480369c7"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.HomeGroupFolder">
            <summary>
            Canonical Name: "HomeGroupFolder"
             KnownFolderId: "52528a6b-b9e3-4add-b60d-588c2dba842d"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.HomeGroupCurrentUserFolder">
            <summary>
            Canonical Name: "HomeGroupCurrentUserFolder"
             KnownFolderId: "9b74b6a3-0dfd-4f11-9e78-5f7800f2e772"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.RecycleBinFolder">
            <summary>
            Canonical Name: "RecycleBinFolder"
             KnownFolderId: "b7534046-3ecb-4c18-be4e-64cd4cb7d6ac"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.InternetFolder">
            <summary>
            Canonical Name: "InternetFolder"
             KnownFolderId: "4d9f7874-4e0c-4904-967b-40b0d20c3e4b"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.MyComputerFolder">
            <summary>
            Canonical Name: "MyComputerFolder"
             KnownFolderId: "0ac0837c-bbf8-452a-850d-79d08e667ca7"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.NetworkPlacesFolder">
            <summary>
            Canonical Name: "NetworkPlacesFolder"
             KnownFolderId: "d20beec4-5ca8-4905-ae3b-bf251ea09b53"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.SearchHomeFolder">
            <summary>
            Canonical Name: "SearchHomeFolder"
             KnownFolderId: "190337d1-b8ca-4121-a639-6d472d16972a"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.ThisDeviceFolder">
            <summary>
            Canonical Name: "ThisDeviceFolder"
             KnownFolderId: "1c2ac1dc-4358-4b6c-9733-af21156576f0"
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ParseName_IID.ControlPanelFolder">
            <summary>
            Canonical Name: "ControlPanelFolder"
             KnownFolderId: "82a74aeb-aeb4-465c-a014-d097ee346d63"
            </summary>
        </member>
        <member name="T:WSF.IDs.KnownfolderSlim">
            <summary>
            Implements a simple base class to keep track of known folders base properties
            such as their special id (parseName), name, and file system path (if any).
            </summary>
        </member>
        <member name="M:WSF.IDs.KnownfolderSlim.#ctor(System.String,System.String,System.String)">
            <summary>
            Class constructor.
            </summary>
            <param name="_parseName"></param>
            <param name="_name"></param>
            <param name="_fileSystemPath"></param>
        </member>
        <member name="M:WSF.IDs.KnownfolderSlim.#ctor(System.String,System.String)">
            <summary>
            Class constructor.
            </summary>
            <param name="_parseName"></param>
            <param name="_name"></param>
        </member>
        <member name="M:WSF.IDs.KnownfolderSlim.#ctor">
            <summary>
            Class constructor.
            </summary>
        </member>
        <member name="P:WSF.IDs.KnownfolderSlim.SpecialId">
            <summary>
            Gets the Special ID of this known folder (if any).
            </summary>
        </member>
        <member name="P:WSF.IDs.KnownfolderSlim.Name">
            <summary>
            Gets the Name this known folder.
            </summary>
        </member>
        <member name="P:WSF.IDs.KnownfolderSlim.FileSystemPath">
            <summary>
            Gets the file system path of this known folder (if any).
            </summary>
        </member>
        <member name="T:WSF.IDs.KF_IID">
             <summary>
             KnownFolders contain the known folder ids for windows.
            
             This class defines string path constants that are based on KNOWNFOLDERIDs
             (<seealso cref="T:WSF.IDs.KF_ID"/>). These constant strings are based on a definition
             that cannot occur in the file system since naming conventions
             (on Unix and Windows) do not allow the characters used in
             see KF_IID.IDD_Prefix.
             see also IKnownFolderNative.GetId() method.
             
             All IIDs defined in this class are prefixed with KF_IID.IDD_Prefix
             to give clients of the ShellBrowser a way for identifying
             special or virtual directories and be able to determine whether
             these directories actually exist on a machine, and if so, what
             their content is, and so forth.
             </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.IID_Prefix">
            <summary>
            Gets the prefix that is used to prefix all IDs in this class
            to handle all path references (normal path like 'C:\Windows\'
            and reference to %USERPROFILE%\Desktop) with strings and still
            be able to destinguish special directories from normal path
            references.
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_ROOT_Desktop">
            <summary>
            Invented Id for Desktop Root Item which is root above all other items
            (Not to be confused with user desktop special folder item).
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_NetworkFolder">
            <summary>
            Display Name         Network
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_NETWORK, CSIDL_COMPUTERSNEARME
            Legacy Display Name  My Network Places
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ComputerFolder">
            <summary>
            Display Name          Computer
            Folder Type           VIRTUAL
            Default Path          Not applicable—virtual folder
            CSIDL Equivalent      CSIDL_DRIVES
            Legacy Display Name   My Computer
            Legacy Default Path   Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_InternetFolder">
            <summary>
            Display Name         Internet Explorer
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_INTERNET
            Legacy Display Name  Internet Explorer
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ControlPanelFolder">
            <summary>
            Display Name         Control Panel
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_CONTROLS
            Legacy Display Name  Control Panel
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_PrintersFolder">
            <summary>
            Display Name         Printers
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_PRINTERS
            Legacy Display Name  Printers and Faxes
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SyncManagerFolder">
            <summary>
            Display Name         Sync Center
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SyncSetupFolder">
            <summary>
            Display Name         Sync Setup
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ConflictFolder">
            <summary>
            Display Name          Conflicts
            Folder Type           VIRTUAL
            Default Path          Not applicable—virtual folder
            CSIDL Equivalent      None, new in Windows Vista
            Legacy Display Name   Not applicable. This KNOWNFOLDERID refers to the Windows Vista Synchronization Manager. It is not the folder referenced by the older ISyncMgrConflictFolder.
            Legacy Default Path   Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SyncResultsFolder">
            <summary>
            Display Name         Control Panel
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_CONTROLS
            Legacy Display Name  Control Panel
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_RecycleBinFolder">
            <summary>
            Display Name         Recycle Bin
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_BITBUCKET
            Legacy Display Name  Recycle Bin
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ConnectionsFolder">
            <summary>
            Display Name         Network Connections
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_CONNECTIONS
            Legacy Display Name  Network Connections
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Fonts">
            <summary>
            Display Name         Fonts
            Folder Type          FIXED
            Default Path         %windir%\Fonts
            CSIDL Equivalent     CSIDL_FONTS
            Legacy Display Name  Fonts
            Legacy Default Path  %windir%\Fonts
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Desktop">
            <summary>
            Display Name         Desktop
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Desktop
            CSIDL Equivalent     CSIDL_DESKTOP, CSIDL_DESKTOPDIRECTORY
            Legacy Display Name  Desktop
            Legacy Default Path  %USERPROFILE%\Desktop
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Startup">
            <summary>
            Display Name         Startup
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Start Menu\Programs\StartUp
            CSIDL Equivalent     CSIDL_STARTUP, CSIDL_ALTSTARTUP
            Legacy Display Name  Startup
            Legacy Default Path  %USERPROFILE%\Start Menu\Programs\StartUp
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Programs">
            <summary>
            Display Name         Programs
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Start Menu\Programs
            CSIDL Equivalent     CSIDL_PROGRAMS
            Legacy Display Name  Programs
            Legacy Default Path  %USERPROFILE%\Start Menu\Programs
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_StartMenu">
            <summary>
            Display Name         Start Menu
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Start Menu
            CSIDL Equivalent     CSIDL_STARTMENU
            Legacy Display Name  Start Menu
            Legacy Default Path  %USERPROFILE%\Start Menu
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Recent">
            <summary>
            Display Name         Recent Items
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Recent
            CSIDL Equivalent     CSIDL_RECENT
            Legacy Display Name  My Recent Documents
            Legacy Default Path  %USERPROFILE%\Recent
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SendTo">
            <summary>
            Display Name         SendTo
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\SendTo
            CSIDL Equivalent     CSIDL_SENDTO
            Legacy Display Name  SendTo
            Legacy Default Path  %USERPROFILE%\SendTo
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Documents">
            <summary>
            Display Name         Documents
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Documents
            CSIDL Equivalent     CSIDL_MYDOCUMENTS, CSIDL_PERSONAL
            Legacy Display Name  My Documents
            Legacy Default Path  %USERPROFILE%\My Documents
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Favorites">
            <summary>
            Display Name         Favorites
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Favorites
            CSIDL Equivalent     CSIDL_FAVORITES, CSIDL_COMMON_FAVORITES
            Legacy Display Name  Favorites
            Legacy Default Path  %USERPROFILE%\Favorites
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_NetHood">
            <summary>
            Display Name         Network Shortcuts
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Network Shortcuts
            CSIDL Equivalent     CSIDL_NETHOOD
            Legacy Display Name  NetHood
            Legacy Default Path  %USERPROFILE%\NetHood
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_PrintHood">
            <summary>
            Display Name         Printer Shortcuts
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Printer Shortcuts
            CSIDL Equivalent     CSIDL_PRINTHOOD
            Legacy Display Name  PrintHood
            Legacy Default Path  %USERPROFILE%\PrintHood
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Templates">
            <summary>
            Display Name         Templates
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Templates
            CSIDL Equivalent     CSIDL_TEMPLATES
            Legacy Display Name  Templates
            Legacy Default Path  %USERPROFILE%\Templates
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_CommonStartup">
            <summary>
            Display Name          Startup
            Folder Type           COMMON
            Default Path          %ALLUSERSPROFILE%\Microsoft\Windows\Start Menu\Programs\StartUp
            CSIDL Equivalent      CSIDL_COMMON_STARTUP, CSIDL_COMMON_ALTSTARTUP
            Legacy Display Name   Startup
            Legacy Default Path   %ALLUSERSPROFILE%\Start Menu\Programs\StartUp
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_CommonPrograms">
            <summary>
            Display Name          Programs
            Folder Type           COMMON
            Default Path          %ALLUSERSPROFILE%\Microsoft\Windows\Start Menu\Programs
            CSIDL Equivalent      CSIDL_COMMON_PROGRAMS
            Legacy Display Name   Programs
            Legacy Default Path   %ALLUSERSPROFILE%\Start Menu\Programs
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_CommonStartMenu">
            <summary>
            Display Name          Start Menu
            Folder Type           COMMON
            Default Path          %ALLUSERSPROFILE%\Microsoft\Windows\Start Menu
            CSIDL Equivalent      CSIDL_COMMON_STARTMENU
            Legacy Display Name   Start Menu
            Legacy Default Path   %ALLUSERSPROFILE%\Start Menu
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_PublicDesktop">
            <summary>
            Display Name         Public Desktop
            Folder Type          COMMON
            Default Path         %PUBLIC%\Desktop
            CSIDL Equivalent     CSIDL_COMMON_DESKTOPDIRECTORY
            Legacy Display Name  Desktop
            Legacy Default Path  %ALLUSERSPROFILE%\Desktop
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ProgramData">
            <summary>
            Display Name         ProgramData
            Folder Type          FIXED
            Default Path         %ALLUSERSPROFILE% (%ProgramData%, %SystemDrive%\ProgramData)
            CSIDL Equivalent     CSIDL_COMMON_APPDATA
            Legacy Display Name  Application Data
            Legacy Default Path  %ALLUSERSPROFILE%\Application Data
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_CommonTemplates">
            <summary>
            Display Name          Templates
            Folder Type           COMMON
            Default Path          %ALLUSERSPROFILE%\Templates
            CSIDL Equivalent      CSIDL_COMMON_TEMPLATES
            Legacy Display Name   Templates
            Legacy Default Path   %ALLUSERSPROFILE%\Templates
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_PublicDocuments">
            <summary>
            Display Name         Public Documents
            Folder Type          COMMON
            Default Path         %PUBLIC%\Documents
            CSIDL Equivalent     CSIDL_COMMON_DOCUMENTS
            Legacy Display Name  Shared Documents
            Legacy Default Path  %ALLUSERSPROFILE%\Documents
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_RoamingAppData">
            <summary>
            Display Name         Roaming
            Folder Type          PERUSER
            Default Path         %APPDATA% (%USERPROFILE%\AppData\Roaming)
            CSIDL Equivalent     CSIDL_APPDATA
            Legacy Display Name  Application Data
            Legacy Default Path  %APPDATA% (%USERPROFILE%\Application Data)
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_LocalAppData">
            <summary>
            Display Name         Local
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA% (%USERPROFILE%\AppData\Local)
            CSIDL Equivalent     CSIDL_LOCAL_APPDATA
            Legacy Display Name  Application Data
            Legacy Default Path  %USERPROFILE%\Local Settings\Application Data
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_LocalAppDataLow">
            <summary>
            Display Name         LocalLow
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\AppData\LocalLow
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_InternetCache">
            <summary>
            Display Name         Temporary Internet Files
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\Temporary Internet Files
            CSIDL Equivalent     CSIDL_INTERNET_CACHE
            Legacy Display Name  Temporary Internet Files
            Legacy Default Path  %USERPROFILE%\Local Settings\Temporary Internet Files
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Cookies">
            <summary>
            Display Name         Cookies
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Cookies
            CSIDL Equivalent     CSIDL_COOKIES
            Legacy Display Name  Cookies
            Legacy Default Path  %USERPROFILE%\Cookies
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_History">
            <summary>
            Display Name         History
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\History
            CSIDL Equivalent     CSIDL_HISTORY
            Legacy Display Name  History
            Legacy Default Path  %USERPROFILE%\Local Settings\History
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_System">
            <summary>
            Display Name         System32
            Folder Type          FIXED
            Default Path         %windir%\system32
            CSIDL Equivalent     CSIDL_SYSTEM
            Legacy Display Name  system32
            Legacy Default Path  %windir%\system32
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SystemX86">
            <summary>
            Display Name         System32
            Folder Type          FIXED
            Default Path         %windir%\system32
            CSIDL Equivalent     CSIDL_SYSTEMX86
            Legacy Display Name  system32
            Legacy Default Path  %windir%\system32
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Windows">
            <summary>
            Display Name         Windows
            Folder Type          FIXED
            Default Path         %windir%
            CSIDL Equivalent     CSIDL_WINDOWS
            Legacy Display Name  WINDOWS
            Legacy Default Path  %windir%
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Profile">
            <summary>
            Display Name         The user's username (%USERNAME%)
            Folder Type          FIXED
            Default Path         %USERPROFILE% (%SystemDrive%\Users\%USERNAME%)
            CSIDL Equivalent     CSIDL_PROFILE
            Legacy Display Name  The user's username (%USERNAME%)
            Legacy Default Path  %USERPROFILE% (%SystemDrive%\Documents and Settings\%USERNAME%)
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Pictures">
            <summary>
            Display Name         Pictures
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Pictures
            CSIDL Equivalent     CSIDL_MYPICTURES
            Legacy Display Name  My Pictures
            Legacy Default Path  %USERPROFILE%\My Documents\My Pictures
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ProgramFilesX86">
            <summary>
            Display Name         Program Files
            Folder Type          FIXED
            Default Path         %ProgramFiles% (%SystemDrive%\Program Files)
            CSIDL Equivalent     CSIDL_PROGRAM_FILESX86
            Legacy Display Name  Program Files
            Legacy Default Path  %ProgramFiles% (%SystemDrive%\Program Files)
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ProgramFilesCommonX86">
            <summary>
            Display Name         Common Files
            Folder Type          FIXED
            Default Path         %ProgramFiles%\Common Files
            CSIDL Equivalent     CSIDL_PROGRAM_FILES_COMMONX86
            Legacy Display Name  Common Files
            Legacy Default Path  %ProgramFiles%\Common Files
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ProgramFilesX64">
            <summary>
            Display Name         Program Files
            Folder Type          FIXED
            Default Path         %ProgramFiles% (%SystemDrive%\Program Files)
            CSIDL Equivalent     None
            Legacy Display Name  Program Files
            Legacy Default Path  %ProgramFiles% (%SystemDrive%\Program Files)
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ProgramFilesCommonX64">
            <summary>
            Display Name         Common Files
            Folder Type          FIXED
            Default Path         %ProgramFiles%\Common Files
            CSIDL Equivalent     None
            Legacy Display Name  Common Files
            Legacy Default Path  %ProgramFiles%\Common Files
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ProgramFiles">
            <summary>
            Display Name         Program Files
            Folder Type          FIXED
            Default Path         %ProgramFiles% (%SystemDrive%\Program Files)
            CSIDL Equivalent     CSIDL_PROGRAM_FILES
            Legacy Display Name  Program Files
            Legacy Default Path  %ProgramFiles% (%SystemDrive%\Program Files)
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ProgramFilesCommon">
            <summary>
            Display Name         Common Files
            Folder Type          FIXED
            Default Path         %ProgramFiles%\Common Files
            CSIDL Equivalent     CSIDL_PROGRAM_FILES_COMMON
            Legacy Display Name  Common Files
            Legacy Default Path  %ProgramFiles%\Common Files
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_UsersLibraries">
            <summary>
            UsersLibraries
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_UserProgramFiles">
            <summary>
            UserProgramFiles
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_UserProgramFilesCommon">
            <summary>
            UserProgramFilesCommon
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Ringtones">
            <summary>
            Ringtones
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_PublicRingtones">
            <summary>
            PublicRingtones
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_DocumentsLibrary">
            <summary>
            Display Name         Documents
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Libraries\Documents.library-ms
            CSIDL Equivalent     None, value introduced in Windows 7
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_MusicLibrary">
            <summary>
            MusicLibrary
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_PicturesLibrary">
            <summary>
            PicturesLibrary
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_VideosLibrary">
            <summary>
            VideosLibrary
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_RecordedTVLibrary">
            <summary>
            RecordedTVLibrary
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_HomeGroup">
            <summary>
            OtherUsers
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_DeviceMetadataStore">
            <summary>
            DeviceMetadataStore
            </summary>        
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Libraries">
            <summary>
            Libraries
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_PublicLibraries">
            <summary>
            Display Name        Libraries
            Folder Type         COMMON
            Default Path        %ALLUSERSPROFILE%\Microsoft\Windows\Libraries
            CSIDL Equivalent    None, value introduced in Windows 7
            Legacy Display Name Not applicable
            Legacy Default Path Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_UserPinned">
            <summary>
            UserPinned
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ImplicitAppShortcuts">
            <summary>
            ImplicitAppShortcuts
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_AdminTools">
            <summary>
            Display Name        Administrative Tools
            Folder Type         PERUSER
            Default Path        %APPDATA%\Microsoft\Windows\Start Menu\Programs\Administrative Tools
            CSIDL Equivalent    CSIDL_ADMINTOOLS
            Legacy Display Name Administrative Tools
            Legacy Default Path %USERPROFILE%\Start Menu\Programs\Administrative Tools
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_CommonAdminTools">
            <summary>
            Display Name            Administrative Tools
            Folder Type             COMMON
            Default Path            %ALLUSERSPROFILE%\Microsoft\Windows\Start Menu\Programs\Administrative Tools
            CSIDL Equivalent        CSIDL_COMMON_ADMINTOOLS
            Legacy Display Name     Administrative Tools
            Legacy Default Path     %ALLUSERSPROFILE%\Start Menu\Programs\Administrative Tools
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Music">
            <summary>
            Display Name         Music
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Music
            CSIDL Equivalent     CSIDL_MYMUSIC
            Legacy Display Name  My Music
            Legacy Default Path  %USERPROFILE%\My Documents\My Music
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Videos">
            <summary>
            Display Name         Videos
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Videos
            CSIDL                CSIDL_MYVIDEO
            Legacy Display Name  My Videos
            Legacy Default Path  %USERPROFILE%\My Documents\My Videos
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_PublicPictures">
            <summary>
            Display Name         Public Pictures
            Folder Type          COMMON
            Default Path         %PUBLIC%\Pictures
            CSIDL Equivalent     CSIDL_COMMON_PICTURES
            Legacy Display Name  Shared Pictures
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Pictures
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_PublicMusic">
            <summary>
            Display Name         Public Music
            Folder Type          COMMON
            Default Path         %PUBLIC%\Music
            CSIDL Equivalent     CSIDL_COMMON_MUSIC
            Legacy Display Name  Shared Music
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Music
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_PublicVideos">
            <summary>
            Display Name         Public Videos
            Folder Type          COMMON
            Default Path         %PUBLIC%\Videos
            CSIDL Equivalent     CSIDL_COMMON_VIDEO
            Legacy Display Name  Shared Video
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Videos
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ResourceDir">
            <summary>
            Display Name         Resources
            Folder Type          FIXED
            Default Path         %windir%\Resources
            CSIDL Equivalent     CSIDL_RESOURCES
            Legacy Display Name  Resources
            Legacy Default Path  %windir%\Resources
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_LocalizedResourcesDir">
            <summary>
            Display Name         None
            Folder Type          FIXED
            Default Path         %windir%\resources\0409 (code page)
            CSIDL Equivalent     CSIDL_RESOURCES_LOCALIZED
            Legacy Display Name  None
            Legacy Default Path  %windir%\resources\0409 (code page)
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_CommonOEMLinks">
            <summary>
            Display Name        OEM Links
            Folder Type         COMMON
            Default Path        %ALLUSERSPROFILE%\OEM Links
            CSIDL Equivalent    CSIDL_COMMON_OEM_LINKS
            Legacy Display Name OEM Links
            Legacy Default Path %ALLUSERSPROFILE%\OEM Links
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_CDBurning">
            <summary>
            Display Name        Temporary Burn Folder
            Folder Type         PERUSER
            Default Path        %LOCALAPPDATA%\Microsoft\Windows\Burn\Burn
            CSIDL Equivalent    CSIDL_CDBURN_AREA
            Legacy Display Name CD Burning
            Legacy Default Path %USERPROFILE%\Local Settings\Application Data\Microsoft\CD Burning
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_UserProfiles">
            <summary>
            Display Name         Users
            Folder Type          FIXED
            Default Path         %SystemDrive%\Users
            CSIDL Equivalent     None, new for Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Playlists">
            <summary>
            Display Name         Playlists
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Music\Playlists
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SamplePlaylists">
            <summary>
            Display Name         Sample Playlists
            Folder Type          COMMON
            Default Path         %PUBLIC%\Music\Sample Playlists
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SampleMusic">
            <summary>
            Display Name         Sample Music
            Folder Type          COMMON
            Default Path         %PUBLIC%\Music\Sample Music
            CSIDL Equivalent     None
            Legacy Display Name  Sample Music
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Music\Sample Music
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SamplePictures">
            <summary>
            Display Name         Sample Pictures
            Folder Type          COMMON
            Default Path         %PUBLIC%\Pictures\Sample Pictures
            CSIDL Equivalent     None
            Legacy Display Name  Sample Pictures
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Pictures\Sample Pictures
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SampleVideos">
            <summary>
            Display Name         Sample Videos
            Folder Type          COMMON
            Default Path         %PUBLIC%\Videos\Sample Videos
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_PhotoAlbums">
            <summary>
            Display Name         Slide Shows
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Pictures\Slide Shows
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Public">
            <summary>
            Display Name         Public
            Folder Type          FIXED
            Default Path         %PUBLIC% (%SystemDrive%\Users\Public)
            CSIDL Equivalent     None, new for Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ChangeRemovePrograms">
            <summary>
            Display Name        Programs and Features
            Folder Type         VIRTUAL
            Default Path        Not applicable—virtual folder
            CSIDL Equivalent    None
            Legacy Display Name Add or Remove Programs
            Legacy Default Path Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_AppUpdates">
            <summary>
            Display Name        Installed Updates
            Folder Type         VIRTUAL
            Default Path        Not applicable—virtual folder
            CSIDL Equivalent    None
            Legacy Display Name None, new in Windows Vista. In earlier versions of Microsoft Windows, the information on this page was included in Add or Remove Programs if the Show updates box was checked.
            Legacy Default Path Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_AddNewPrograms">
            <summary>
            Display Name        Get Programs
            Folder Type         VIRTUAL
            Default Path        Not applicable—virtual folder
            CSIDL Equivalent    None
            Legacy Display Name Add New Programs (found in the Add or Remove Programs item in the Control Panel)
            Legacy Default Path Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Downloads">
            <summary>
            Display Name         Downloads
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Downloads
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_PublicDownloads">
            <summary>
            Display Name         Public Downloads
            Folder Type          COMMON
            Default Path         %PUBLIC%\Downloads
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SavedSearches">
            <summary>
            Display Name         Searches
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Searches
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_QuickLaunch">
            <summary>
            Display Name         Quick Launch
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Internet Explorer\Quick Launch
            CSIDL Equivalent     None
            Legacy Display Name  Quick Launch
            Legacy Default Path  %APPDATA%\Microsoft\Internet Explorer\Quick Launch
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Contacts">
            <summary>
            Display Name         Contacts
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Contacts
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SidebarParts">
            <summary>
            Display Name         Gadgets
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows Sidebar\Gadgets
            CSIDL Equivalent     None, new for Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SidebarDefaultParts">
            <summary>
            Display Name         Gadgets
            Folder Type          COMMON
            Default Path         %ProgramFiles%\Windows Sidebar\Gadgets
            CSIDL Equivalent     None, new for Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_PublicGameTasks">
            <summary>
            Display Name         GameExplorer
            Folder Type          COMMON
            Default Path         %ALLUSERSPROFILE%\Microsoft\Windows\GameExplorer
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_GameTasks">
            <summary>
            Display Name         GameExplorer
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\GameExplorer
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SavedGames">
            <summary>
            Display Name         Saved Games
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Saved Games
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Games">
            <summary>
            Display Name         Saved Games
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Saved Games
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SEARCH_MAPI">
            <summary>
            Display Name         Microsoft Office Outlook
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SEARCH_CSC">
            <summary>
            Display Name         Offline Files
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Links">
            <summary>
            Display Name         Links
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Links
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_UsersFiles">
            <summary>
            Display Name         The user's full name (for instance, Jean Philippe Bagel) entered when the user account was created.
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_SearchHome">
            <summary>
            Display Name         Search Results
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_OriginalImages">
            <summary>
            Display Name         Original Images
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows Photo Gallery\Original Images
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_HomeGroupCurrentUser">
            <summary>
            Display Name         The user's username (%USERNAME%)
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_AccountPictures">
            <summary>
            Display Name         Account Pictures
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\AccountPictures
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_PublicUserTiles">
            <summary>
            Display Name         Public Account Pictures
            Folder Type          COMMON
            Default Path         %PUBLIC%\AccountPictures
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_AppsFolder">
            <summary>
            Display Name         Applications
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_ApplicationShortcuts">
            <summary>
            Display Name         Application Shortcuts
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\Application Shortcuts
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_RoamingTiles">
            <summary>
            Display Name         RoamingTiles
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\RoamingTiles
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_RoamedTileImages">
            <summary>
            Display Name         RoamedTileImages
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\RoamedTileImages
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_IID.ID_FOLDERID_Screenshots">
            <summary>
            Display Name         Screenshots
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Pictures\Screenshots
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="M:WSF.IDs.KF_IID.GetIdKnownFolders">
            <summary>
            Returns a dictionary of all constants and their Ids in this class.
            </summary>
        </member>
        <member name="T:WSF.IDs.KF_ID">
             <summary>
             KnownFolders contain the known folder ids for windows.
            
             The KNOWNFOLDERID constants represent GUIDs that identify standard folders registered with the
             system as Known Folders. These folders are installed with Windows Vista and later operating
             systems, and a computer will have only folders appropriate to it installed. These values are
             defined in Knownfolders.h.
             see also IKnownFolderNative.GetId() method.
            
             </summary>
             <remarks>
             See: http://msdn.microsoft.com/en-us/library/windows/desktop/dd378457.aspx
             For details on known folders.
             </remarks>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_Length">
            <summary>
            Defines the exact length in characters for all IDs defined below.
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_ROOT_Desktop">
            <summary>
            Invented Id for Desktop Root Item which is root above all other items
            (Not to be confused with user desktop special folder item).
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_NetworkFolder">
            <summary>
            Display Name         Network
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_NETWORK, CSIDL_COMPUTERSNEARME
            Legacy Display Name  My Network Places
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ComputerFolder">
            <summary>
            Display Name          Computer
            Folder Type           VIRTUAL
            Default Path          Not applicable—virtual folder
            CSIDL Equivalent      CSIDL_DRIVES
            Legacy Display Name   My Computer
            Legacy Default Path   Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_InternetFolder">
            <summary>
            Display Name         Internet Explorer
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_INTERNET
            Legacy Display Name  Internet Explorer
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ControlPanelFolder">
            <summary>
            Display Name         Control Panel
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_CONTROLS
            Legacy Display Name  Control Panel
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_PrintersFolder">
            <summary>
            Display Name         Printers
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_PRINTERS
            Legacy Display Name  Printers and Faxes
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SyncManagerFolder">
            <summary>
            Display Name         Sync Center
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SyncSetupFolder">
            <summary>
            Display Name         Sync Setup
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ConflictFolder">
            <summary>
            Display Name          Conflicts
            Folder Type           VIRTUAL
            Default Path          Not applicable—virtual folder
            CSIDL Equivalent      None, new in Windows Vista
            Legacy Display Name   Not applicable. This KNOWNFOLDERID refers to the Windows Vista Synchronization Manager. It is not the folder referenced by the older ISyncMgrConflictFolder.
            Legacy Default Path   Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SyncResultsFolder">
            <summary>
            Display Name         Control Panel
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_CONTROLS
            Legacy Display Name  Control Panel
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_RecycleBinFolder">
            <summary>
            Display Name         Recycle Bin
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_BITBUCKET
            Legacy Display Name  Recycle Bin
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ConnectionsFolder">
            <summary>
            Display Name         Network Connections
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_CONNECTIONS
            Legacy Display Name  Network Connections
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Fonts">
            <summary>
            Display Name         Fonts
            Folder Type          FIXED
            Default Path         %windir%\Fonts
            CSIDL Equivalent     CSIDL_FONTS
            Legacy Display Name  Fonts
            Legacy Default Path  %windir%\Fonts
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Desktop">
            <summary>
            Display Name         Desktop
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Desktop
            CSIDL Equivalent     CSIDL_DESKTOP, CSIDL_DESKTOPDIRECTORY
            Legacy Display Name  Desktop
            Legacy Default Path  %USERPROFILE%\Desktop
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Startup">
            <summary>
            Display Name         Startup
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Start Menu\Programs\StartUp
            CSIDL Equivalent     CSIDL_STARTUP, CSIDL_ALTSTARTUP
            Legacy Display Name  Startup
            Legacy Default Path  %USERPROFILE%\Start Menu\Programs\StartUp
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Programs">
            <summary>
            Display Name         Programs
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Start Menu\Programs
            CSIDL Equivalent     CSIDL_PROGRAMS
            Legacy Display Name  Programs
            Legacy Default Path  %USERPROFILE%\Start Menu\Programs
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_StartMenu">
            <summary>
            Display Name         Start Menu
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Start Menu
            CSIDL Equivalent     CSIDL_STARTMENU
            Legacy Display Name  Start Menu
            Legacy Default Path  %USERPROFILE%\Start Menu
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Recent">
            <summary>
            Display Name         Recent Items
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Recent
            CSIDL Equivalent     CSIDL_RECENT
            Legacy Display Name  My Recent Documents
            Legacy Default Path  %USERPROFILE%\Recent
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SendTo">
            <summary>
            Display Name         SendTo
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\SendTo
            CSIDL Equivalent     CSIDL_SENDTO
            Legacy Display Name  SendTo
            Legacy Default Path  %USERPROFILE%\SendTo
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Documents">
            <summary>
            Display Name         Documents
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Documents
            CSIDL Equivalent     CSIDL_MYDOCUMENTS, CSIDL_PERSONAL
            Legacy Display Name  My Documents
            Legacy Default Path  %USERPROFILE%\My Documents
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Favorites">
            <summary>
            Display Name         Favorites
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Favorites
            CSIDL Equivalent     CSIDL_FAVORITES, CSIDL_COMMON_FAVORITES
            Legacy Display Name  Favorites
            Legacy Default Path  %USERPROFILE%\Favorites
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_NetHood">
            <summary>
            Display Name         Network Shortcuts
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Network Shortcuts
            CSIDL Equivalent     CSIDL_NETHOOD
            Legacy Display Name  NetHood
            Legacy Default Path  %USERPROFILE%\NetHood
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_PrintHood">
            <summary>
            Display Name         Printer Shortcuts
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Printer Shortcuts
            CSIDL Equivalent     CSIDL_PRINTHOOD
            Legacy Display Name  PrintHood
            Legacy Default Path  %USERPROFILE%\PrintHood
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Templates">
            <summary>
            Display Name         Templates
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Templates
            CSIDL Equivalent     CSIDL_TEMPLATES
            Legacy Display Name  Templates
            Legacy Default Path  %USERPROFILE%\Templates
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_CommonStartup">
            <summary>
            Display Name          Startup
            Folder Type           COMMON
            Default Path          %ALLUSERSPROFILE%\Microsoft\Windows\Start Menu\Programs\StartUp
            CSIDL Equivalent      CSIDL_COMMON_STARTUP, CSIDL_COMMON_ALTSTARTUP
            Legacy Display Name   Startup
            Legacy Default Path   %ALLUSERSPROFILE%\Start Menu\Programs\StartUp
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_CommonPrograms">
            <summary>
            Display Name          Programs
            Folder Type           COMMON
            Default Path          %ALLUSERSPROFILE%\Microsoft\Windows\Start Menu\Programs
            CSIDL Equivalent      CSIDL_COMMON_PROGRAMS
            Legacy Display Name   Programs
            Legacy Default Path   %ALLUSERSPROFILE%\Start Menu\Programs
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_CommonStartMenu">
            <summary>
            Display Name          Start Menu
            Folder Type           COMMON
            Default Path          %ALLUSERSPROFILE%\Microsoft\Windows\Start Menu
            CSIDL Equivalent      CSIDL_COMMON_STARTMENU
            Legacy Display Name   Start Menu
            Legacy Default Path   %ALLUSERSPROFILE%\Start Menu
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_PublicDesktop">
            <summary>
            Display Name         Public Desktop
            Folder Type          COMMON
            Default Path         %PUBLIC%\Desktop
            CSIDL Equivalent     CSIDL_COMMON_DESKTOPDIRECTORY
            Legacy Display Name  Desktop
            Legacy Default Path  %ALLUSERSPROFILE%\Desktop
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ProgramData">
            <summary>
            Display Name         ProgramData
            Folder Type          FIXED
            Default Path         %ALLUSERSPROFILE% (%ProgramData%, %SystemDrive%\ProgramData)
            CSIDL Equivalent     CSIDL_COMMON_APPDATA
            Legacy Display Name  Application Data
            Legacy Default Path  %ALLUSERSPROFILE%\Application Data
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_CommonTemplates">
            <summary>
            Display Name          Templates
            Folder Type           COMMON
            Default Path          %ALLUSERSPROFILE%\Templates
            CSIDL Equivalent      CSIDL_COMMON_TEMPLATES
            Legacy Display Name   Templates
            Legacy Default Path   %ALLUSERSPROFILE%\Templates
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_PublicDocuments">
            <summary>
            Display Name         Public Documents
            Folder Type          COMMON
            Default Path         %PUBLIC%\Documents
            CSIDL Equivalent     CSIDL_COMMON_DOCUMENTS
            Legacy Display Name  Shared Documents
            Legacy Default Path  %ALLUSERSPROFILE%\Documents
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_RoamingAppData">
            <summary>
            Display Name         Roaming
            Folder Type          PERUSER
            Default Path         %APPDATA% (%USERPROFILE%\AppData\Roaming)
            CSIDL Equivalent     CSIDL_APPDATA
            Legacy Display Name  Application Data
            Legacy Default Path  %APPDATA% (%USERPROFILE%\Application Data)
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_LocalAppData">
            <summary>
            Display Name         Local
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA% (%USERPROFILE%\AppData\Local)
            CSIDL Equivalent     CSIDL_LOCAL_APPDATA
            Legacy Display Name  Application Data
            Legacy Default Path  %USERPROFILE%\Local Settings\Application Data
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_LocalAppDataLow">
            <summary>
            Display Name         LocalLow
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\AppData\LocalLow
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_InternetCache">
            <summary>
            Display Name         Temporary Internet Files
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\Temporary Internet Files
            CSIDL Equivalent     CSIDL_INTERNET_CACHE
            Legacy Display Name  Temporary Internet Files
            Legacy Default Path  %USERPROFILE%\Local Settings\Temporary Internet Files
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Cookies">
            <summary>
            Display Name         Cookies
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Cookies
            CSIDL Equivalent     CSIDL_COOKIES
            Legacy Display Name  Cookies
            Legacy Default Path  %USERPROFILE%\Cookies
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_History">
            <summary>
            Display Name         History
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\History
            CSIDL Equivalent     CSIDL_HISTORY
            Legacy Display Name  History
            Legacy Default Path  %USERPROFILE%\Local Settings\History
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_System">
            <summary>
            Display Name         System32
            Folder Type          FIXED
            Default Path         %windir%\system32
            CSIDL Equivalent     CSIDL_SYSTEM
            Legacy Display Name  system32
            Legacy Default Path  %windir%\system32
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SystemX86">
            <summary>
            Display Name         System32
            Folder Type          FIXED
            Default Path         %windir%\system32
            CSIDL Equivalent     CSIDL_SYSTEMX86
            Legacy Display Name  system32
            Legacy Default Path  %windir%\system32
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Windows">
            <summary>
            Display Name         Windows
            Folder Type          FIXED
            Default Path         %windir%
            CSIDL Equivalent     CSIDL_WINDOWS
            Legacy Display Name  WINDOWS
            Legacy Default Path  %windir%
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Profile">
            <summary>
            Display Name         The user's username (%USERNAME%)
            Folder Type          FIXED
            Default Path         %USERPROFILE% (%SystemDrive%\Users\%USERNAME%)
            CSIDL Equivalent     CSIDL_PROFILE
            Legacy Display Name  The user's username (%USERNAME%)
            Legacy Default Path  %USERPROFILE% (%SystemDrive%\Documents and Settings\%USERNAME%)
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Pictures">
            <summary>
            Display Name         Pictures
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Pictures
            CSIDL Equivalent     CSIDL_MYPICTURES
            Legacy Display Name  My Pictures
            Legacy Default Path  %USERPROFILE%\My Documents\My Pictures
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ProgramFilesX86">
            <summary>
            Display Name         Program Files
            Folder Type          FIXED
            Default Path         %ProgramFiles% (%SystemDrive%\Program Files)
            CSIDL Equivalent     CSIDL_PROGRAM_FILESX86
            Legacy Display Name  Program Files
            Legacy Default Path  %ProgramFiles% (%SystemDrive%\Program Files)
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ProgramFilesCommonX86">
            <summary>
            Display Name         Common Files
            Folder Type          FIXED
            Default Path         %ProgramFiles%\Common Files
            CSIDL Equivalent     CSIDL_PROGRAM_FILES_COMMONX86
            Legacy Display Name  Common Files
            Legacy Default Path  %ProgramFiles%\Common Files
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ProgramFilesX64">
            <summary>
            Display Name         Program Files
            Folder Type          FIXED
            Default Path         %ProgramFiles% (%SystemDrive%\Program Files)
            CSIDL Equivalent     None
            Legacy Display Name  Program Files
            Legacy Default Path  %ProgramFiles% (%SystemDrive%\Program Files)
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ProgramFilesCommonX64">
            <summary>
            Display Name         Common Files
            Folder Type          FIXED
            Default Path         %ProgramFiles%\Common Files
            CSIDL Equivalent     None
            Legacy Display Name  Common Files
            Legacy Default Path  %ProgramFiles%\Common Files
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ProgramFiles">
            <summary>
            Display Name         Program Files
            Folder Type          FIXED
            Default Path         %ProgramFiles% (%SystemDrive%\Program Files)
            CSIDL Equivalent     CSIDL_PROGRAM_FILES
            Legacy Display Name  Program Files
            Legacy Default Path  %ProgramFiles% (%SystemDrive%\Program Files)
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ProgramFilesCommon">
            <summary>
            Display Name         Common Files
            Folder Type          FIXED
            Default Path         %ProgramFiles%\Common Files
            CSIDL Equivalent     CSIDL_PROGRAM_FILES_COMMON
            Legacy Display Name  Common Files
            Legacy Default Path  %ProgramFiles%\Common Files
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_UsersLibraries">
            <summary>
            UsersLibraries
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_UserProgramFiles">
            <summary>
            UserProgramFiles
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_UserProgramFilesCommon">
            <summary>
            UserProgramFilesCommon
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Ringtones">
            <summary>
            Ringtones
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_PublicRingtones">
            <summary>
            PublicRingtones
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_DocumentsLibrary">
            <summary>
            Display Name         Documents
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Libraries\Documents.library-ms
            CSIDL Equivalent     None, value introduced in Windows 7
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_MusicLibrary">
            <summary>
            MusicLibrary
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_PicturesLibrary">
            <summary>
            PicturesLibrary
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_VideosLibrary">
            <summary>
            VideosLibrary
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_RecordedTVLibrary">
            <summary>
            RecordedTVLibrary
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_HomeGroup">
            <summary>
            OtherUsers
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_DeviceMetadataStore">
            <summary>
            DeviceMetadataStore
            </summary>        
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Libraries">
            <summary>
            Libraries
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_PublicLibraries">
            <summary>
            Display Name        Libraries
            Folder Type         COMMON
            Default Path        %ALLUSERSPROFILE%\Microsoft\Windows\Libraries
            CSIDL Equivalent    None, value introduced in Windows 7
            Legacy Display Name Not applicable
            Legacy Default Path Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_UserPinned">
            <summary>
            UserPinned
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ImplicitAppShortcuts">
            <summary>
            ImplicitAppShortcuts
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_AdminTools">
            <summary>
            Display Name        Administrative Tools
            Folder Type         PERUSER
            Default Path        %APPDATA%\Microsoft\Windows\Start Menu\Programs\Administrative Tools
            CSIDL Equivalent    CSIDL_ADMINTOOLS
            Legacy Display Name Administrative Tools
            Legacy Default Path %USERPROFILE%\Start Menu\Programs\Administrative Tools
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_CommonAdminTools">
            <summary>
            Display Name            Administrative Tools
            Folder Type             COMMON
            Default Path            %ALLUSERSPROFILE%\Microsoft\Windows\Start Menu\Programs\Administrative Tools
            CSIDL Equivalent        CSIDL_COMMON_ADMINTOOLS
            Legacy Display Name     Administrative Tools
            Legacy Default Path     %ALLUSERSPROFILE%\Start Menu\Programs\Administrative Tools
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Music">
            <summary>
            Display Name         Music
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Music
            CSIDL Equivalent     CSIDL_MYMUSIC
            Legacy Display Name  My Music
            Legacy Default Path  %USERPROFILE%\My Documents\My Music
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Videos">
            <summary>
            Display Name         Videos
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Videos
            CSIDL                CSIDL_MYVIDEO
            Legacy Display Name  My Videos
            Legacy Default Path  %USERPROFILE%\My Documents\My Videos
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_PublicPictures">
            <summary>
            Display Name         Public Pictures
            Folder Type          COMMON
            Default Path         %PUBLIC%\Pictures
            CSIDL Equivalent     CSIDL_COMMON_PICTURES
            Legacy Display Name  Shared Pictures
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Pictures
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_PublicMusic">
            <summary>
            Display Name         Public Music
            Folder Type          COMMON
            Default Path         %PUBLIC%\Music
            CSIDL Equivalent     CSIDL_COMMON_MUSIC
            Legacy Display Name  Shared Music
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Music
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_PublicVideos">
            <summary>
            Display Name         Public Videos
            Folder Type          COMMON
            Default Path         %PUBLIC%\Videos
            CSIDL Equivalent     CSIDL_COMMON_VIDEO
            Legacy Display Name  Shared Video
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Videos
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ResourceDir">
            <summary>
            Display Name         Resources
            Folder Type          FIXED
            Default Path         %windir%\Resources
            CSIDL Equivalent     CSIDL_RESOURCES
            Legacy Display Name  Resources
            Legacy Default Path  %windir%\Resources
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_LocalizedResourcesDir">
            <summary>
            Display Name         None
            Folder Type          FIXED
            Default Path         %windir%\resources\0409 (code page)
            CSIDL Equivalent     CSIDL_RESOURCES_LOCALIZED
            Legacy Display Name  None
            Legacy Default Path  %windir%\resources\0409 (code page)
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_CommonOEMLinks">
            <summary>
            Display Name        OEM Links
            Folder Type         COMMON
            Default Path        %ALLUSERSPROFILE%\OEM Links
            CSIDL Equivalent    CSIDL_COMMON_OEM_LINKS
            Legacy Display Name OEM Links
            Legacy Default Path %ALLUSERSPROFILE%\OEM Links
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_CDBurning">
            <summary>
            Display Name        Temporary Burn Folder
            Folder Type         PERUSER
            Default Path        %LOCALAPPDATA%\Microsoft\Windows\Burn\Burn
            CSIDL Equivalent    CSIDL_CDBURN_AREA
            Legacy Display Name CD Burning
            Legacy Default Path %USERPROFILE%\Local Settings\Application Data\Microsoft\CD Burning
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_UserProfiles">
            <summary>
            Display Name         Users
            Folder Type          FIXED
            Default Path         %SystemDrive%\Users
            CSIDL Equivalent     None, new for Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Playlists">
            <summary>
            Display Name         Playlists
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Music\Playlists
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SamplePlaylists">
            <summary>
            Display Name         Sample Playlists
            Folder Type          COMMON
            Default Path         %PUBLIC%\Music\Sample Playlists
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SampleMusic">
            <summary>
            Display Name         Sample Music
            Folder Type          COMMON
            Default Path         %PUBLIC%\Music\Sample Music
            CSIDL Equivalent     None
            Legacy Display Name  Sample Music
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Music\Sample Music
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SamplePictures">
            <summary>
            Display Name         Sample Pictures
            Folder Type          COMMON
            Default Path         %PUBLIC%\Pictures\Sample Pictures
            CSIDL Equivalent     None
            Legacy Display Name  Sample Pictures
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Pictures\Sample Pictures
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SampleVideos">
            <summary>
            Display Name         Sample Videos
            Folder Type          COMMON
            Default Path         %PUBLIC%\Videos\Sample Videos
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_PhotoAlbums">
            <summary>
            Display Name         Slide Shows
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Pictures\Slide Shows
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Public">
            <summary>
            Display Name         Public
            Folder Type          FIXED
            Default Path         %PUBLIC% (%SystemDrive%\Users\Public)
            CSIDL Equivalent     None, new for Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ChangeRemovePrograms">
            <summary>
            Display Name        Programs and Features
            Folder Type         VIRTUAL
            Default Path        Not applicable—virtual folder
            CSIDL Equivalent    None
            Legacy Display Name Add or Remove Programs
            Legacy Default Path Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_AppUpdates">
            <summary>
            Display Name        Installed Updates
            Folder Type         VIRTUAL
            Default Path        Not applicable—virtual folder
            CSIDL Equivalent    None
            Legacy Display Name None, new in Windows Vista. In earlier versions of Microsoft Windows, the information on this page was included in Add or Remove Programs if the Show updates box was checked.
            Legacy Default Path Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_AddNewPrograms">
            <summary>
            Display Name        Get Programs
            Folder Type         VIRTUAL
            Default Path        Not applicable—virtual folder
            CSIDL Equivalent    None
            Legacy Display Name Add New Programs (found in the Add or Remove Programs item in the Control Panel)
            Legacy Default Path Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Downloads">
            <summary>
            Display Name         Downloads
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Downloads
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_PublicDownloads">
            <summary>
            Display Name         Public Downloads
            Folder Type          COMMON
            Default Path         %PUBLIC%\Downloads
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SavedSearches">
            <summary>
            Display Name         Searches
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Searches
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_QuickLaunch">
            <summary>
            Display Name         Quick Launch
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Internet Explorer\Quick Launch
            CSIDL Equivalent     None
            Legacy Display Name  Quick Launch
            Legacy Default Path  %APPDATA%\Microsoft\Internet Explorer\Quick Launch
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Contacts">
            <summary>
            Display Name         Contacts
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Contacts
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SidebarParts">
            <summary>
            Display Name         Gadgets
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows Sidebar\Gadgets
            CSIDL Equivalent     None, new for Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SidebarDefaultParts">
            <summary>
            Display Name         Gadgets
            Folder Type          COMMON
            Default Path         %ProgramFiles%\Windows Sidebar\Gadgets
            CSIDL Equivalent     None, new for Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_PublicGameTasks">
            <summary>
            Display Name         GameExplorer
            Folder Type          COMMON
            Default Path         %ALLUSERSPROFILE%\Microsoft\Windows\GameExplorer
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_GameTasks">
            <summary>
            Display Name         GameExplorer
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\GameExplorer
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SavedGames">
            <summary>
            Display Name         Saved Games
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Saved Games
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Games">
            <summary>
            Display Name         Saved Games
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Saved Games
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SEARCH_MAPI">
            <summary>
            Display Name         Microsoft Office Outlook
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SEARCH_CSC">
            <summary>
            Display Name         Offline Files
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Links">
            <summary>
            Display Name         Links
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Links
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_UsersFiles">
            <summary>
            Display Name         The user's full name (for instance, Jean Philippe Bagel) entered when the user account was created.
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_SearchHome">
            <summary>
            Display Name         Search Results
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_OriginalImages">
            <summary>
            Display Name         Original Images
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows Photo Gallery\Original Images
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_HomeGroupCurrentUser">
            <summary>
            Display Name         The user's username (%USERNAME%)
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_AccountPictures">
            <summary>
            Display Name         Account Pictures
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\AccountPictures
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_PublicUserTiles">
            <summary>
            Display Name         Public Account Pictures
            Folder Type          COMMON
            Default Path         %PUBLIC%\AccountPictures
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_AppsFolder">
            <summary>
            Display Name         Applications
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_ApplicationShortcuts">
            <summary>
            Display Name         Application Shortcuts
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\Application Shortcuts
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_RoamingTiles">
            <summary>
            Display Name         RoamingTiles
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\RoamingTiles
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_RoamedTileImages">
            <summary>
            Display Name         RoamedTileImages
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\RoamedTileImages
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.IDs.KF_ID.ID_FOLDERID_Screenshots">
            <summary>
            Display Name         Screenshots
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Pictures\Screenshots
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="M:WSF.IDs.KF_ID.GetIdKnownFolders(System.String)">
            <summary>
            Returns a dictionary of all constants and their Ids in this class.
            </summary>
        </member>
        <member name="T:WSF.Interfaces.IDirectoryBrowser">
            <summary>
            Represents a directory in a PIDL Shell system using an abstract .Net
            PIDL representation as <see cref="T:WSF.Shell.Pidl.IdList"/> objects.
            https://docs.microsoft.com/en-us/windows/desktop/api/shtypes/ns-shtypes-_itemidlist
            </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.Name">
            <summary>
            Gets the name of a directory.
            </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.ParseName">
            <summary>
            Gets the parse name that was returned from the IShellFolder2 interface.
            </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.Label">
            <summary>
            Gets a label string that may differ from other naming
            strings if the item (eg Drive) supports labeling.
            
            String is suitable for display only and should
            not be used as index as it is not unique.
            </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.PathShell">
            <summary>
            Get Known FolderId or file system Path for this folder.
            
            That is:
            1) A knownfolder GUID (if it exists) is shown
               here as default preference over
               
            2) A storage location (if it exists) in the filesystem
            </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.SpecialPathId">
            <summary>
            Contains the special path GUID if this item is a special shell space item.
            </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.IsSpecialParseItem">
            <summary>
            Indicates whether the parse name is available with a special path reference,
            such as, '::{...}'. This type of reference indicates a knownfolder reference
            that should be available in <see cref="P:WSF.Interfaces.IDirectoryBrowser.SpecialPathId"/> if this property
            returns true.
            </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.PathFileSystem">
            <summary>
            Gets the filesystem path (e.g. 'C:\') if this item has a dedicated
            or associated storage location in the file system.
            </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.ParentIdList">
            <summary>
            Gets the IdList (if available) that describes the full
            shell path for this item)
            </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.ChildIdList">
            <summary>
            Gets the IdList (if available) that describes the full
            shell path for this item)
            </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.FullName">
            <summary>
            Get Known file system Path  or FolderId for this folder.
            
            That is:
            1) A storage location (if it exists) in the filesystem
            
            2) A knownfolder GUID (if it exists) is shown
               here as default preference over
               
            </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.IconResourceId">
             <summary>
             Gets an optional pointer to the default icon resource used when the folder is created.
             This is a null-terminated Unicode string in this form:
            
             Module name, Resource ID
             or null is this information is not available.
             </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.ItemType">
            <summary>
            Gets the folders type classification.
            </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.KnownFolder">
             <summary>
             Gets the knownfolder properties if this item represents a knownfolder,
             otherwise null.
            
             https://msdn.microsoft.com/en-us/library/windows/desktop/bb773325(v=vs.85).aspx
             </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.IsFullyInitialized">
            <summary>
            Gets whether all properties have been fully resolved or not.
            
            Properties like <see cref="P:WSF.Interfaces.IDirectoryBrowser.KnownFolder"/>, <see cref="P:WSF.Interfaces.IDirectoryBrowser.IconResourceId"/>,
            or <see cref="P:WSF.Interfaces.IDirectoryBrowser.ItemType"/> can be loaded lazily
            - call <see cref="M:WSF.Interfaces.IDirectoryBrowser.LoadProperties"/> method to complete this process
            before using these properties.
            </summary>
        </member>
        <member name="P:WSF.Interfaces.IDirectoryBrowser.PathRAW">
            <summary>
            Gets the raw string that was used to construct this object.
            This property is for debug/filter purposes only and should not be
            visible in any UI or ViewModel.
            </summary>
        </member>
        <member name="M:WSF.Interfaces.IDirectoryBrowser.LoadProperties">
            <summary>
            Resolves remaining properties if <see cref="P:WSF.Interfaces.IDirectoryBrowser.IsFullyInitialized"/> indicates
            missing values (useful for lazy initialization).
            </summary>
        </member>
        <member name="M:WSF.Interfaces.IDirectoryBrowser.DirectoryPathExists">
            <summary>
            Determines if this item refers to an existing path in the filesystem or not.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Interfaces.IDirectoryBrowser.EqualsParseName(System.String)">
             <summary>
             Compares a given parse name with the parse names known in this object.
             
             Considers case insensitive string matching for:
             1> SpecialPathId
               1.2> PathRAW (if SpecialPathId fails and CLSID may have been used to create this)
            
             3> PathFileSystem
             </summary>
             <param name="parseName">True is a matching parse name was found and false if not.</param>
             <returns></returns>
        </member>
        <member name="T:WSF.Local.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_Copy_Path_To_Clipboard_Label">
            <summary>
              Looks up a localized string similar to Copy path into Windows Clipboard....
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_Copy_Path_To_Clipboard_Label_TT">
            <summary>
              Looks up a localized string similar to Copy as path into Windows clipboard..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_Copy_Path_To_Clipboard_Label_TT1">
            <summary>
              Looks up a localized string similar to Copy as path into Windows clipboard..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_Copy_Path_To_Clipboard_Label1">
            <summary>
              Looks up a localized string similar to Copy path into Windows Clipboard....
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_Open_in_Application_Label">
            <summary>
              Looks up a localized string similar to Open ....
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_Open_in_Application_Label_TT">
            <summary>
              Looks up a localized string similar to Open the selected file in the application..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_Open_in_Windows_Label">
            <summary>
              Looks up a localized string similar to Open folder in Windows Explorer....
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_Open_in_Windows_Label_TT">
            <summary>
              Looks up a localized string similar to Displays the Windows Explorer with the selected folder..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_Open_in_Windows_Label_TT1">
            <summary>
              Looks up a localized string similar to Displays the Windows Explorer with the selected folder..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_Open_with_Windows_Association_Label">
            <summary>
              Looks up a localized string similar to Open in Windows....
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_Open_with_Windows_Association_Label_TT">
            <summary>
              Looks up a localized string similar to Execute the selected item (folder or file) with default Windows application..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_RecentFolderAdd_Label">
            <summary>
              Looks up a localized string similar to Bookmark folder.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_RecentFolderAdd_Label1">
            <summary>
              Looks up a localized string similar to Bookmark folder.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_RecentFolderAdd_TT">
            <summary>
              Looks up a localized string similar to Adds the selected folder to the list of bookmarked folders..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_RecentFolderRemove_Label">
            <summary>
              Looks up a localized string similar to Remove folder bookmark.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_RecentFolderRemove_Label1">
            <summary>
              Looks up a localized string similar to Remove folder bookmark.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_RecentFolderRemove_TT">
            <summary>
              Looks up a localized string similar to Removes the selected folder from the list of bookmarked folders..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_ToggleIsFolderVisibleCommand_TT">
            <summary>
              Looks up a localized string similar to Show or hide folder..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.CMD_ToggleIsIconVisibleCommand_TT">
            <summary>
              Looks up a localized string similar to Show or hide icons..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.FolderItem_Desktop">
            <summary>
              Looks up a localized string similar to Desktop.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.FolderItem_MyDocuments">
            <summary>
              Looks up a localized string similar to My Documents.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.ForbiddenRenameKeys">
            <summary>
              Looks up a localized string similar to \/:*?&quot;&lt;&gt;|.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.ForbiddenRenameKeysMessage">
             <summary>
               Looks up a localized string similar to A name cannot contain any of the following characters:
            \/:*?&quot;&lt;&gt;|.
             </summary>
        </member>
        <member name="P:WSF.Local.Strings.ForbiddenRenameKeysTitle">
            <summary>
              Looks up a localized string similar to Invalid Character Input.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.NavigateBackCommand_TT">
            <summary>
              Looks up a localized string similar to Back to:.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.NavigateForwardCommand_TT">
            <summary>
              Looks up a localized string similar to Forward to:.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.NavigateUpCommand_TT">
            <summary>
              Looks up a localized string similar to Up.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.RefreshCommand_TT">
            <summary>
              Looks up a localized string similar to Update listed items..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.SelectFilterCommand_TT">
            <summary>
              Looks up a localized string similar to Select a filter to restrict the listed files..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.SelectLocationCommand_TT">
            <summary>
              Looks up a localized string similar to Select a location to navigate to it..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_CANCEL_BUTTON_CAPTION">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_CREATE_FOLDER_ERROR_TITLE">
            <summary>
              Looks up a localized string similar to Error while creating new folder.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_ERROR_FOLDER_DOES_NOT_EXIST">
            <summary>
              Looks up a localized string similar to Folder &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_MSG_DEVICE_NOT_READY">
            <summary>
              Looks up a localized string similar to Device is not ready..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_MSG_DEVICE_NOT_READY1">
            <summary>
              Looks up a localized string similar to Device is not ready..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_MSG_DIRECTORY_DOES_NOT_EXIST">
            <summary>
              Looks up a localized string similar to The directory &apos;{0}&apos; does not exist or cannot be accessed..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_MSG_DIRECTORY_DOES_NOT_EXIST1">
            <summary>
              Looks up a localized string similar to The directory &apos;{0}&apos; does not exist or cannot be accessed..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_MSG_ERROR_FINDING_RESOURCE">
            <summary>
              Looks up a localized string similar to Error finding requested resource..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_MSG_ERROR_FINDING_RESOURCE1">
            <summary>
              Looks up a localized string similar to Error finding requested resource..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_MSG_InvalidChar_TITLE">
            <summary>
              Looks up a localized string similar to Input Error.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_MSG_UnknownError">
            <summary>
              Looks up a localized string similar to An error occured..
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_NEW_DEFAULT_FOLDER_NAME">
            <summary>
              Looks up a localized string similar to New folder.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_NewFolder_Command">
            <summary>
              Looks up a localized string similar to New Folder.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_NewFolder_Command_TT">
            <summary>
              Looks up a localized string similar to Create a new folder in the Windows file system.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_OK_BUTTON_CAPTION">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_Rename_Command">
            <summary>
              Looks up a localized string similar to Rename.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_Rename_Command_TT">
            <summary>
              Looks up a localized string similar to Rename an item in the Windows file system.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_RenameFolderErrorTitle">
            <summary>
              Looks up a localized string similar to Error while renaming folder.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.STR_SELECT_FOLDER_DIALOG_CAPTION">
            <summary>
              Looks up a localized string similar to Select a Folder.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.ToggleIsFilteredCommand_TT">
            <summary>
              Looks up a localized string similar to Apply or remove the currently configured filter.
            </summary>
        </member>
        <member name="P:WSF.Local.Strings.ToggleIsHiddenVisibleCommand_TT">
            <summary>
              Looks up a localized string similar to Show or hide hidden files and folders..
            </summary>
        </member>
        <member name="T:WSF.Shell.Enums.GetPropertyStoreFlags">
            <summary>
            Indicate flags that modify the property store object retrieved by methods 
            that create a property store, such as IShellItem2::GetPropertyStore or 
            IPropertyStoreFactory::GetPropertyStore.
            
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb761124(v=vs.85).aspx
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.GetPropertyStoreFlags.Default">
            <summary>
            Meaning to a calling process: Return a read-only property store that contains all 
            properties. Slow items (offline files) are not opened. 
            Combination with other flags: Can be overridden by other flags.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.GetPropertyStoreFlags.HandlePropertiesOnly">
            <summary>
            Meaning to a calling process: Include only properties directly from the property
            handler, which opens the file on the disk, network, or device. Meaning to a file 
            folder: Only include properties directly from the handler.
            
            Meaning to other folders: When delegating to a file folder, pass this flag on 
            to the file folder; do not do any multiplexing (MUX). When not delegating to a 
            file folder, ignore this flag instead of returning a failure code.
            
            Combination with other flags: Cannot be combined with GPS_TEMPORARY, 
            GPS_FASTPROPERTIESONLY, or GPS_BESTEFFORT.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.GetPropertyStoreFlags.ReadWrite">
            <summary>
            Meaning to a calling process: Can write properties to the item. 
            Note: The store may contain fewer properties than a read-only store. 
            
            Meaning to a file folder: ReadWrite.
            
            Meaning to other folders: ReadWrite. Note: When using default MUX, 
            return a single unmultiplexed store because the default MUX does not support ReadWrite.
            
            Combination with other flags: Cannot be combined with GPS_TEMPORARY, GPS_FASTPROPERTIESONLY, 
            GPS_BESTEFFORT, or GPS_DELAYCREATION. Implies GPS_HANDLERPROPERTIESONLY.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.GetPropertyStoreFlags.Temporary">
            <summary>
            Meaning to a calling process: Provides a writable store, with no initial properties, 
            that exists for the lifetime of the Shell item instance; basically, a property bag 
            attached to the item instance. 
            
            Meaning to a file folder: Not applicable. Handled by the Shell item.
            
            Meaning to other folders: Not applicable. Handled by the Shell item.
            
            Combination with other flags: Cannot be combined with any other flag. Implies GPS_READWRITE
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.GetPropertyStoreFlags.FastPropertiesOnly">
            <summary>
            Meaning to a calling process: Provides a store that does not involve reading from the 
            disk or network. Note: Some values may be different, or missing, compared to a store 
            without this flag. 
            
            Meaning to a file folder: Include the "innate" and "fallback" stores only. Do not load the handler.
            
            Meaning to other folders: Include only properties that are available in memory or can 
            be computed very quickly (no properties from disk, network, or peripheral IO devices). 
            This is normally only data sources from the IDLIST. When delegating to other folders, pass this flag on to them.
            
            Combination with other flags: Cannot be combined with GPS_TEMPORARY, GPS_READWRITE, 
            GPS_HANDLERPROPERTIESONLY, or GPS_DELAYCREATION.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.GetPropertyStoreFlags.OpensLowItem">
            <summary>
            Meaning to a calling process: Open a slow item (offline file) if necessary. 
            Meaning to a file folder: Retrieve a file from offline storage, if necessary. 
            Note: Without this flag, the handler is not created for offline files.
            
            Meaning to other folders: Do not return any properties that are very slow.
            
            Combination with other flags: Cannot be combined with GPS_TEMPORARY or GPS_FASTPROPERTIESONLY.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.GetPropertyStoreFlags.DelayCreation">
            <summary>
            Meaning to a calling process: Delay memory-intensive operations, such as file access, until 
            a property is requested that requires such access. 
            
            Meaning to a file folder: Do not create the handler until needed; for example, either 
            GetCount/GetAt or GetValue, where the innate store does not satisfy the request. 
            Note: GetValue might fail due to file access problems.
            
            Meaning to other folders: If the folder has memory-intensive properties, such as 
            delegating to a file folder or network access, it can optimize performance by 
            supporting IDelayedPropertyStoreFactory and splitting up its properties into a 
            fast and a slow store. It can then use delayed MUX to recombine them.
            
            Combination with other flags: Cannot be combined with GPS_TEMPORARY or 
            GPS_READWRITE
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.GetPropertyStoreFlags.BestEffort">
            <summary>
            Meaning to a calling process: Succeed at getting the store, even if some 
            properties are not returned. Note: Some values may be different, or missing,
            compared to a store without this flag. 
            
            Meaning to a file folder: Succeed and return a store, even if the handler or 
            innate store has an error during creation. Only fail if substores fail.
            
            Meaning to other folders: Succeed on getting the store, even if some properties 
            are not returned.
            
            Combination with other flags: Cannot be combined with GPS_TEMPORARY, 
            GPS_READWRITE, or GPS_HANDLERPROPERTIESONLY.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.GetPropertyStoreFlags.MaskValid">
            <summary>
            Mask for valid GETPROPERTYSTOREFLAGS values.
            </summary>
        </member>
        <member name="T:WSF.Shell.Enums.SFGAOF">
             <summary>
             SFGAOF => ShellFileGetAttributesOptions
             Attributes that can be retrieved on an item (file or folder) or set of items.
            
             https://msdn.microsoft.com/en-us/library/windows/desktop/bb762589(v=vs.85).aspx
             </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.CanCopy">
            <summary>
            The specified items can be copied.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.CanMove">
            <summary>
            The specified items can be moved.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.CanLink">
            <summary>
            Shortcuts can be created for the specified items. This flag has the same value as DROPEFFECT. 
            The normal use of this flag is to add a Create Shortcut item to the shortcut menu that is displayed 
            during drag-and-drop operations. However, SFGAO_CANLINK also adds a Create Shortcut item to the Microsoft 
            Windows Explorer's File menu and to normal shortcut menus. 
            If this item is selected, your application's IContextMenu::InvokeCommand is invoked with the lpVerb 
            member of the CMINVOKECOMMANDINFO structure set to "link." Your application is responsible for creating the link.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.Storage">
            <summary>
            The specified items can be bound to an IStorage interface through IShellFolder::BindToObject.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.CanRename">
            <summary>
            The specified items can be renamed.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.CanDelete">
            <summary>
            The specified items can be deleted.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.HasPropertySheet">
            <summary>
            The specified items have property sheets.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.DropTarget">
            <summary>
            The specified items are drop targets.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.CapabilityMask">
            <summary>
            This flag is a mask for the capability flags.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.System">
            <summary>
            Windows 7 and later. The specified items are system items.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.Encrypted">
            <summary>
            The specified items are encrypted.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.IsSlow">
            <summary>
            Indicates that accessing the object = through IStream or other storage interfaces, 
            is a slow operation. 
            Applications should avoid accessing items flagged with SFGAO_ISSLOW.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.Ghosted">
            <summary>
            The specified items are ghosted icons.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.Link">
            <summary>
            The specified items are shortcuts.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.Share">
            <summary>
            The specified folder objects are shared.
            </summary>    
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.ReadOnly">
            <summary>
            The specified items are read-only. In the case of folders, this means 
            that new items cannot be created in those folders.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.Hidden">
            <summary>
            The item is hidden and should not be displayed unless the 
            Show hidden files and folders option is enabled in Folder Settings.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.DisplayAttributeMask">
            <summary>
            This flag is a mask for the display attributes.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.FileSystemAncestor">
            <summary>
            The specified folders contain one or more file system folders.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.Folder">
            <summary>
            The specified items are folders.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.FileSystem">
            <summary>
            The specified folders or file objects are part of the file system 
            that is, they are files, directories, or root directories).
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.HasSubFolder">
            <summary>
            The specified folders have subfolders = and are, therefore, 
            expandable in the left pane of Windows Explorer).
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.ContentsMask">
            <summary>
            This flag is a mask for the contents attributes.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.Validate">
            <summary>
            When specified as input, SFGAO_VALIDATE instructs the folder to validate that the items 
            pointed to by the contents of apidl exist. If one or more of those items do not exist, 
            IShellFolder::GetAttributesOf returns a failure code. 
            When used with the file system folder, SFGAO_VALIDATE instructs the folder to discard cached 
            properties retrieved by clients of IShellFolder2::GetDetailsEx that may 
            have accumulated for the specified items.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.Removable">
            <summary>
            The specified items are on removable media or are themselves removable devices.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.Compressed">
            <summary>
            The specified items are compressed.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.Browsable">
            <summary>
            The specified items can be browsed in place.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.Nonenumerated">
            <summary>
            The items are nonenumerated items.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.NewContent">
            <summary>
            The objects contain new content.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.CanMoniker">
            <summary>
            It is possible to create monikers for the specified file objects or folders.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.HasStorage">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.Stream">
            <summary>
            Indicates that the item has a stream associated with it that can be accessed 
            by a call to IShellFolder::BindToObject with IID_IStream in the riid parameter.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.StorageAncestor">
            <summary>
            Children of this item are accessible through IStream or IStorage. 
            Those children are flagged with SFGAO_STORAGE or SFGAO_STREAM.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.StorageCapabilityMask">
            <summary>
            This flag is a mask for the storage capability attributes.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAOF.PkeyMask">
            <summary>
            Mask used by PKEY_SFGAOFlags to remove certain values that are considered 
            to cause slow calculations or lack context. 
            Equal to SFGAO_VALIDATE | SFGAO_ISSLOW | SFGAO_HASSUBFOLDER.
            </summary>
        </member>
        <member name="T:WSF.Shell.Enums.SIGDN">
            <summary>
            Requests the form of an item's display name to retrieve through
            IShellItem::GetDisplayName
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb761140(v=vs.85).aspx
            
            and
            SHGetNameFromIDList.
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb762191(v=vs.85).aspx
            
            Different forms of an item's name can be retrieved through the item's properties,
            including those listed here. Note that not all properties are present on all items,
            so only those appropriate to the item will appear. 
            
            About SIGDN
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb762544(v=vs.85).aspx
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SIGDN.NORMALDISPLAY">
            <summary>
            Returns the display name relative to the parent folder.
            In UI this name is generally ideal for display to the user.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SIGDN.ParentRelativeParsing">
            <summary>
            Returns the parsing name relative to the parent folder.
            This name is not suitable for use in UI.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SIGDN.DesktopAbsoluteParsing">
            <summary>
            Returns the parsing name relative to the desktop.
            This name is not suitable for use in UI.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SIGDN.ParentRelativeEditing">
            <summary>
            Returns the editing name relative to the parent folder.
            In UI this name is suitable for display to the user.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SIGDN.DesktopAbsoluteEditing">
            <summary>
            Returns the editing name relative to the desktop.
            In UI this name is suitable for display to the user.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SIGDN.FileSystemPath">
            <summary>
            Returns the item's file system path, if it has one.
            
            Only items that report SFGAO_FILESYSTEM have a file system path.
            When an item does not have a file system path, a call
            to IShellItem::GetDisplayName on that item will fail.
            
            In UI this name is suitable for display to the user in some cases,
            but note that it might not be specified for all items.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SIGDN.Url">
            <summary>
            Returns the item's URL, if it has one. Some items do not have a URL,
            and in those cases a call to IShellItem::GetDisplayName will fail.
            
            This name is suitable for display to the user in some cases,
            but note that it might not be specified for all items.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SIGDN.ParentRelativeForAddressBar">
            <summary>
            Returns the path relative to the parent folder in a friendly format as
            displayed in an address bar. This name is suitable for display to the user.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SIGDN.ParentRelative">
            <summary>
            Returns the path relative to the parent folder.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SIGDN.ParentRelativeForUI">
            <summary>
            Introduced in Windows 8.
            </summary>
        </member>
        <member name="T:WSF.Shell.Enums.SICHINTF">
            <summary>
            Used to determine how to compare two Shell items.
            IShellItem::Compare uses this enumerated type.
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb761136(v=vs.85).aspx
            
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb762543(v=vs.85).aspx
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SICHINTF.SICHINT_DISPLAY">
            <summary>
            This relates to the iOrder parameter of the IShellItem::Compare interface
            and indicates that the comparison is based on the display in a folder view.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SICHINTF.SICHINT_ALLFIELDS">
            <summary>
            Exact comparison of two instances of a Shell item.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SICHINTF.SICHINT_CANONICAL">
            <summary>
            This relates to the iOrder parameter of the IShellItem::Compare interface and
            indicates that the comparison is based on a canonical name.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SICHINTF.SICHINT_TEST_FILESYSPATH_IF_NOT_EQUAL">
            <summary>
            Windows 7 and later. If the Shell items are not the same, test the file system paths.
            </summary>
        </member>
        <member name="T:WSF.Shell.Enums.HRESULT">
            <summary>
            The following HRESULT values are the most common.
            More values are contained in the header file Winerror.h.
            
            https://msdn.microsoft.com/de-de/library/windows/desktop/aa378137(v=vs.85).aspx
            </summary>
            <summary>
            HRESULT Wrapper
            </summary>    
        </member>
        <member name="F:WSF.Shell.Enums.HRESULT.S_OK">
            <summary>     
            S_OK          
            </summary>    
        </member>
        <member name="F:WSF.Shell.Enums.HRESULT.False">
            <summary>
            S_FALSE
            </summary>        
        </member>
        <member name="F:WSF.Shell.Enums.HRESULT.InvalidArguments">
            <summary>
            E_INVALIDARG
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.HRESULT.OutOfMemory">
            <summary>
            E_OUTOFMEMORY
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.HRESULT.NoInterface">
            <summary>
            E_NOINTERFACE
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.HRESULT.Fail">
            <summary>
            E_FAIL
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.HRESULT.ElementNotFound">
            <summary>
            E_ELEMENTNOTFOUND
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.HRESULT.TypeElementNotFound">
            <summary>
            TYPE_E_ELEMENTNOTFOUND
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.HRESULT.NoObject">
            <summary>
            NO_OBJECT
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.HRESULT.Win32ErrorCanceled">
            <summary>
            Win32 Error code: ERROR_CANCELLED
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.HRESULT.Canceled">
            <summary>
            ERROR_CANCELLED
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.HRESULT.ResourceInUse">
            <summary>
            The requested resource is in use
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.HRESULT.AccessDenied">
            <summary>
            The requested resources is read-only.
            </summary>
        </member>
        <member name="T:WSF.Shell.Enums.KNOWN_FOLDER_FLAG">
            <summary>
            Specify special retrieval options for known folders.
            These values supersede CSIDL values, which have parallel meanings.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.KNOWN_FOLDER_FLAG.KF_NO_FLAGS">
            <summary>
            Retrieve folder with default options.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.KNOWN_FOLDER_FLAG.KF_FLAG_SIMPLE_IDLIST">
            <summary>
            Build a simple IDList (PIDL) This value can be used when you want to retrieve the file system path
            but do not specify this value if you are retrieving the localized display name of the folder
            because it might not resolve correctly.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.KNOWN_FOLDER_FLAG.KF_FLAG_NOT_PARENT_RELATIVE">
            <summary>
            Gets the folder's default path independent of the current location of its parent. KF_FLAG_DEFAULT_PATH must also be set.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.KNOWN_FOLDER_FLAG.KF_FLAG_DEFAULT_PATH">
            <summary>
            Gets the default path for a known folder. If this flag is not set, the function retrieves the current—and possibly redirected—path of the folder. The execution of this flag includes a verification of the folder's existence unless KF_FLAG_DONT_VERIFY is set.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.KNOWN_FOLDER_FLAG.KF_FLAG_INIT">
            <summary>
            Initializes the folder using its Desktop.ini settings. If the folder cannot be initialized, the function returns a failure code and no path is returned. This flag should always be combined with KF_FLAG_CREATE.
            If the folder is located on a network, the function might take a longer time to execute.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.KNOWN_FOLDER_FLAG.KF_FLAG_NO_ALIAS">
            <summary>
            Gets the true system path for the folder, free of any aliased placeholders such as %USERPROFILE%, returned by SHGetKnownFolderIDList and IKnownFolder::GetIDList. This flag has no effect on paths returned by SHGetKnownFolderPath and IKnownFolder::GetPath. By default, known folder retrieval functions and methods return the aliased path if an alias exists.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.KNOWN_FOLDER_FLAG.KF_FLAG_DONT_UNEXPAND">
            <summary>
            Stores the full path in the registry without using environment strings. If this flag is not set, portions of the path may be represented by environment strings such as %USERPROFILE%. This flag can only be used with SHSetKnownFolderPath and IKnownFolder::SetPath.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.KNOWN_FOLDER_FLAG.KF_FLAG_DONT_VERIFY">
            <summary>
            Do not verify the folder's existence before attempting to retrieve the path or IDList. If this flag is not set, an attempt is made to verify that the folder is truly present at the path. If that verification fails due to the folder being absent or inaccessible, the function returns a failure code and no path is returned.
            If the folder is located on a network, the function might take a longer time to execute. Setting this flag can reduce that lag time.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.KNOWN_FOLDER_FLAG.KF_FLAG_CREATE">
            <summary>
            Forces the creation of the specified folder if that folder does not already exist.
            The security provisions predefined for that folder are applied. If the folder does
            not exist and cannot be created, the function returns a failure code and no path is
            returned. This value can be used only with the following functions and methods:
            
            SHGetKnownFolderPath
            SHGetKnownFolderIDList
            IKnownFolder::GetIDList
            IKnownFolder::GetPath
            IKnownFolder::GetShellItem
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.KNOWN_FOLDER_FLAG.KF_FLAG_NO_APPCONTAINER_REDIRECTION">
            <summary>
            Introduced in Windows 7: When running inside an app container, or when providing an app container token, this flag prevents redirection to app container folders. Instead, it retrieves the path that would be returned where it not running inside an app container.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.KNOWN_FOLDER_FLAG.KF_FLAG_ALIAS_ONLY">
            <summary>
            Introduced in Windows 7. Return only aliased PIDLs. Do not use the file system path.
            </summary>
        </member>
        <member name="T:WSF.Shell.Enums.SEE">
            <summary>
            Flags that indicate the content and validity of the other structure members; a combination of the following values:
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_DEFAULT">
            <summary>
            Use default values.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_CLASSNAME">
            <summary>
            Use the class name given by the lpClass member. If both SEE_MASK_CLASSKEY and SEE_MASK_CLASSNAME are set, the class key is used.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_CLASSKEY">
            <summary>
            Use the class key given by the hkeyClass member. If both SEE_MASK_CLASSKEY and SEE_MASK_CLASSNAME are set, the class key is used.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_IDLIST">
            <summary>
            Use the item identifier list given by the lpIDList member. The lpIDList member must point to an ITEMIDLIST structure.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_INVOKEIDLIST">
            <summary>
            Use the IContextMenu interface of the selected item's shortcut menu handler. Use either lpFile to identify the item by its file system path or lpIDList to identify the item by its PIDL. This flag allows applications to use ShellExecuteEx to invoke verbs from shortcut menu extensions instead of the static verbs listed in the registry.
            Note SEE_MASK_INVOKEIDLIST overrides and implies SEE_MASK_IDLIST.
             </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_ICON">
            <summary>
            Use the icon given by the hIcon member. This flag cannot be combined with SEE_MASK_HMONITOR.
            Note This flag is used only in Windows XP and earlier. It is ignored as of Windows Vista.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_HOTKEY">
            <summary>
            Use the keyboard shortcut given by the dwHotKey member.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_NOCLOSEPROCESS">
            <summary>
            Use to indicate that the hProcess member receives the process handle. This handle is typically used to allow an application to find out when a process created with ShellExecuteEx terminates. In some cases, such as when execution is satisfied through a DDE conversation, no handle will be returned. The calling application is responsible for closing the handle when it is no longer needed.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_CONNECTNETDRV">
            <summary>
            Validate the share and connect to a drive letter. This enables reconnection of disconnected network drives. The lpFile member is a UNC path of a file on a network.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_NOASYNC">
            <summary>
            Wait for the execute operation to complete before returning. This flag should be used by callers that are using ShellExecute forms that might result in an async activation, for example DDE, and create a process that might be run on a background thread. (Note: ShellExecuteEx runs on a background thread by default if the caller's threading model is not Apartment., Calls to ShellExecuteEx from processes already running on background threads should always pass this flag. Also, applications that exit immediately after calling ShellExecuteEx should specify this flag.
            If the execute operation is performed on a background thread and the caller did not specify the SEE_MASK_ASYNCOK flag, then the calling thread waits until the new process has started before returning. This typically means that either CreateProcess has been called, the DDE communication has completed, or that the custom execution delegate has notified ShellExecuteEx that it is done. If the SEE_MASK_WAITFORINPUTIDLE flag is specified, then ShellExecuteEx calls WaitForInputIdle and waits for the new process to idle before returning, with a maximum timeout of 1 minute.
            For further discussion on when this flag is necessary, see the Remarks section.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_FLAG_DDEWAIT">
            <summary>
            Do not use; use SEE_MASK_NOASYNC instead.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_DOENVSUBST">
            <summary>
            Expand any environment variables specified in the string given by the lpDirectory or lpFile member.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_FLAG_NO_UI">
            <summary>
            Do not display an error message box if an error occurs.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_UNICODE">
            <summary>
            Use this flag to indicate a Unicode application.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_NO_CONSOLE">
            <summary>
            Use to inherit the parent's console for the new process instead of having it create a new console. It is the opposite of using a CREATE_NEW_CONSOLE flag with CreateProcess.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_ASYNCOK">
            <summary>
            The execution can be performed on a background thread and the call should return immediately without waiting for the background thread to finish. Note that in certain cases ShellExecuteEx ignores this flag and waits for the process to finish before returning.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_NOQUERYCLASSSTORE">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_HMONITOR">
            <summary>
            Use this flag when specifying a monitor on multi-monitor systems. The monitor is specified in the hMonitor member. This flag cannot be combined with SEE_MASK_ICON.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_NOZONECHECKS">
            <summary>
            Introduced in Windows XP. Do not perform a zone check. This flag allows ShellExecuteEx to bypass zone checking put into place by IAttachmentExecute.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_WAITFORINPUTIDLE">
            <summary>
            After the new process is created, wait for the process to become idle before returning, with a one minute timeout. See WaitForInputIdle for more details.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_FLAG_LOG_USAGE">
            <summary>
            Introduced in Windows XP. Keep track of the number of times this application has been launched. Applications with sufficiently high counts appear in the Start Menu's list of most frequently used programs.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SEE.SEE_MASK_FLAG_HINST_IS_SITE">
            <summary>
            Introduced in Windows 8. The hInstApp member is used to specify the IUnknown of the object that will be used as a site pointer. The site pointer is used to provide services to the ShellExecute function, the handler binding process, and invoked verb handlers.
            </summary>
        </member>
        <member name="T:WSF.Shell.Enums.SFGAO">
            <summary>
            Flags for IShellFolder::GetAttributesOf.
            Attributes that can be retrieved on an item (file or folder) or set of items.
            
            https://docs.microsoft.com/en-us/windows/desktop/shell/sfgao
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_CANCOPY">
            <summary>
            Objects can be copied  (DROPEFFECT_COPY)
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_CANMOVE">
            <summary>
            Objects can be moved   (DROPEFFECT_MOVE)
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_CANLINK">
            <summary>
            Objects can be linked  (DROPEFFECT_LINK)
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_STORAGE">
            <summary>
            Supports BindToObject(IID_IStorage)
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_CANRENAME">
            <summary>
            Objects can be renamed
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_CANDELETE">
            <summary>
            Objects can be deleted
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_HASPROPSHEET">
            <summary>
             Objects have property sheets
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_DROPTARGET">
            <summary>
            Objects are drop target
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_CAPABILITYMASK">
            <summary>
            Mask for capabilities.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_ENCRYPTED">
            <summary>
            Object is encrypted (use alt color)
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_ISSLOW">
            <summary>
            'Slow' object
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_GHOSTED">
            <summary>
            Ghosted icon
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_LINK">
            <summary>
            Shortcut (link)
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_SHARE">
            <summary>
            Shared
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_READONLY">
            <summary>
            Read-only
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_HIDDEN">
            <summary>
            Hidden object
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_DISPLAYATTRMASK">
            <summary>
            Display attribute mask.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_FILESYSANCESTOR">
            <summary>
             May contain children with SFGAO_FILESYSTEM
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_FOLDER">
            <summary>
            Support BindToObject(IID_IShellFolder)
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_FILESYSTEM">
            <summary>
            Is a win32 file system object (file/folder/root)
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_HASSUBFOLDER">
            <summary>
            May contain children with SFGAO_FOLDER
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_CONTENTSMASK">
            <summary>
            Contents mask.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_VALIDATE">
            <summary>
            Invalidate cached information
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_REMOVABLE">
            <summary>
            Is this removeable media?
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_COMPRESSED">
            <summary>
            Object is compressed (use alt color)
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_BROWSABLE">
            <summary>
            Supports IShellFolder, but only implements CreateViewObject() (non-folder view)
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_NONENUMERATED">
            <summary>
             Is a non-enumerated object
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_NEWCONTENT">
            <summary>
            Should show bold in explorer tree
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_CANMONIKER">
            <summary>
            Defunct
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_HASSTORAGE">
            <summary>
            Defunct
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_STREAM">
            <summary>
            Supports BindToObject(IID_IStream)
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_STORAGEANCESTOR">
            <summary>
            May contain children with SFGAO_STORAGE or SFGAO_STREAM
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SFGAO.SFGAO_STORAGECAPMASK">
            <summary>
            For determining storage capabilities, ie for open/save semantics
            </summary>
        </member>
        <member name="T:WSF.Shell.Enums.SHCOLSTATEF">
            <summary>
            A pointer to a value that contains flags that indicate the default column state.
            This parameter can include a combination of the following flags.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_DEFAULT">
            <summary>
            The value is displayed according to default value for the column.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_TYPE_STR">
            <summary>
            A string.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_TYPE_INT">
            <summary>
            An integer.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_TYPE_DATE">
            <summary>
            A date.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_ONBYDEFAULT">
            <summary>
            Should be shown by default in the Windows Explorer Details view.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_SLOW">
            <summary>
            Recommends that the folder view extract column information asynchronously, on a background thread, because extracting this information can be time consuming.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_EXTENDED">
            <summary>
            Provided by a handler, not the folder object.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_SECONDARYUI">
            <summary>
            Not displayed in the shortcut menu, but listed in the More dialog box.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_HIDDEN">
            <summary>
            Not displayed in the user interface.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_PREFER_VARCMP">
            <summary>
            Uses default sorting rather than CompareIDs to get the sort order.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_PREFER_FMTCMP">
            <summary>
            
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_NOSORTBYFOLDERNESS">
            <summary>
            
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_VIEWONLY">
            <summary>
            
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_BATCHREAD">
            <summary>
            
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_NO_GROUPBY">
            <summary>
            
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_FIXED_WIDTH">
            <summary>
            
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_NODPISCALE">
            <summary>
            
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCOLSTATEF.SHCOLSTATE_FIXED_RATIO">
            <summary>
            
            </summary>
        </member>
        <member name="T:WSF.Shell.Enums.SHCONTF">
            <summary>
            Determines the types of items included in an enumeration. These values are used with the IShellFolder::EnumObjects method.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCONTF.CHECKING_FOR_CHILDREN">
            <summary>
            Windows 7 and later. The calling application is checking for the existence of child items in the folder.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCONTF.FOLDERS">
            <summary>
            Include items that are folders in the enumeration.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCONTF.NONFOLDERS">
            <summary>
            Include items that are not folders in the enumeration.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCONTF.INCLUDEHIDDEN">
            <summary>
            Include hidden items in the enumeration. This does not include hidden system items. (To include hidden system items, use SHCONTF_INCLUDESUPERHIDDEN.)
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCONTF.INIT_ON_FIRST_NEXT">
            <summary>
            No longer used; always assumed. IShellFolder::EnumObjects can return without validating the enumeration object. Validation can be postponed until the first call to IEnumIDList::Next. Use this flag when a user interface might be displayed prior to the first IEnumIDList::Next call. For a user interface to be presented, hwnd must be set to a valid window handle.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCONTF.NETPRINTERSRCH">
            <summary>
            The calling application is looking for printer objects.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCONTF.SHAREABLE">
            <summary>
            The calling application is looking for resources that can be shared.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCONTF.STORAGE">
            <summary>
            Include items with accessible storage and their ancestors, including hidden items.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCONTF.NAVIGATION_ENUM">
            <summary>
            Windows 7 and later. Child folders should provide a navigation enumeration.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCONTF.FASTITEMS">
            <summary>
            Windows Vista and later. The calling application is looking for resources that
            can be enumerated quickly.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCONTF.FLATLIST">
            <summary>
            Windows Vista and later. Enumerate items as a simple list even if the folder
            itself is not structured in that way.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCONTF.ENABLE_ASYNC">
            <summary>
            Windows Vista and later. The calling application is monitoring for change notifications.
            This means that the enumerator does not have to return all results. Items can be reported
            through change notifications.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHCONTF.INCLUDESUPERHIDDEN">
            <summary>
            Windows 7 and later. Include hidden system items in the enumeration.
            This value does not include hidden non-system items.
            (To include hidden non-system items, use <see cref="F:WSF.Shell.Enums.SHCONTF.INCLUDEHIDDEN"/>.)
            </summary>
        </member>
        <member name="T:WSF.Shell.Enums.SHGDNF">
            <summary>
            Defines the values used with the IShellFolder::GetDisplayNameOf and IShellFolder::SetNameOf methods to specify the type of file or folder names used by those methods.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGDNF.SHGDN_NORMAL">
            <summary>
            When not combined with another flag, return the parent-relative name that identifies the item, suitable for displaying to the user. This name often does not include extra information such as the file name extension and does not need to be unique. This name might include information that identifies the folder that contains the item. For instance, this flag could cause IShellFolder::GetDisplayNameOf to return the string "username (on Machine)" for a particular user's folder.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGDNF.SHGDN_INFOLDER">
            <summary>
            The name is relative to the folder from which the request was made. This is the name display to the user when used in the context of the folder. For example, it is used in the view and in the address bar path segment for the folder. This name should not include disambiguation information—for instance "username" instead of "username (on Machine)" for a particular user's folder.
            Use this flag in combinations with SHGDN_FORPARSING and SHGDN_FOREDITING.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGDNF.SHGDN_FOREDITING">
            <summary>
            The name is used for in-place editing when the user renames the item.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGDNF.SHGDN_FORADDRESSBAR">
            <summary>
            The name is displayed in an address bar combo box.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGDNF.SHGDN_FORPARSING">
            <summary>
            The name is used for parsing. That is, it can be passed to IShellFolder::ParseDisplayName to recover the object's PIDL. The form this name takes depends on the particular object. When SHGDN_FORPARSING is used alone, the name is relative to the desktop. When combined with SHGDN_INFOLDER, the name is relative to the folder from which the request was made.
            </summary>
        </member>
        <member name="T:WSF.Shell.Enums.SHGFI">
            <summary>
            The flags that specify the file information to retrieve.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_ICON">
            <summary>
            Retrieve the handle to the icon that represents the file and the index of the icon within the system image list. The handle is copied to the hIcon member of the structure specified by psfi, and the index is copied to the iIcon member.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_DISPLAYNAME">
            <summary>
            Retrieve the display name for the file. The name is copied to the szDisplayName member of the structure specified in psfi. The returned display name uses the long file name, if there is one, rather than the 8.3 form of the file name.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_TYPENAME">
            <summary>
            Retrieve the string that describes the file's type. The string is copied to the szTypeName member of the structure specified in psfi.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_ATTRIBUTES">
            <summary>
            Retrieve the item attributes. The attributes are copied to the dwAttributes member of the structure specified in the psfi parameter. These are the same attributes that are obtained from IShellFolder::GetAttributesOf.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_ICONLOCATION">
            <summary>
            Retrieve the name of the file that contains the icon representing the file specified by pszPath, as returned by the IExtractIcon::GetIconLocation method of the file's icon handler. Also retrieve the icon index within that file. The name of the file containing the icon is copied to the szDisplayName member of the structure specified by psfi. The icon's index is copied to that structure's iIcon member.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_EXETYPE">
            <summary>
            Retrieve the type of the executable file if pszPath identifies an executable file. The information is packed into the return value. This flag cannot be specified with any other flags.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_SYSICONINDEX">
            <summary>
            Retrieve the index of a system image list icon. If successful, the index is copied to the iIcon member of psfi. The return value is a handle to the system image list. Only those images whose indices are successfully copied to iIcon are valid. Attempting to access other images in the system image list will result in undefined behavior.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_LINKOVERLAY">
            <summary>
            Modify SHGFI_ICON, causing the function to add the link overlay to the file's icon. The SHGFI_ICON flag must also be set.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_SELECTED">
            <summary>
            Modify SHGFI_ICON, causing the function to blend the file's icon with the system highlight color. The SHGFI_ICON flag must also be set.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_ATTR_SPECIFIED">
            <summary>
            Modify SHGFI_ATTRIBUTES to indicate that the dwAttributes member of the SHFILEINFO structure at psfi contains the specific attributes that are desired. These attributes are passed to IShellFolder::GetAttributesOf. If this flag is not specified, 0xFFFFFFFF is passed to IShellFolder::GetAttributesOf, requesting all attributes. This flag cannot be specified with the SHGFI_ICON flag.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_LARGEICON">
            <summary>
            Modify SHGFI_ICON, causing the function to retrieve the file's large icon. The SHGFI_ICON flag must also be set.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_SMALLICON">
            <summary>
            Modify SHGFI_ICON, causing the function to retrieve the file's small icon. Also used to modify SHGFI_SYSICONINDEX, causing the function to return the handle to the system image list that contains small icon images. The SHGFI_ICON and/or SHGFI_SYSICONINDEX flag must also be set.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_OPENICON">
            <summary>
            Modify SHGFI_ICON, causing the function to retrieve the file's open icon. Also used to modify SHGFI_SYSICONINDEX, causing the function to return the handle to the system image list that contains the file's small open icon. A container object displays an open icon to indicate that the container is open. The SHGFI_ICON and/or SHGFI_SYSICONINDEX flag must also be set.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_SHELLICONSIZE">
            <summary>
            Modify SHGFI_ICON, causing the function to retrieve a Shell-sized icon. If this flag is not specified the function sizes the icon according to the system metric values. The SHGFI_ICON flag must also be set.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_PIDL">
            <summary>
            Indicate that pszPath is the address of an ITEMIDLIST structure rather than a path name.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_USEFILEATTRIBUTES">
            <summary>
            Indicates that the function should not attempt to access the file specified by pszPath. Rather, it should act as if the file specified by pszPath exists with the file attributes passed in dwFileAttributes. This flag cannot be combined with the SHGFI_ATTRIBUTES, SHGFI_EXETYPE, or SHGFI_PIDL flags.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_ADDOVERLAYS">
            <summary>
            Version 5.0. Apply the appropriate overlays to the file's icon. The SHGFI_ICON flag must also be set.
            </summary>
        </member>
        <member name="F:WSF.Shell.Enums.SHGFI.SHGFI_OVERLAYINDEX">
            <summary>
            Version 5.0. Return the index of the overlay icon. The value of the overlay index is returned in the upper eight bits of the iIcon member of the structure specified by psfi. This flag requires that the SHGFI_ICON be set as well.
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.Dlls.CoreNativeMethods">
            <summary>
            Wrappers for Native Methods and Structs.
            This type is intended for internal use only
            </summary>    
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.CoreNativeMethods.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            Sends the specified message to a window or windows. The SendMessage function calls 
            the window procedure for the specified window and does not return until the window 
            procedure has processed the message. 
            </summary>
            <param name="windowHandle">Handle to the window whose window procedure will receive the message. 
            If this parameter is HWND_BROADCAST, the message is sent to all top-level windows in the system, 
            including disabled or invisible unowned windows, overlapped windows, and pop-up windows; 
            but the message is not sent to child windows.
            </param>
            <param name="message">Specifies the message to be sent.</param>
            <param name="wparam">Specifies additional message-specific information.</param>
            <param name="lparam">Specifies additional message-specific information.</param>
            <returns>A return code specific to the message being sent.</returns>        
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.CoreNativeMethods.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.String)">
            <summary>
            Sends the specified message to a window or windows. The SendMessage function calls 
            the window procedure for the specified window and does not return until the window 
            procedure has processed the message. 
            </summary>
            <param name="windowHandle">Handle to the window whose window procedure will receive the message. 
            If this parameter is HWND_BROADCAST, the message is sent to all top-level windows in the system, 
            including disabled or invisible unowned windows, overlapped windows, and pop-up windows; 
            but the message is not sent to child windows.
            </param>
            <param name="message">Specifies the message to be sent.</param>
            <param name="wparam">Specifies additional message-specific information.</param>
            <param name="lparam">Specifies additional message-specific information.</param>
            <returns>A return code specific to the message being sent.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.CoreNativeMethods.SendMessage(System.IntPtr,System.UInt32,System.Int32,System.String)">
            <summary>
            Sends the specified message to a window or windows. The SendMessage function calls 
            the window procedure for the specified window and does not return until the window 
            procedure has processed the message. 
            </summary>
            <param name="windowHandle">Handle to the window whose window procedure will receive the message. 
            If this parameter is HWND_BROADCAST, the message is sent to all top-level windows in the system, 
            including disabled or invisible unowned windows, overlapped windows, and pop-up windows; 
            but the message is not sent to child windows.
            </param>
            <param name="message">Specifies the message to be sent.</param>
            <param name="wparam">Specifies additional message-specific information.</param>
            <param name="lparam">Specifies additional message-specific information.</param>
            <returns>A return code specific to the message being sent.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.CoreNativeMethods.SendMessage(System.IntPtr,System.UInt32,System.Int32@,System.Text.StringBuilder)">
            <summary>
            Sends the specified message to a window or windows. The SendMessage function calls 
            the window procedure for the specified window and does not return until the window 
            procedure has processed the message. 
            </summary>
            <param name="windowHandle">Handle to the window whose window procedure will receive the message. 
            If this parameter is HWND_BROADCAST, the message is sent to all top-level windows in the system, 
            including disabled or invisible unowned windows, overlapped windows, and pop-up windows; 
            but the message is not sent to child windows.
            </param>
            <param name="message">Specifies the message to be sent.</param>
            <param name="wparam">Specifies additional message-specific information.</param>
            <param name="lparam">Specifies additional message-specific information.</param>
            <returns>A return code specific to the message being sent.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.CoreNativeMethods.DestroyIcon(System.IntPtr)">
            <summary>
            Destroys an icon and frees any memory the icon occupied.
            </summary>
            <param name="hIcon">Handle to the icon to be destroyed. The icon must not be in use. </param>
            <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call GetLastError. </returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.CoreNativeMethods.GetHiWord(System.Int64,System.Int32)">
            <summary>
            Gets the HiWord
            </summary>
            <param name="value">The value to get the hi word from.</param>
            <param name="size">Size</param>
            <returns>The upper half of the dword.</returns>        
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.CoreNativeMethods.GetLoWord(System.Int64)">
            <summary>
            Gets the LoWord
            </summary>
            <param name="value">The value to get the low word from.</param>
            <returns>The lower half of the dword.</returns>
        </member>
        <member name="T:WSF.Shell.Interop.Dlls.CoreNativeMethods.Size">
            <summary>
            A Wrapper for a SIZE struct
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Dlls.CoreNativeMethods.Size.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Dlls.CoreNativeMethods.Size.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.Dlls.NativeMethods">
            <summary>
            Methods imported from Shell32.dll.
            
            Shell32.DLL Versions:
            <see href = "https://msdn.microsoft.com/en-us/library/windows/desktop/bb776779(v=vs.85).aspx"/>
            </summary>
            <summary>
            Methods imported from Shlwapi.dll.
            
            Shlwapi.DLL Versions:
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb776779(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.DestroyIcon(System.IntPtr)">
            <summary>
            Destroys an icon and frees any memory the icon occupied.
            </summary>
            <param name="hIcon">Handle to the icon to be destroyed. The icon must not be in use. </param>
            <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call GetLastError. </returns>
        </member>
        <member name="F:WSF.Shell.Interop.Dlls.NativeMethods.MAX_PATH">
            <summary>
            Defines the maximum support string length path for a valid path below .Net 4.7.2.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.ShellExecuteEx(WSF.Shell.Interop.SHELLEXECUTEINFO@)">
            <summary>
            Performs an operation on a specified file.
            </summary>
            <param name="pExecInfo">A pointer to a SHELLEXECUTEINFO structure that contains and receives information about the application being executed.</param>
            <returns>Returns TRUE if successful; otherwise, FALSE. Call GetLastError for extended error information.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.SHGetKnownFolderIDList(System.Guid,WSF.Shell.Enums.KNOWN_FOLDER_FLAG,System.IntPtr,System.IntPtr@)">
            <summary>
            Retrieves the path of a known folder as an ITEMIDLIST structure.
            </summary>
            <param name="rfid">A reference to the KNOWNFOLDERID that identifies the folder. The folders associated with the known folder IDs might not exist on a particular system.</param>
            <param name="dwFlags">Flags that specify special retrieval options. This value can be 0; otherwise, it is one or more of the KNOWN_FOLDER_FLAG values.</param>
            <param name="hToken">An access token used to represent a particular user. This parameter is usually set to NULL, in which case the function tries to access the current user's instance of the folder.</param>
            <param name="ppidl">When this method returns, contains a pointer to the PIDL of the folder. This parameter is passed uninitialized. The caller is responsible for freeing the returned PIDL when it is no longer needed by calling ILFree.</param>
            <returns>Returns S_OK if successful, or an error value otherwise, including the following:</returns>
            <remarks>See also IKnownFolderNative.GetIDList</remarks>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.SHGetKnownFolderPath(System.Guid,WSF.Shell.Enums.KNOWN_FOLDER_FLAG,System.IntPtr,System.IntPtr@)">
            <summary>
            Retrieves the full path of a known folder identified by the folder's KNOWNFOLDERID.
            </summary>
            <param name="rfid">A reference to the KNOWNFOLDERID that identifies the folder. The folders associated with the known folder IDs might not exist on a particular system.</param>
            <param name="dwFlags">Flags that specify special retrieval options. This value can be 0; otherwise, it is one or more of the KNOWN_FOLDER_FLAG values.</param>
            <param name="hToken">An access token used to represent a particular user. This parameter is usually set to NULL, in which case the function tries to access the current user's instance of the folder.</param>
            <param name="pszPath">When this method returns, contains the address of a pointer to a null-terminated Unicode string that specifies the path of the known folder. The calling process is responsible for freeing this resource once it is no longer needed by calling CoTaskMemFree. The returned path does not include a trailing backslash. For example, "C:\Users" is returned rather than "C:\Users\".</param>
            <returns>Returns S_OK if successful, or an error value otherwise, including the following:</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.ILFree(System.IntPtr)">
            <summary>
            Frees an ITEMIDLIST structure allocated by the Shell.
            </summary>
            <param name="pidl">A pointer to the ITEMIDLIST structure to be freed. This parameter can be NULL.</param>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.SHParseDisplayName(System.String,System.IntPtr,System.IntPtr@,WSF.Shell.Enums.SFGAOF,WSF.Shell.Enums.SFGAOF@)">
            <summary>
            Translates a Shell namespace object's display name into an item identifier list and
            returns the attributes of the object. This function is the preferred method to convert
            a string to a pointer to an item identifier list (PIDL).
            </summary>
            <param name="pszName">Type: LPCWSTR
            A pointer to a zero-terminated wide string that contains the display name to parse.</param>
            <param name="pbc">Type: IBindCtx*
            A bind context that controls the parsing operation. This parameter is normally set to NULL.</param>
            <param name="ppidl">Type: PIDLIST_ABSOLUTE*
            The address of a pointer to a variable of type ITEMIDLIST that receives the item identifier list for the object.
            If an error occurs, then this parameter is set to NULL.
            The caller is responsible for freeing the returned PIDL when it is no longer needed by calling ILFree.</param>
            <param name="sfgaoIn">Type: SFGAOF
            A ULONG value that specifies the attributes to query. To query for one or more attributes,
            initialize this parameter with the flags that represent the attributes of interest.
            For a list of available SFGAO flags, see IShellFolder::GetAttributesOf.</param>
            <param name="psfgaoOut">Type: SFGAOF*
            A pointer to a ULONG. On return, those attributes that are true for the object and were requested in sfgaoIn are set.
            An object's attribute flags can be zero or a combination of SFGAO flags. For a list of available SFGAO flags, see IShellFolder::GetAttributesOf.</param>
            <returns>If this function succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <remarks>You should call this function from a background thread. Failure to do so could cause the UI to stop responding.</remarks>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.SHCreateItemFromIDList(System.IntPtr,System.Guid,System.IntPtr@)">
            <summary>
            Creates and initializes a Shell item object from a pointer to
            an item identifier list (PIDL). The resulting shell item object
            can support, for example, the IShellItem interface.
            
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb762133(v=vs.85).aspx
            </summary>
            <param name="pidl">
            Type: PCIDLIST_ABSOLUTE
            The source PIDL.</param>
            <param name="riid">
            Type: REFIID (Guid)
            A reference to the IID of the requested interface.
            </param>
            <param name="ppv"></param>
            <returns>When this function returns, contains the interface pointer
            requested in riid. This will typically be IShellItem or IShellItem2.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.SHGetDesktopFolder(System.IntPtr@)">
            <summary>
            Retrieves the IShellFolder interface for the desktop folder, which is the root of the Shell's namespace.
            </summary>
            <param name="ppshf">When this method returns, receives an IShellFolder interface pointer for the desktop folder.
            The calling application is responsible for eventually freeing the interface by calling its IUnknown::Release method.</param>
            <returns>If this function succeeds, it returns S_OK. Otherwise,
            it returns an HRESULT error code.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.SHGetPathFromIDList(System.IntPtr,System.Text.StringBuilder)">
            <summary>
            Converts an item identifier list to a file system path.
            </summary>
            <param name="pidl">The address of an item identifier list that specifies a file or directory location relative to the root of the namespace (the desktop).</param>
            <param name="pszPath">The address of a buffer to receive the file system path. This buffer must be at least MAX_PATH characters in size.</param>
            <returns>Returns TRUE if successful; otherwise, FALSE.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.SHStrDup(System.String,System.IntPtr@)">
            <summary>
            Makes a copy of a string in newly allocated memory.
            </summary>
            <param name="pszSource">A pointer to the null-terminated string to be copied.</param>
            <param name="ppwsz">A pointer to an allocated Unicode string that contains the result. SHStrDup allocates memory for this string with CoTaskMemAlloc. You should free the string with CoTaskMemFree when it is no longer needed. In the case of failure, this value is NULL.</param>
            <returns>Returns S_OK if successful, or a COM error value otherwise.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.ILIsEqual(System.IntPtr,System.IntPtr)">
            <summary>
            Tests whether two ITEMIDLIST structures are equal in a binary comparison.
            </summary>
            <param name="pidl1">The first ITEMIDLIST structure.</param>
            <param name="pidl2">The second ITEMIDLIST structure.</param>
            <returns>Returns TRUE if the two structures are equal, FALSE otherwise.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.ILCombine(System.IntPtr,System.IntPtr)">
            <summary>
            Combines two ITEMIDLIST structures.
            </summary>
            <param name="pidl1">A pointer to the first ITEMIDLIST structure.</param>
            <param name="pidl2">A pointer to the second ITEMIDLIST structure. This structure is appended to the structure pointed to by pidl1.</param>
            <returns>Returns an ITEMIDLIST containing the combined structures. If you set either pidl1 or pidl2 to NULL, the returned ITEMIDLIST structure is a clone of the non-NULL parameter.
            Returns NULL if pidl1 and pidl2 are both set to NULL.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.ILClone(System.IntPtr)">
            <summary>
            Clones an ITEMIDLIST structure.
            </summary>
            <param name="pidl">A pointer to the ITEMIDLIST structure to be cloned.</param>
            <returns>Returns a pointer to a copy of the ITEMIDLIST structure pointed to by pidl.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.SHGetFileInfo(System.String,System.UInt32,WSF.Shell.Interop.SHFILEINFO@,System.UInt32,WSF.Shell.Enums.SHGFI)">
            <summary>
            Retrieves information about an object in the file system, such as a file, folder, directory, or drive root.
            </summary>
            <param name="pszPath">A pointer to a null-terminated string of maximum length MAX_PATH that contains the path and file name. Both absolute and relative paths are valid.
            If the uFlags parameter includes the SHGFI_PIDL flag, this parameter must be the address of an ITEMIDLIST (PIDL) structure that contains the list of item identifiers that uniquely identifies the file within the Shell's namespace. The PIDL must be a fully qualified PIDL. Relative PIDLs are not allowed.
            If the uFlags parameter includes the SHGFI_USEFILEATTRIBUTES flag, this parameter does not have to be a valid file name. The function will proceed as if the file exists with the specified name and with the file attributes passed in the dwFileAttributes parameter. This allows you to obtain information about a file type by passing just the extension for pszPath and passing FILE_ATTRIBUTE_NORMAL in dwFileAttributes.
            This string can use either short (the 8.3 form) or long file names.</param>
            <param name="dwFileAttribs">A combination of one or more file attribute flags (FILE_ATTRIBUTE_ values as defined in Winnt.h). If uFlags does not include the SHGFI_USEFILEATTRIBUTES flag, this parameter is ignored.</param>
            <param name="psfi">A combination of one or more file attribute flags (FILE_ATTRIBUTE_ values as defined in Winnt.h). If uFlags does not include the SHGFI_USEFILEATTRIBUTES flag, this parameter is ignored.</param>
            <param name="cbFileInfo">A combination of one or more file attribute flags (FILE_ATTRIBUTE_ values as defined in Winnt.h). If uFlags does not include the SHGFI_USEFILEATTRIBUTES flag, this parameter is ignored.</param>
            <param name="uFlags">A combination of one or more file attribute flags (FILE_ATTRIBUTE_ values as defined in Winnt.h). If uFlags does not include the SHGFI_USEFILEATTRIBUTES flag, this parameter is ignored.</param>
            <returns>A combination of one or more file attribute flags (FILE_ATTRIBUTE_ values as defined in Winnt.h). If uFlags does not include the SHGFI_USEFILEATTRIBUTES flag, this parameter is ignored.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.SHGetFileInfo(System.IntPtr,System.UInt32,WSF.Shell.Interop.SHFILEINFO@,System.UInt32,WSF.Shell.Enums.SHGFI)">
            <summary>
            Retrieves information about an object in the file system, such as a file, folder, directory, or drive root.
            </summary>
            <param name="pszPath">A pointer to a null-terminated string of maximum length MAX_PATH that contains the path and file name. Both absolute and relative paths are valid.
            If the uFlags parameter includes the SHGFI_PIDL flag, this parameter must be the address of an ITEMIDLIST (PIDL) structure that contains the list of item identifiers that uniquely identifies the file within the Shell's namespace. The PIDL must be a fully qualified PIDL. Relative PIDLs are not allowed.
            If the uFlags parameter includes the SHGFI_USEFILEATTRIBUTES flag, this parameter does not have to be a valid file name. The function will proceed as if the file exists with the specified name and with the file attributes passed in the dwFileAttributes parameter. This allows you to obtain information about a file type by passing just the extension for pszPath and passing FILE_ATTRIBUTE_NORMAL in dwFileAttributes.
            This string can use either short (the 8.3 form) or long file names.</param>
            <param name="dwFileAttribs">A combination of one or more file attribute flags (FILE_ATTRIBUTE_ values as defined in Winnt.h). If uFlags does not include the SHGFI_USEFILEATTRIBUTES flag, this parameter is ignored.</param>
            <param name="psfi">A combination of one or more file attribute flags (FILE_ATTRIBUTE_ values as defined in Winnt.h). If uFlags does not include the SHGFI_USEFILEATTRIBUTES flag, this parameter is ignored.</param>
            <param name="cbFileInfo">A combination of one or more file attribute flags (FILE_ATTRIBUTE_ values as defined in Winnt.h). If uFlags does not include the SHGFI_USEFILEATTRIBUTES flag, this parameter is ignored.</param>
            <param name="uFlags">A combination of one or more file attribute flags (FILE_ATTRIBUTE_ values as defined in Winnt.h). If uFlags does not include the SHGFI_USEFILEATTRIBUTES flag, this parameter is ignored.</param>
            <returns>A combination of one or more file attribute flags (FILE_ATTRIBUTE_ values as defined in Winnt.h). If uFlags does not include the SHGFI_USEFILEATTRIBUTES flag, this parameter is ignored.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.SHGetFileInfo(System.IntPtr,System.UInt32,WSF.Shell.Interop.SHFILEINFO@,System.UInt32,System.UInt32)">
            <summary>
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb762179(v=vs.85).aspx
            </summary>
            <param name="pszPath">
            
            Type: LPCTSTR
            A pointer to a null-terminated string of maximum length MAX_PATH that contains
            the path and file name.Both absolute and relative paths are valid.
            
            If the uFlags parameter includes the SHGFI_PIDL flag, this parameter must be
            the address of an ITEMIDLIST (PIDL) structure that contains the list of item
            identifiers that uniquely identifies the file within the Shell's namespace.
            The PIDL must be a fully qualified PIDL. Relative PIDLs are not allowed.
            
            If the uFlags parameter includes the SHGFI_USEFILEATTRIBUTES flag, this parameter
            does not have to be a valid file name. The function will proceed as if the file
            exists with the specified name and with the file attributes passed in the
            dwFileAttributes parameter.This allows you to obtain information about a
            file type by passing just the extension for pszPath and passing FILE_ATTRIBUTE_NORMAL
            in dwFileAttributes.
            This string can use either short (the 8.3 form) or long file names.</param>
            <param name="dwFileAttributes">Type: DWORD
            <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117(v=vs.85).aspx"/>
            
            A combination of one or more file attribute flags(FILE_ATTRIBUTE_ values as defined
            in Winnt.h). If uFlags does not include the SHGFI_USEFILEATTRIBUTES flag, this
            parameter is ignored.</param>
            <param name="psfi">
            <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/bb759792(v=vs.85).aspx"/>
            </param>
            <param name="cbSizeFileInfo"></param>
            <param name="uFlags"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.SHCreateDataObject(System.IntPtr,System.UInt32,System.IntPtr,System.Runtime.InteropServices.ComTypes.IDataObject,System.Guid,System.IntPtr@)">
            <summary>
            Creates a data object in a parent folder.
            </summary>
            <param name="pidlFolder">A pointer to an ITEMIDLIST (PIDL) of the parent folder that contains the data object.</param>
            <param name="cidl">The number of file objects or subfolders specified in the apidl parameter.</param>
            <param name="apidl">An array of pointers to constant ITEMIDLIST structures, each of which uniquely identifies a file object or subfolder relative to the parent folder. Each item identifier list must contain exactly one SHITEMID structure followed by a terminating zero.</param>
            <param name="pdtInner">A pointer to interface IDataObject. This parameter can be NULL. Specify pdtInner only if the data object created needs to support additional FORMATETC clipboard formats beyond the default formats it is assigned at creation. Alternatively, provide support for populating the created data object using non-default clipboard formats by calling method IDataObject::SetData and specifying the format in the FORMATETC structure passed in parameter pFormatetc.</param>
            <param name="riid">A reference to the IID of the interface to retrieve through ppv. This must be IID_IDataObject.</param>
            <param name="ppv">When this method returns successfully, contains the IDataObject interface pointer requested in riid.</param>
            <returns>If this function succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.SHBindToParent(System.IntPtr,System.Guid,System.IntPtr@,System.IntPtr@)">
            <summary>
            This function takes the fully-qualified pointer to an item
            identifier list (PIDL) of a namespace object, and returns a specified
            interface pointer on the parent object.
            
            https://www.codeproject.com/articles/3551/c-does-shell-part
            </summary>
            <param name="pidl">The item's PIDL.</param>
            <param name="riid">The REFIID of one of the interfaces exposed by
            the item's parent object.</param>
            <param name="ppv">A pointer to the interface specified by riid.
            You must release the object when  you are finished.</param>
            <param name="ppidlLast">The item's PIDL relative to the parent folder.
            This PIDL can be used with many of the methods supported by the parent
            folder's interfaces. If you set ppidlLast to NULL, the PIDL will not
            be returned.</param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.SHCreateItemFromParsingName(System.String,System.IntPtr,System.Guid@,WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2@)">
            <summary>
            Creates and initializes a Shell item object from a parsing name.
            
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb762134(v=vs.85).aspx
            </summary>
            <param name="path">Type: PCWSTR
            A pointer to a display name.</param>
            <param name="pbc">Type: IBindCtx*
            Optional.A pointer to a bind context used to pass parameters as
            inputs and outputs to the parsing function.These passed parameters
            are often specific to the data source and are documented by the
            data source owners. For example, the file system data source
            accepts the name being parsed (as a WIN32_FIND_DATA structure),
            using the STR_FILE_SYS_BIND_DATA bind context parameter.
            STR_PARSE_PREFER_FOLDER_BROWSING can be passed to indicate that URLs are parsed using the file system data source when possible.Construct a bind context object using CreateBindCtx and populate the values using IBindCtx::RegisterObjectParam. See Bind Context String Keys for a complete list of these.See the Parsing With Parameters Sample for an example of the use of this parameter.
            
            If no data is being passed to or received from the parsing function, this value can be NULL.</param>
            <param name="riid">Type: REFIID
            A reference to the IID of the interface to retrieve through ppv, typically IID_IShellItem or IID_IShellItem2.</param>
            <param name="shellItem">Type: void**
            When this method returns successfully, contains the interface
            pointer requested in riid.This is typically IShellItem or IShellItem2.</param>
            <returns>ype: HRESULT
            If this function succeeds, it returns S_OK.
            Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.SHGetIDListFromObject(System.IntPtr,System.IntPtr@)">
            <summary>
            Retrieves the pointer to an item identifier list (PIDL) of an object.
            
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb762184(v=vs.85).aspx
            </summary>
            <param name="pUnk">Type: IUnknown* https://msdn.microsoft.com/en-us/library/windows/desktop/ms680509(v=vs.85).aspx
            
            A pointer to the IUnknown of the object from which to get the PIDL</param>
            <param name="pidl">Type: PIDLIST_ABSOLUTE*
            When this function returns, contains a pointer to the PIDL of the given object.
            </param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Dlls.NativeMethods.StrRetToBuf(System.IntPtr,System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            Converts an STRRET structure
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb759820(v=vs.85).aspx
            returned by IShellFolder::GetDisplayNameOf
            to a string, and places the result in a buffer.
            
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb773426(v=vs.85).aspx
            </summary>
            <param name="pstr">A pointer to the STRRET structure. When the function returns, this pointer will no longer be valid.</param>
            <param name="pidl">A pointer to the item's ITEMIDLIST structure.</param>
            <param name="pszBuf">A buffer to hold the display name. It will be returned as a null-terminated string. If cchBuf is too small, the name will be truncated to fit.</param>
            <param name="cchBuf">The size of pszBuf, in characters. If cchBuf is too small, the string will be truncated to fit.</param>
            <returns></returns>
        </member>
        <member name="T:WSF.Shell.Interop.Interfaces.IExtractIcon">
            <summary>
            Exposes methods that allow a client to retrieve the icon that is associated with one of the objects in a folder.
            
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb761854(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.IExtractIcon.GetIconLocation(System.UInt32,System.Text.StringBuilder,System.UInt32,System.Int32@,System.UInt32@)">
            <summary>
            Gets the location and index of an icon.
            </summary>
            <param name="uFlags"></param>
            <param name="pszIconFile"></param>
            <param name="cchMax"></param>
            <param name="piIndex"></param>
            <param name="pwFlags"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.IExtractIcon.Extract(System.String,System.Int32,System.IntPtr@,System.IntPtr@,System.UInt32)">
            <summary>
            Extracts an icon image from the specified location.
            </summary>
            <param name="pzsFile"></param>
            <param name="nIconIndex"></param>
            <param name="phiconLarge"></param>
            <param name="phiconSmall"></param>
            <param name="nIconSize"></param>
            <returns></returns>
        </member>
        <member name="T:WSF.Shell.Interop.Interfaces.KnownFolders.DefinitionOptions">
            <summary>
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb762513(v=vs.85).aspx
            Specifies behaviors for known folders.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.DefinitionOptions.None">
            <summary>
            No behaviors are defined.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.DefinitionOptions.LocalRedirectOnly">
            <summary>
            Prevents a per-user known folder from being 
            redirected to a network location.
            
            Prevent a per-user known folder from being redirected to a network location.
            Note that if the known folder has been flagged with KFDF_LOCAL_REDIRECT_ONLY
            but it is a subfolder of a known folder that is redirected to a
            network location, this subfolder is redirected also.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.DefinitionOptions.Roamable">
            <summary>
            The known folder can be roamed through PC-to-PC synchronization.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.DefinitionOptions.Precreate">
            <summary>
            Creates the known folder when the user first logs on.
            
            Create the folder when the user first logs on.
            
            Normally a known folder is not created until it is first called.
            At that time, an API such as SHCreateItemInKnownFolder or IKnownFolder::GetShellItem
            is called with the KF_FLAG_CREATE flag. However, some known folders need to exist
            immediately. An example is those known folders under %USERPROFILE%, which must
            exist to provide a proper view. In those cases, KFDF_PRECREATE is set and Windows
            Explorer calls the creation API during its user initialization.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.DefinitionOptions.STREAM">
            <summary>
            Introduced in Windows 7. The known folder is a file rather than a folder.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.DefinitionOptions.KFDF_PUBLISHEXPANDEDPATH">
            <summary>
            Introduced in Windows 7. The full path of the known folder,
            with any environment variables fully expanded, is stored in the registry
            under HKEY_CURRENT_USER.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.DefinitionOptions.KFDF_NO_REDIRECT_UI">
            <summary>
            Introduced in Windows 8.1. Prevent showing the Locations tab in the property
            dialog of the known folder. 
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.Interfaces.KnownFolders.FolderCategory">
            <summary>
            Specifies the categories for known folders.
            
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb762512(v=vs.85).aspx
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.FolderCategory.None">
            <summary>
            The folder category is not specified.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.FolderCategory.Virtual">
            <summary>
            The folder is a virtual folder. Virtual folders are not part 
            of the file system. For example, Control Panel and 
            Printers are virtual folders. A number of properties 
            such as folder path and redirection do not apply to this category.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.FolderCategory.Fixed">
            <summary>
            The folder is fixed. Fixed file system folders are not 
            managed by the Shell and are usually given a permanent 
            path when the system is installed. For example, the 
            Windows and Program Files folders are fixed folders. 
            A number of properties such as redirection do not apply 
            to this category.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.FolderCategory.Common">
            <summary>
            The folder is a common folder. Common folders are 
            used for sharing data and settings 
            accessible by all users of a system. For example, 
            all users share a common Documents folder as well 
            as their per-user Documents folder.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.FolderCategory.PerUser">
            <summary>
            Each user has their own copy of the folder. Per-user folders 
            are those stored under each user's profile and 
            accessible only by that user.
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative">
            <summary>
            Exposes methods that allow an application to retrieve information about a known folder's
            category, type, GUID, pointer to an item identifier list (PIDL) value, redirection capabilities,
            and definition. It provides a method for the retrival of a known folder's IShellItem object.
            It also provides methods to get or set the path of the known folder.
            
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb761768(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative.GetId">
            <summary>
            Gets the KnownFolderID (Guid) of the selected folder.
            When this method returns, returns the KNOWNFOLDERID value of the known folder.
            Note, KNOWNFOLDERID values are GUIDs:
            https://msdn.microsoft.com/en-us/library/windows/desktop/dd378457(v=vs.85).aspx
            
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb761758(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative.GetCategory">
            <summary>
            Retrieves the category—virtual, fixed, common, or per-user—of the selected folder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative.GetShellItem(System.Int32,System.Guid@,WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2@)">
            <summary>
            Retrieves the location of a known folder in the Shell namespace in the form
            of a Shell item (IShellItem or derived interface).
            </summary>
            <param name="i"></param>
            <param name="interfaceGuid"></param>
            <param name="shellItem"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative.GetPath(System.Int32,System.IntPtr@)">
            <summary>
            Retrieves the path of a known folder as a string.
            
            <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/bb761762(v=vs.85).aspx"/>
            
            </summary>
            <param name="option">Flags that specify special retrieval options. This value can be 0;
            
            otherwise, one or more of the KNOWN_FOLDER_FLAG values.
            <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd378447(v=vs.85).aspx"/> 
            </param>
            <param name="path"></param>
            <returns>When this method returns, contains the address of a pointer to a
            null-terminated buffer that contains the path. The calling application is
            responsible for calling CoTaskMemFree to free this resource
            when it is no longer needed.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative.SetPath(System.Int32,System.String)">
            <summary>
            Assigns a new path to a known folder.
            </summary>
            <param name="i"></param>
            <param name="path"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative.GetIDList(System.UInt32,System.IntPtr@)">
            <summary>
            Gets the location of the Shell namespace folder in the IDList (ITEMIDLIST) form.
            
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb761760(v=vs.85).aspx
            </summary>
            <param name="flag">Flags that specify special retrieval options. This value can be 0; otherwise, one or more of the KNOWN_FOLDER_FLAG values.</param>
            <param name="itemIdentifierListPointer">Type: PIDLIST_ABSOLUTE*
            When this method returns, contains the address of an absolute PIDL. This parameter is passed uninitialized.
            The caller is responsible for freeing the returned PIDL when it is no longer needed by calling ILFree.</param>
            <returns>f this method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
            <remarks>Equivalent to Shell32.SHGetKnownFolderIDList.</remarks>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative.GetFolderType">
            <summary>
            Retrieves the folder type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative.GetRedirectionCapabilities">
            <summary>
            Gets a value that states whether the known folder can have its path set
            to a new value or
            what specific restrictions or prohibitions are placed on that redirection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative.GetFolderDefinition(WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition@)">
            <summary>
            Retrieves a structure that contains the defining elements of a known folder,
            which includes the folder's category, name, path, description, tooltip, icon, and other properties.
            <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/bb761754(v=vs.85).aspx"/>
            
            </summary>
            <param name="definition">When this method returns, contains a pointer to the KNOWNFOLDER_DEFINITION structure.
            
            When no longer needed, the calling application is responsible for calling
            FreeKnownFolderDefinitionFields
            <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/bb776424(v=vs.85).aspx"/>
            
            to free this resource.</param>
        </member>
        <member name="T:WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition">
            <summary>
            Defines the specifics of a known folder.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition.category">
            <summary>
            A single value from the KF_CATEGORY constants that classifies the folder
            as virtual, fixed, common, or per-user.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition.name">
            <summary>
            The non-localized, canonical name for the known folder,
            stored as a null-terminated Unicode string.
            If this folder is a common or per-user folder, this value is also used
            as the value name of the "User Shell Folders" registry settings.
            This name is meant to be a unique, human-readable name.
            Third parties are recommended to follow the format Company.Application.Name.
            The name given here should not be confused with the display name.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition.description">
            <summary>
            A pointer to a short description of the known folder,
            stored as a null-terminated Unicode string.
            This description should include the folder's purpose and usage.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition.parentId">
             <summary>
             Type: KNOWNFOLDERID
            
             A KNOWNFOLDERID value that names another known folder to serve as the
             parent folder.Applies to common and per-user folders only.This value
             is used in conjunction with pszRelativePath.See Remarks for more details.
            
             This value is optional if no value is provided for pszRelativePath.
             </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition.relativePath">
            <summary>
            Type: LPWSTR
            Optional. A pointer to a path relative to the parent folder specified in
            fidParent.This is a null-terminated Unicode string, refers to the
            physical file system path, and is not localized. Applies to common and
            per-user folders only.See Remarks for more details.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition.parsingName">
             <summary>
             Type: LPWSTR
            
             A pointer to the Shell namespace folder path of the folder,
             stored as a null-terminated Unicode string. Applies to virtual folders
             only.For example, Control Panel has a parsing name
             of ::%CLSID_MyComputer%\::%CLSID_ControlPanel%.
             </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition.tooltip">
            <summary>
            the default tooltip resource used for this known folder when it is created.
            This is a null-terminated Unicode string in this form:
            
            Module name, Resource ID
            
            For example, @%_SYS_MOD_PATH%,-12688 is the tooltip for Common Pictures.When the folder is created, this string is stored in that folder's copy of Desktop.ini. It can be changed later by other Shell APIs. This resource might be localized.
            
            This information is not required for virtual folders.
            /// </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition.localizedName">
            <summary>
            Type: LPWSTR
            
            Optional. A pointer to the default localized name resource used when
            the folder is created.This is a null-terminated Unicode string in this
            form:
            
            Module name, Resource ID
            
            When the folder is created, this string is stored in that folder's copy
            of Desktop.ini. It can be changed later by other Shell APIs.
            
            This information is not required for virtual folders.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition.icon">
             <summary>
             Type: LPWSTR
             
             Optional. A pointer to the default icon resource used when the folder is created. This is a null-terminated Unicode string in this form:
            
             Module name, Resource ID
            
             When the folder is created, this string is stored in that folder's copy of Desktop.ini. It can be changed later by other Shell APIs.
            
             This information is not required for virtual folders.
             </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition.security">
            <summary>
            Type: LPWSTR
            
            Optional. A pointer to a Security Descriptor Definition Language format string.
            This is a null-terminated Unicode string that describes the default security descriptor
            that the folder receives when it is created.
            
            If this parameter is NULL, the new folder inherits the security descriptor of
            its parent. This is particularly useful for common folders that are accessed
            by all users.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition.attributes">
            <summary>
            Type: DWORD
            
            Optional. Default file system attributes given to the folder when it is created.
            For example, the file could be hidden and read-only (FILE_ATTRIBUTE_HIDDEN and
            FILE_ATTRIBUTE_READONLY). For a complete list of possible values,
            see the dwFlagsAndAttributes parameter of the CreateFile function.
            
            Set to -1 if not needed.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition.definitionOptions">
            <summary>
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb762513(v=vs.85).aspx
            
            Type: KF_DEFINITION_FLAGS
            
            Optional. One of more values from the KF_DEFINITION_FLAGS enumeration that
            allow you to restrict redirection, allow PC-to-PC roaming, and control
            the time at which the known folder is created.Set to 0 if not needed.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition.folderTypeId">
            <summary>
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb762581(v=vs.85).aspx
            Type: FOLDERTYPEID
            
            One of the FOLDERTYPEID values that identifies the known folder type based
            on its contents(such as documents, music, or photographs). This value is a
            GUID.
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.Interfaces.KnownFolders.RedirectionCapability">
            <summary>
            Specifies the redirection capabilities for known folders. 
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.RedirectionCapability.None">
            <summary>
            Redirection capability is unknown.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.RedirectionCapability.AllowAll">
            <summary>
            The known folder can be redirected.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.RedirectionCapability.Redirectable">
            <summary>
            The known folder can be redirected. 
            Currently, redirection exists only for 
             common and user folders; fixed and virtual folders 
            cannot be redirected.
            </summary>       
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.RedirectionCapability.DenyAll">
            <summary>
            Redirection is not allowed.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.RedirectionCapability.DenyPolicyRedirected">
            <summary>
            The folder cannot be redirected because it is 
            already redirected by group policy.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.RedirectionCapability.DenyPolicy">
            <summary>
            The folder cannot be redirected because the policy 
            prohibits redirecting this folder.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.Interfaces.KnownFolders.RedirectionCapability.DenyPermissions">
            <summary>
            The folder cannot be redirected because the calling 
            application does not have sufficient permissions.
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties">
             <summary>
             Gets property values for a known folder.
            
             This class holds the information returned in the KNOWNFOLDER_DEFINITION structure,
             and resources referenced by fields in NativeFolderDefinition, such as icon and tool tip.
            
             https://msdn.microsoft.com/en-us/library/windows/desktop/bb773325(v=vs.85).aspx
             </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.Name">
            <summary>
            Gets a string to the non-localized, canonical name for the known folder,
            stored as a null-terminated Unicode string. If this folder is a common
            or per-user folder, this value is also used as the value name of the
            "User Shell Folders" registry settings. This name is meant to be a unique,
            human-readable name. Third parties are recommended to follow the format
            Company.Application.Name. The name given here should not be confused with the display name.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.Category">
            <summary>
            Gets a single value from the KF_CATEGORY constants that classifies the folder as:
            virtual, fixed, common, or per-user.
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb762512(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.CanonicalName">
            <summary>
            Gets a string to the non-localized, canonical name for the known folder,
            stored as a null-terminated Unicode string. If this folder is a common
            or per-user folder, this value is also used as the value name of the
            "User Shell Folders" registry settings. This name is meant to be a unique,
            human-readable name. Third parties are recommended to follow the format
            Company.Application.Name. The name given here should not be confused with the display name.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.DefinitionOptions">
             <summary>
             Gets an optional One of more values from the KF_DEFINITION_FLAGS enumeration
             (https://msdn.microsoft.com/en-us/library/windows/desktop/bb762513(v=vs.85).aspx)
            
             that allow you to restrict redirection, allow PC-to-PC roaming, and control the time
             at which the known folder is created. Set to 0 if not needed.
             </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.Description">
            <summary>
            Gets a string to a short description of the known folder, stored as a null-terminated
            Unicode string. This description should include the folder's purpose and usage.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.FileAttributes">
            <summary>
            Gets 
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.FolderId">
            <summary>
            Type: KNOWNFOLDERID (https://msdn.microsoft.com/en-us/library/windows/desktop/dd378457(v=vs.85).aspx)
            
            Gets the KNOWNFOLDERID of this folder.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.FolderTypeId">
             <summary>
             Gets Type: FOLDERTYPEID (https://msdn.microsoft.com/en-us/library/windows/desktop/bb762581(v=vs.85).aspx)
            
             One of the FOLDERTYPEID values that identifies the known folder type based on its
             contents (such as documents, music, or photographs). This value is a GUID.
             </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.IconResourceId">
             <summary>
             Gets an optional pointer to the default icon resource used when the folder is created.
             This is a null-terminated Unicode string in this form:
            
             Module name, Resource ID
             When the folder is created, this string is stored in that folder's copy of Desktop.ini.
             It can be changed later by other Shell APIs.
            
             This information is not required for virtual folders.
             </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.LocalizedName">
            <summary>
            Gets an optional string to the default localized name of this item.
            
            When the folder is created, this string is stored in that folder's copy of Desktop.ini.
            It can be changed later by other Shell APIs.
            This information is not required for virtual folders.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.LocalizedNameResourceId">
            <summary>
            Gets an optional string to the default localized name resource used when the folder is created.
            This is a null-terminated Unicode string in this form:
            Module name, Resource ID
            
            When the folder is created, this string is stored in that folder's copy of Desktop.ini.
            It can be changed later by other Shell APIs.
            This information is not required for virtual folders.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.Parent">
             <summary>
             Gets a KNOWNFOLDERID value that names another known folder to serve as the parent folder.
             Applies to common and per-user folders only. This value is used in conjunction with pszRelativePath.
             See Remarks for more details.
            
             This value is optional if no value is provided for pszRelativePath.
             </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.ParentId">
             <summary>
             Type KNOWNFOLDERID (https://msdn.microsoft.com/en-us/library/windows/desktop/dd378457(v=vs.85).aspx)
             Gets a KNOWNFOLDERID value that names another known folder to serve as the parent folder.
            
             Applies to common and per-user folders only.
             This value is used in conjunction with pszRelativePath.
             See Remarks for more details.
            
             This value is optional if no value is provided for pszRelativePath.
             </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.ParsingName">
             <summary>
             Gets a string to the Shell namespace folder path of the folder,
             stored as a null-terminated Unicode string.
            
             Applies to virtual folders only.
             For example, Control Panel has a parsing name of ::%CLSID_MyComputer%\::%CLSID_ControlPanel%.
             </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.Path">
            <summary>
            Gets a path of the known folder representation in the file system if this folder
            has a representation in the file system (is not virtual).
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.IsExistsInFileSystem">
            <summary>
            Gets whether the known folder object managed in this object is a folder
            or file objects that are part of the file system,
            that is, its a file, directory, or root directory.
            
            A known folder with <see cref="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.IsExistsInFileSystem"/> = true also
            has <see cref="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.IsPathExists"/> = true but 
            <see cref="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.IsPathExists"/> = true does not require a particular value in
            <see cref="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.IsExistsInFileSystem"/>.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.IsPathExists">
            <summary>
            Gets whether the known folder has a path - that is, it has a path
            in the Path property but not necessarily a path in the file system.
            
            <seealso cref="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.Path"/> and <see cref="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.IsExistsInFileSystem"/>
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.Redirection">
            <summary>
            Gets a value that states whether the known folder can have its path set to a new value
            or what specific restrictions or prohibitions are placed on that redirection.
            
            Source: IKnownFolder::GetRedirectionCapabilities
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb761764(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.RelativePath">
             <summary>
             Gets an optional string to a path relative to the parent folder specified in fidParent.
             This is a null-terminated Unicode string, refers to the physical file system path, and
             is not localized.
            
             Applies to common and per-user folders only.
             See Remarks for more details.
             </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.Security">
            <summary>
            Gets an optional Security Descriptor Definition Language format string.
            This is a null-terminated Unicode string that describes the default security
            descriptor that the folder receives when it is created. If this parameter is NULL,
            the new folder inherits the security descriptor of its parent. This is particularly
            useful for common folders that are accessed by all users.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.Tooltip">
            <summary>
            Gets an optional string to the default tooltip for this known folder
            when it is created. This is a null-terminated Unicode string in this form:
            
            When the folder is created, this string is stored in that folder's copy of Desktop.ini.
            It can be changed later by other Shell APIs. This resource might be localized.
            This information is not required for virtual folders.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.TooltipResourceId">
            <summary>
            Gets an optional string to the default tooltip resource used for this known folder
            when it is created. This is a null-terminated Unicode string in this form:
            
            Module name, Resource ID
            
            For example, @%_SYS_MOD_PATH%,-12688 is the tooltip for Common Pictures. When the folder is created, this string is stored in that folder's copy of Desktop.ini. It can be changed later by other Shell APIs. This resource might be localized.
            This information is not required for virtual folders.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.PidlIdList">
            <summary>
            Gets the Pidl Id List in the form of a standard .Net object.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.ToString">
            <summary>
            Gets the standard ToString() representation of this object (for debugging only).
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.IsIconResourceIdValid(System.String)">
            <summary>
            Determines whether the string in <paramref name="iconResourceId"/> contains
            a valid resource id reference of the sample form 'dll, -3'.
            
            Call this method without parameter to determine this for
            the <see cref="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.IconResourceId"/> property contained in this object.
            </summary>
            <param name="iconResourceId"></param>
            <returns>True if resource id has more than zero characters and a ','
            character at an index larger 2, otherwise false.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.ResetIconResourceId(System.String,System.Int32)">
            <summary>
            Resets an icons resource id. Use this property to overwrite available
            values or consider alternative options for retrieving the correct resource id string.
            </summary>
            <param name="filename"></param>
            <param name="index"></param>
        </member>
        <member name="T:WSF.Shell.Interop.Interfaces.ShellItems.IEnumShellItems">
            <summary>
            Exposes enumeration of IShellItem interfaces.
            This interface is typically obtained by calling the IEnumShellItems method.
            
            <see href="https://docs.microsoft.com/en-us/windows/desktop/api/shobjidl_core/nn-shobjidl_core-ienumshellitems"/>
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IEnumShellItems.Next(System.UInt32,WSF.Shell.Interop.Interfaces.ShellItems.IShellItem@,System.UInt32@)">
            <summary>
            Gets an array of one or more IShellItem interfaces from the enumeration.
            </summary>
            <param name="celt"></param>
            <param name="rgelt"></param>
            <param name="pceltFetched"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IEnumShellItems.Skip(System.UInt32)">
            <summary>
            Skips a given number of IShellItem interfaces in the enumeration.
            Used when retrieving interfaces.
            </summary>
            <param name="celt"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IEnumShellItems.Reset">
            <summary>
            Resets the internal count of retrieved IShellItem interfaces in the enumeration.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IEnumShellItems.Clone(WSF.Shell.Interop.Interfaces.ShellItems.IEnumShellItems@)">
            <summary>
            Gets a copy of the current enumeration.
            </summary>
            <param name="ppenum"></param>
            <returns></returns>
        </member>
        <member name="T:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem">
            <summary>
            Exposes methods that retrieve information about a Shell item.
            IShellItem and IShellItem2 are the preferred representations of items in any new code.
            
            <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/bb761144(v=vs.85).aspx"/> 
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem.BindToHandler(System.IntPtr,System.Guid@,System.Guid@,System.IntPtr@)">
            <summary>
            Binds to a handler for an item as specified by the handler ID value (BHID).
            </summary>
            <param name="pbc"></param>
            <param name="bhid"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem.GetParent(WSF.Shell.Interop.Interfaces.ShellItems.IShellItem@)">
            <summary>
            Gets the parent of an IShellItem object.
            </summary>
            <param name="ppsi"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem.GetDisplayName(WSF.Shell.Enums.SIGDN,System.IntPtr@)">
            <summary>
            Gets the display name of the IShellItem object.
            </summary>
            <param name="sigdnName"></param>
            <param name="ppszName"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem.GetAttributes(WSF.Shell.Enums.SFGAOF,WSF.Shell.Enums.SFGAOF@)">
            <summary>
            Gets a requested set of attributes of the IShellItem object.
            </summary>
            <param name="sfgaoMask"></param>
            <param name="psfgaoAttribs"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem.Compare(WSF.Shell.Interop.Interfaces.ShellItems.IShellItem,WSF.Shell.Enums.SICHINTF,System.Int32@)">
            <summary>
            Compares two IShellItem objects.
            </summary>
            <param name="psi"></param>
            <param name="hint"></param>
            <param name="piOrder"></param>
            <returns></returns>
        </member>
        <member name="T:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2">
            <summary>
            Extends <see cref="T:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem"/> with methods that retrieve various property
            values of a shell item (file, folder, or drive).
            
            <see cref="T:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem"/> and <see cref="T:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2"/> are the preferred representations
            of items in any new code.
            
            <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/bb761130(v=vs.85).aspx"/> 
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.BindToHandler(System.IntPtr,System.Guid@,System.Guid@,System.IntPtr@)">
            <summary>
            Binds to a handler for an item as specified by the handler ID value (BHID).
            </summary>
            <param name="pbc"></param>
            <param name="bhid"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetParent(WSF.Shell.Interop.Interfaces.ShellItems.IShellItem@)">
            <summary>
            Gets the parent of an IShellItem object.
            </summary>
            <param name="ppsi"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetDisplayName(WSF.Shell.Enums.SIGDN,System.String@)">
            <summary>
            Gets the display name of the IShellItem object.
            </summary>
            <param name="sigdnName"></param>
            <param name="ppszName"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetAttributes(WSF.Shell.Enums.SFGAOF,WSF.Shell.Enums.SFGAOF@)">
            <summary>
            IShellItemArray::GetAttributes
            <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/bb761096(v=vs.85).aspx"/> 
            
            Gets the attributes of the set of items contained in an IShellItemArray.
            If the array contains more than one item, the attributes retrieved by this
            method are not the attributes of single items, but a logical combination of
            all of the requested attributes of all of the items.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.Compare(WSF.Shell.Interop.Interfaces.ShellItems.IShellItem,System.UInt32,System.Int32@)">
            <summary>
            Compares two IShellItem objects.
            </summary>
            <param name="psi"></param>
            <param name="hint"></param>
            <param name="piOrder"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetPropertyStore(WSF.Shell.Enums.GetPropertyStoreFlags,System.Guid@,WSF.Shell.Interop.Interfaces.IPropertyStore@)">
            <summary>
            Gets a property store object for specified property store flags.
            <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/bb761124(v=vs.85).aspx"/>
            
            </summary>
            <param name="Flags"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetPropertyStoreWithCreateObject(WSF.Shell.Enums.GetPropertyStoreFlags,System.Object,System.Guid@,System.IntPtr@)">
            <summary>
            Uses the specified ICreateObject instead of CoCreateInstance
            to create an instance of the property handler associated with
            the Shell item on which this method is called.
            </summary>
            <param name="Flags"></param>
            <param name="punkCreateObject"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetPropertyStoreForKeys(WSF.Shell.PropertyKey@,System.UInt32,WSF.Shell.Enums.GetPropertyStoreFlags,System.Guid@,WSF.Shell.Interop.Interfaces.IPropertyStore@)">
            <summary>
            Gets property store object for specified property keys.
            </summary>
            <param name="rgKeys"></param>
            <param name="cKeys"></param>
            <param name="Flags"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetPropertyDescriptionList(WSF.Shell.PropertyKey@,System.Guid@,System.IntPtr@)">
            <summary>
            Gets a property description list object given a reference to a property key.
            </summary>
            <param name="keyType"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.Update(System.Runtime.InteropServices.ComTypes.IBindCtx)">
            <summary>
            Ensures that any cached information in this item is updated.
            </summary>
            <param name="pbc"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetProperty(WSF.Shell.PropertyKey@,WSF.Shell.Interop.ShellItems.PropVariant)">
            <summary>
            Gets a PROPVARIANT structure from a specified property key.
            </summary>
            <param name="key"></param>
            <param name="ppropvar"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetCLSID(WSF.Shell.PropertyKey@,System.Guid@)">
            <summary>
            Gets the CLSID value of specified property key.
            </summary>
            <param name="key"></param>
            <param name="pclsid"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetFileTime(WSF.Shell.PropertyKey@,System.Runtime.InteropServices.ComTypes.FILETIME@)">
            <summary>
            Gets the date and time value of a specified property key.
            </summary>
            <param name="key"></param>
            <param name="pft"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetInt32(WSF.Shell.PropertyKey@,System.Int32@)">
            <summary>
            Gets the Int32 value of specified property key.
            </summary>
            <param name="key"></param>
            <param name="pi"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetString(WSF.Shell.PropertyKey@,System.String@)">
            <summary>
            Gets the String value of specified property key.
            </summary>
            <param name="key"></param>
            <param name="ppsz"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetUInt32(WSF.Shell.PropertyKey@,System.UInt32@)">
            <summary>
            Gets the UInt32 value of specified property key.
            </summary>
            <param name="key"></param>
            <param name="pui"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetUInt64(WSF.Shell.PropertyKey@,System.UInt64@)">
            <summary>
            Gets the UInt64 value of specified property key.
            </summary>
            <param name="key"></param>
            <param name="pull"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2.GetBool(WSF.Shell.PropertyKey@,System.Int32@)">
            <summary>
            Gets the Boolean value of specified property key.
            </summary>
            <param name="key"></param>
            <param name="pf"></param>
        </member>
        <member name="T:WSF.Shell.Interop.Interfaces.IPropertyStore">
            <summary>
            A property store
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.IPropertyStore.GetCount(System.UInt32@)">
            <summary>
            Gets the number of properties contained in the property store.
            </summary>
            <param name="propertyCount"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.IPropertyStore.GetAt(System.UInt32,WSF.Shell.PropertyKey@)">
            <summary>
            Get a property key located at a specific index.
            </summary>
            <param name="propertyIndex"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.IPropertyStore.GetValue(WSF.Shell.PropertyKey@,WSF.Shell.Interop.ShellItems.PropVariant)">
            <summary>
            Gets the value of a property from the store
            </summary>
            <param name="key"></param>
            <param name="pv"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.IPropertyStore.SetValue(WSF.Shell.PropertyKey@,WSF.Shell.Interop.ShellItems.PropVariant)">
            <summary>
            Sets the value of a property in the store
            </summary>
            <param name="key"></param>
            <param name="pv"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.IPropertyStore.Commit">
            <summary>
            Commits the changes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder">
            <summary>
            Exposed by all Shell namespace folder objects, its methods are used to manage folders.
            
            https://docs.microsoft.com/en-us/windows/desktop/api/shobjidl_core/nn-shobjidl_core-ishellfolder
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder.ParseDisplayName(System.IntPtr,System.IntPtr,System.String,System.UInt32@,System.IntPtr@,WSF.Shell.Enums.SFGAO@)">
            <summary>
            Translates the display name of a file object or a folder into an item identifier list.
            </summary>
            <param name="hwnd">A window handle. The client should provide a window handle if it displays a dialog or message box. Otherwise set hwnd to NULL.</param>
            <param name="pbc">Optional. A pointer to a bind context used to pass parameters as inputs and outputs to the parsing function.</param>
            <param name="pszDisplayName">A null-terminated Unicode string with the display name.</param>
            <param name="pchEaten">A pointer to a ULONG value that receives the number of characters of the display name that was parsed. If your application does not need this information, set pchEaten to NULL, and no value will be returned.</param>
            <param name="ppidl">When this method returns, contains a pointer to the PIDL for the object.</param>
            <param name="pdwAttributes">The value used to query for file attributes. If not used, it should be set to NULL.</param>
            <returns>If this method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder.EnumObjects(System.IntPtr,WSF.Shell.Enums.SHCONTF,System.IntPtr@)">
            <summary>
            Allows a client to determine the contents of a folder by creating an item identifier
            enumeration object and returning its <see cref="T:WSF.Shell.Interop.IEnumIDList"/> interface. 
            Return value: error code, if any
            </summary>
            <param name="hwnd">If user input is required to perform the enumeration,
            this window handle should be used by the enumeration object as the parent window to take user input.</param>
            <param name="grfFlags">Flags indicating which items to include in the  enumeration.
            For a list of possible values, see the <see cref="T:WSF.Shell.Enums.SHCONTF"/> enum.</param>
            <param name="ppenumIDList">Address that receives a pointer to the IEnumIDList interface of the enumeration object
            created by this method. </param>
            <returns>If this method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder.BindToObject(System.IntPtr,System.IntPtr,System.Guid@,System.IntPtr@)">
            <summary>
            Retrieves an IShellFolder object for a subfolder.
            Return value: error code, if any
            </summary>
            <param name="pidl">Address of an ITEMIDLIST structure (PIDL) that identifies the subfolder.</param>
            <param name="pbc">Optional address of an IBindCtx interface on a bind context object to be used during this operation.</param>
            <param name="riid">Identifier of the interface to return. </param>
            <param name="ppv">Address that receives the interface pointer.</param>
            <returns>If this method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder.BindToStorage(System.IntPtr,System.IntPtr,System.Guid@,System.IntPtr@)">
            <summary>
            Requests a pointer to an object's storage interface. 
            Return value: error code, if any
            </summary>
            <param name="pidl">Address of an ITEMIDLIST structure that identifies the subfolder relative to its parent folder. </param>
            <param name="pbc">Optional address of an IBindCtx interface on a bind context object to be  used during this operation.</param>
            <param name="riid">Interface identifier (IID) of the requested storage interface.</param>
            <param name="ppv"> Address that receives the interface pointer specified by riid.</param>
            <returns>If this method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder.CompareIDs(System.IntPtr,System.IntPtr,System.IntPtr)">
             <summary>
             Determines the relative order of two file objects or folders, given 
             their item identifier lists. Return value: If this method is 
             successful, the CODE field of the HRESULT contains one of the 
             following values (the code can be retrived using the helper function
             GetHResultCode): Negative A negative return value indicates that the first item should precede the second (pidl1 &lt; pidl2). 
            Positive A positive return value indicates that the first item should
            follow the second (pidl1 > pidl2).  Zero A return value of zero
            indicates that the two items are the same (pidl1 = pidl2). 
             </summary>
             <param name="lParam">Value that specifies how the comparison  should be performed. The lower Sixteen bits of lParam define the sorting  rule. 
              The upper sixteen bits of lParam are used for flags that modify the sorting rule. values can be from  the SHCIDS enum
             </param>
             <param name="pidl1">Pointer to the first item's ITEMIDLIST structure.</param>
             <param name="pidl2"> Pointer to the second item's ITEMIDLIST structure.</param>
             <returns></returns>
             <returns>If this method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder.CreateViewObject(System.IntPtr,System.Guid@,System.IntPtr@)">
            <summary>
            Requests an object that can be used to obtain information from or interact
            with a folder object.
            Return value: error code, if any
            </summary>
            <param name="hwndOwner">Handle to the owner window.</param>
            <param name="riid">Identifier of the requested interface.</param>
            <param name="ppv">Address of a pointer to the requested interface. </param>
            <returns>If this method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder.GetAttributesOf(System.UInt32,System.IntPtr[],WSF.Shell.Enums.SFGAO@)">
            <summary>
            Gets the attributes of one or more file or folder objects contained in the object represented by <see cref="T:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder"/>.
            </summary>
            <param name="cidl">The number of items from which to retrieve attributes.</param>
            <param name="apidl">Type: PCUITEMID_CHILD_ARRAY*
            
            The address of an array of pointers to ITEMIDLIST structures, each of which uniquely identifies an
            item relative to the parent folder.Each ITEMIDLIST structure must contain exactly one SHITEMID structure
            followed by a terminating zero.</param>
            <param name="rgfInOut">Type: SFGAOF*
            
            Pointer to a single ULONG value that, on entry, contains the bitwise SFGAO attributes that the calling application
            is requesting.On exit, this value contains the requested attributes that are common to all of the specified items.</param>
            <returns>Type: HRESULT
            
            If this method succeeds, it returns S_OK.Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder.GetUIObjectOf(System.IntPtr,System.UInt32,System.IntPtr[],System.Guid@,System.IntPtr,System.IntPtr@)">
            <summary>
            Retrieves an OLE interface that can be used to carry out actions on the 
            specified file objects or folders. Return value: error code, if any
            </summary>
            <param name="hwndOwner">Handle to the owner window that the client should specify if it displays a dialog box or message box.</param>
            <param name="cidl">Number of file objects or subfolders specified in the apidl parameter. </param>
            <param name="apidl">Address of an array of pointers to ITEMIDLIST  structures, each of which  uniquely identifies a file object or subfolder relative to the parent folder.</param>
            <param name="riid">Identifier of the COM interface object to return.</param>
            <param name="rgfReserved"> Reserved. </param>
            <param name="ppv">Pointer to the requested interface.</param>
            <returns>If this method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder.GetDisplayNameOf(System.IntPtr,WSF.Shell.Enums.SHGDNF,System.IntPtr)">
            <summary>
            Retrieves the display name for the specified file object or subfolder. 
            Return value: error code, if any
            </summary>
            <param name="pidl">Address of an ITEMIDLIST structure (PIDL)  that uniquely identifies the file  object or subfolder relative to the parent  folder. </param>
            <param name="uFlags">Flags used to request the type of display name to return. For a list of possible values. </param>
            <param name="lpName"> Address of a STRRET structure in which to return the display name.</param>
            <returns>If this method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder.SetNameOf(System.IntPtr,System.IntPtr,System.String,WSF.Shell.Enums.SHGDNF,System.IntPtr@)">
            <summary>
            Sets the display name of a file object or subfolder, changing the item
            identifier in the process.
            Return value: error code, if any
            </summary>
            <param name="hwnd"> Handle to the owner window of any dialog or message boxes that the client displays.</param>
            <param name="pidl"> Pointer to an ITEMIDLIST structure that uniquely identifies the file object or subfolder relative to the parent folder. </param>
            <param name="pszName"> Pointer to a null-terminated string that specifies the new display name.</param>
            <param name="uFlags">Flags indicating the type of name specified by  the lpszName parameter. For a list of possible values, see the description of the SHGNO enum.</param>
            <param name="ppidlOut"></param>
            <returns>If this method succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="T:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2">
            <summary>
            Extends the capabilities of IShellFolder.
            Its methods provide a variety of information about the contents of a Shell folder.
            
            https://docs.microsoft.com/en-us/windows/desktop/api/shobjidl_core/nn-shobjidl_core-ishellfolder2
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2.GetDefaultSearchGUID(System.Guid@)">
            <summary>
            Returns the globally unique identifier (GUID) of the default search object for the folder.
            </summary>
            <param name="pguid">The GUID of the default search object.</param>
            <returns>Returns S_OK if successful, or a COM error value otherwise.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2.EnumSearches(WSF.Shell.Interop.IEnumExtraSearch@)">
            <summary>
            Requests a pointer to an interface that allows a client to enumerate the available search objects.
            </summary>
            <param name="ppenum">The address of a pointer to an enumerator object's IEnumExtraSearch interface.</param>
            <returns>Returns S_OK if successful, or a COM error value otherwise.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2.GetDefaultColumn(System.UInt32,System.UInt64@,System.UInt64@)">
            <summary>
            Gets the default sorting and display columns.
            </summary>
            <param name="dwRes">Reserved. Set to zero.</param>
            <param name="pSort">A pointer to a value that receives the index of the default sorted column.</param>
            <param name="pDisplay">A pointer to a value that receives the index of the default display column.</param>
            <returns>Returns S_OK if successful, or a COM error value otherwise.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2.GetDefaultColumnState(System.UInt32,WSF.Shell.Enums.SHCOLSTATEF@)">
            <summary>
            Gets the default state for a specified column.
            </summary>
            <param name="iColumn">An integer that specifies the column number.</param>
            <param name="pcsFlags">A pointer to a value that contains flags that indicate the default column state. This parameter can include a combination of the following flags.</param>
            <returns>Returns S_OK if successful, or a COM error value otherwise.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2.GetDetailsEx(System.IntPtr,WSF.Shell.Interop.PROPERTYKEY,System.Object@)">
            <summary>
            Gets detailed information, identified by a property set identifier (FMTID) and a property identifier (PID), on an item in a Shell folder.
            </summary>
            <param name="pidl">A PIDL of the item, relative to the parent folder. This method accepts only single-level PIDLs. The structure must contain exactly one SHITEMID structure followed by a terminating zero. This value cannot be NULL.</param>
            <param name="pscid">A pointer to an SHCOLUMNID structure that identifies the column.</param>
            <param name="pv">A pointer to a VARIANT with the requested information. The value is fully typed. The value returned for properties from the property system must conform to the type specified in that property definition's typeInfo as the legacyType attribute.</param>
            <returns>Returns S_OK if successful, or a COM error value otherwise.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2.GetDetailsOf(System.IntPtr,System.UInt32,WSF.Shell.Interop.SHELLDETAILS@)">
            <summary>
            Gets detailed information, identified by a column index, on an item in a Shell folder.
            </summary>
            <param name="pidl">PIDL of the item for which you are requesting information. This method accepts only single-level PIDLs. The structure must contain exactly one SHITEMID structure followed by a terminating zero. If this parameter is set to NULL, the title of the information field specified by iColumn is returned.</param>
            <param name="iColumn">The zero-based index of the desired information field. It is identical to the column number of the information as it is displayed in a Windows Explorer Details view.</param>
            <param name="psd">The zero-based index of the desired information field. It is identical to the column number of the information as it is displayed in a Windows Explorer Details view.</param>
            <returns>Returns S_OK if successful, or a COM error value otherwise.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2.MapColumnToSCID(System.UInt32,WSF.Shell.Interop.PROPERTYKEY@)">
            <summary>
            Converts a column to the appropriate property set ID (FMTID) and property ID (PID).
            </summary>
            <param name="iColumn">The column ID.</param>
            <param name="pscid">A pointer to an SHCOLUMNID structure containing the FMTID and PID.</param>
            <returns>Returns S_OK if successful, or a COM error value otherwise.</returns>
        </member>
        <member name="T:WSF.Shell.Interop.Knownfolders.KnownFolderProperties">
             <summary>
             Store property values for a known folder.
             This class holds the information returned in the KNOWNFOLDER_DEFINITION structure,
             and resources referenced by fields in NativeFolderDefinition, such as icon and tool tip.
            
             https://msdn.microsoft.com/en-us/library/windows/desktop/bb773325(v=vs.85).aspx
             </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.#ctor(WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative,WSF.Shell.Interop.Interfaces.KnownFolders.NativeFolderDefinition)">
            <summary>
            Class constructor fron internal structure.
            </summary>
            <param name="knownFolderNative"></param>
            <param name="nativeFolderDefinition"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.#ctor">
            <summary>
            Hidden class constructor.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.FolderId">
            <summary>
            Gets the KnownFolderId of this Known Folder object (<seealso cref="T:WSF.IDs.KF_ID"/>).
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.Path">
            <summary>
            Gets the path of this known folder (if any)
            
            <seealso cref="P:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.IsPathExists"/> and <see cref="P:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.IsExistsInFileSystem"/>
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.IsExistsInFileSystem">
            <summary>
            Gets whether the known folder object managed in this object is a folder
            or file objects that are part of the file system,
            that is, its a file, directory, or root directory.
            
            A known folder with <see cref="P:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.IsExistsInFileSystem"/> = true also
            has <see cref="P:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.IsPathExists"/> = true but 
            <see cref="P:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.IsPathExists"/> = true does not require a particular value in
            <see cref="P:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.IsExistsInFileSystem"/>.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.IsPathExists">
            <summary>
            Gets whether the known folder has a path - that is, it has a path
            in the Path property but not necessarily a path in the file system.
            
            <seealso cref="P:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.Path"/> and <see cref="P:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.IsExistsInFileSystem"/>
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.PidlIdList">
            <summary>
            Gets the Pidl Id List in the form of a standard .Net object.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.GetStringResource(System.String)">
            <summary>
            Gets a string resource given a resource Id
            
            E.g: Given "some.dll,-34" returns a localized string: "ItemName"
            </summary>
            <param name="resourceId">The resource Id</param>
            <returns>The string resource corresponding to the given resource Id. Returns null if the resource id
            is invalid or the string cannot be retrieved for any other reason.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.IsIconResourceIdValid(System.String)">
            <summary>
            Determines whether the string in <paramref name="iconResourceId"/> contains
            a valid resource id reference of the sample form 'dll, -3'.
            
            Call this method without parameter to determine this for
            the <see cref="P:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.IconResourceId"/> property contained in this object.
            </summary>
            <param name="iconResourceId"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderProperties.ResetIconResourceId(System.String,System.Int32)">
            <summary>
            Resets an icons resource id. Use this property to overwrite available
            values or consider alternative options for retrieving the correct resource id string.
            </summary>
            <param name="filename"></param>
            <param name="index"></param>
        </member>
        <member name="T:WSF.Shell.Interop.Knownfolders.KnownFolderHelper">
            <summary>
            Creates the helper class for known folders.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderHelper.FromPIDL(System.IntPtr)">
            <summary>
            Returns the native known folder object given a PID list or null
            if known folder is not available on the local system.
            </summary>
            <param name="pidl"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderHelper.FromPIDL(WSF.Shell.Pidl.IdList)">
            <summary>
            Gets a <see cref="T:WSF.Shell.Interop.ShellFolders.KnownFolderNative"/> object from an <see cref="T:WSF.Shell.Pidl.IdList"/>
            based PIDL if this represents a knownfolder, or otherwise, null.
            </summary>
            <param name="ashellListId"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderHelper.GetDesktop">
            <summary>
            Returns the <see cref="T:WSF.Shell.Interop.ShellFolders.KnownFolderNative"/> object that represents the desktop object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderHelper.FromKnownFolderGuid(System.Guid)">
            <summary>
            Returns a known folder given a globally unique identifier.
            </summary>
            <param name="knownFolderId">A GUID for the requested known folder.</param>
            <returns>A known folder representing the specified name.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the given Known Folder ID is invalid.</exception>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderHelper.FromPath(System.String,System.Nullable{System.Boolean})">
            <summary>
            Returns a known folder given its shell path, such as <c>C:\users\public\documents</c> or 
            <c>::{645FF040-5081-101B-9F08-00AA002F954E}</c> for the Recycle Bin.
            </summary>
            <param name="path">The path for the requested known folder; either a physical path or a virtual path.</param>
            <param name="IsSpecialPath"></param>
            <returns>A known folder representing the specified name.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderHelper.FromCanonicalName(System.String)">
            <summary>
            Returns the known folder given its canonical name.
            See <see cref="P:WSF.Shell.Interop.Interfaces.Knownfolders.IKnownFolderProperties.CanonicalName"/>
            </summary>
            <param name="canonicalName">A non-localized canonical name for the known folder, such as 'MyComputerFolder'.</param>
            <returns>A known folder representing the specified name.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the given canonical name is invalid or if the KnownFolder could not be created.</exception>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderHelper.GetPath(System.Boolean@,WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative)">
            <summary>
            Gets the path of this this known folder or null if known folder is not
            available or does not have a representation in the file system.
            </summary>
            <param name="fileExists">
            Returns false if the folder is virtual, or a boolean
            value that indicates whether this known folder exists.
            </param>
            <param name="knownFolderNative">Native IKnownFolder reference</param>
            <returns>
            A <see cref="T:System.String"/> containing the path, or <see cref="F:System.String.Empty"/>
            if this known folder does not exist.
            </returns>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderHelper.GetFolderProperties(WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative)">
            <summary>
            Populates an object that contains a known folder's properties.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderHelper.GetFolderPropertiesFromPath(System.String)">
            <summary>
            Populates an object that contains a known folder's properties
            as specified by a special path stated in <paramref name="path"/>.
            </summary>
            <param name="path">The path for the requested known folder; (a virtual path).</param>
            <returns>A known folder representing the specified name.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderHelper.GetAllFolders">
            <summary>
            Gets a strongly-typed read-only collection of all the registered known folders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderHelper.GetKnownFolderPath(System.String)">
            <summary>
            Gets the actual file system path (e.g.: 'C:\Windows') for a KnownfolderID.
            
            The <paramref name="knownfolderIdPath"/> is expected to follow the format
            in <seealso cref="T:WSF.IDs.KF_IID"/> definitions.
            </summary>
            <param name="knownfolderIdPath">Identifies the known folder in question</param>
            <returns>null if path does not exist or the actual path.</returns>
        </member>
        <member name="T:WSF.Shell.Interop.Knownfolders.KnownFolderManagerClass">
            <summary>
            https://docs.microsoft.com/en-us/windows/desktop/api/shobjidl_core/nn-shobjidl_core-iknownfoldermanager
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Knownfolders.KnownFolderManagerClass.GetFolderIds(System.IntPtr@,System.UInt32@)">
            <summary>
            Gets an array of all registered known folder IDs.
            This can be used in enumerating all known folders.
            </summary>
            <param name="folders"></param>
            <param name="count"></param>
        </member>
        <member name="T:WSF.Shell.Interop.ShellFolders.KnownFolderNative">
            <summary>
            Class wraps <see cref="T:WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative"/> COM interface to ensure
            correct memory management via <see cref="T:System.IDisposable"/> pattern.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.KnownFolderNative.#ctor(WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative)">
            <summary>
            Class constructor from <see cref="T:WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative"/> interface.
            </summary>
            <param name="knownFolderNative"></param>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.KnownFolderNative.#ctor(System.IntPtr)">
            <summary>
            Class constructor from <see cref="T:System.IntPtr"/>.
            </summary>
            <param name="intPtrKnownFolderNative"></param>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.KnownFolderNative.InitObject(System.IntPtr,WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative)">
            <summary>
            Initializr objrct from <paramref name="intPtrKnownFolderNative"/>
            or <paramref name="iknownfolder"/>. You should use only one
            parameter here and set the other to default if necessary.
            </summary>
            <param name="intPtrKnownFolderNative"></param>
            <param name="iknownfolder"></param>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.KnownFolderNative.#ctor">
            <summary>
            Hidden class constructor
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.ShellFolders.KnownFolderNative.Obj">
            <summary>
            Gets the encapsulated <see cref="T:WSF.Shell.Interop.Interfaces.KnownFolders.IKnownFolderNative"/> interface
            to let clients invoke a method on this interface.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.KnownFolderNative.IsFileSystem">
            <summary>
            Gets whether the known folder object managed in this object is a folder
            or file objects that is part of the file system,
            that is, its a file, directory, or root directory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.KnownFolderNative.KnownFolderToPIDL">
            <summary>
            Calls the GetIDList method in the wrapped IKnownFolder interface to retrieve the ItemIdList
            for this KnownFolderItem.
            </summary>
            <returns>Type: PIDLIST_ABSOLUTE*
            When this method returns, contains the address of an absolute PIDL.
            The caller is responsible for freeing the returned PIDL when it is no longer needed by calling ILFree.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.KnownFolderNative.KnownFolderToIdList">
            <summary>
            Calls the GetIDList method in the wrapped IKnownFolder interface to retrieve the ItemIdList
            for this KnownFolderItem.
            </summary>
            <returns>Type: PIDLIST_ABSOLUTE*
            When this method returns, contains the address of an absolute PIDL
            in its equivalent ItemIdList form.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.KnownFolderNative.GetId">
            <summary>
            Returns the unique KnownFolder GUID Id of this special folder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.KnownFolderNative.GetPathShell">
            <summary>
            Returns the unique GUID Id (logical path) of this special folder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.KnownFolderNative.GetPath">
            <summary>
            Retrieves the physical path of a known folder as a string or null
            if the special folder has no physical representation in the file system.
            
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb761762(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.KnownFolderNative.Dispose">
            <summary>
            Standard dispose method of the <seealso cref="T:System.IDisposable" /> interface.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.KnownFolderNative.Dispose(System.Boolean)">
            <summary>
            Source: http://www.codeproject.com/Articles/15360/Implementing-IDisposable-and-the-Dispose-Pattern-P
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:WSF.Shell.Interop.ShellFolders.GenericCOMFolder`1">
            <summary>
            Class wraps COM interfaces to ensure correct memory management via
            <see cref="T:System.IDisposable"/> pattern. This class can be used with various
            COM interfaces such as IShellItem or IShellFolder and so forth...
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.GenericCOMFolder`1.#ctor(`0)">
            <summary>
            Class constructor from (eg: <see cref="T:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2"/>) interface.
            </summary>
            <param name="iCOMInterface"></param>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.GenericCOMFolder`1.#ctor(System.IntPtr)">
            <summary>
            Class constructor from <see cref="T:System.IntPtr"/>.
            </summary>
            <param name="intPtriCOMInterface"></param>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.GenericCOMFolder`1.InitObject(System.IntPtr,`0)">
            <summary>
            Initializr object from <paramref name="intPtrICOMInterface"/>
            or <paramref name="ICOMInterface"/>. You should use only one
            parameter here and set the other to default if necessary.
            </summary>
            <param name="intPtrICOMInterface"></param>
            <param name="ICOMInterface"></param>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.GenericCOMFolder`1.#ctor">
            <summary>
            Hidden class constructor
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.ShellFolders.GenericCOMFolder`1.Obj">
            <summary>
            Gets an encapsulated (eg: <see cref="T:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2"/>) interface
            to let clients invoke a method on this interface.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.GenericCOMFolder`1.Dispose">
            <summary>
            Standard dispose method of the <seealso cref="T:System.IDisposable" /> interface.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.GenericCOMFolder`1.Dispose(System.Boolean)">
            <summary>
            Source: http://www.codeproject.com/Articles/15360/Implementing-IDisposable-and-the-Dispose-Pattern-P
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:WSF.Shell.Interop.ShellFolders.ShellFolder">
            <summary>
            Class wraps <see cref="T:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2"/> COM interface to ensure
            correct memory management via <see cref="T:System.IDisposable"/> pattern.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellFolder.#ctor(WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2)">
            <summary>
            Class constructor from <see cref="T:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2"/> interface.
            </summary>
            <param name="iShellFolder2"></param>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellFolder.#ctor(System.IntPtr)">
            <summary>
            Class constructor from <see cref="T:System.IntPtr"/>.
            </summary>
            <param name="intPtrShellFolder2"></param>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellFolder.InitObject(System.IntPtr,WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2)">
            <summary>
            Initialize object from <paramref name="intPtrShellFolder2"/>
            or <paramref name="iShellFolder2"/>. You should use only one
            parameter here and set the other to default if necessary.
            </summary>
            <param name="intPtrShellFolder2"></param>
            <param name="iShellFolder2"></param>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellFolder.#ctor">
            <summary>
            Hidden class constructor
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.ShellFolders.ShellFolder.Obj">
            <summary>
            Gets the encapsulated <see cref="T:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2"/> interface
            to let clients invoke a method on this interface.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellFolder.GetShellFolderName(System.IntPtr,WSF.Shell.Enums.SHGDNF)">
            <summary>
            Gets parse and display name items for a ShellFolder2 object.
            
            Tpically using either values for
            <see cref="F:WSF.Shell.Enums.SHGDNF.SHGDN_FORPARSING"/>
            <see cref="F:WSF.Shell.Enums.SHGDNF.SHGDN_NORMAL"/> <paramref name="uFlags"/>
            </summary>
            <param name="ptr"></param>
            <param name="uFlags"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellFolder.Dispose">
            <summary>
            Standard dispose method of the <seealso cref="T:System.IDisposable" /> interface.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellFolder.Dispose(System.Boolean)">
            <summary>
            Source: http://www.codeproject.com/Articles/15360/Implementing-IDisposable-and-the-Dispose-Pattern-P
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:WSF.Shell.Interop.ShellFolders.ShellFolderDesktop">
             <summary>
             Class wraps <see cref="T:WSF.Shell.Interop.Interfaces.ShellFolders.IShellFolder2"/> COM interface of the
             Desktop Windows Shell object to ensure correct memory management
             via <see cref="T:System.IDisposable"/> pattern.
            
             https://msdn.microsoft.com/en-us/library/windows/desktop/bb775075(v=vs.85).aspx
             </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellFolderDesktop.#ctor">
            <summary>
            Standard class constructor.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellHelpers.IsSpecialPath(System.String)">
            <summary>
            Determines if the given path follows the special folder reference
            format used in IIDs in <see cref="T:WSF.IDs.KF_IID"/>
            (refers to a special folder) or not.
            
            The Special case <see cref="F:WSF.Shell.Interop.ShellFolders.ShellHelpers.SpecialPath.ContainsSpecialPath"/> indicates
            a path that contains a special folderid together with something else and
            is, therefore, likely to require more processing than just retireving a folder.
            
            &lt;Drive>:\Users\&lt;User>\Desktop" -> ::{B4BFCC3A-DB2C-424C-B029-7FE99A87C641}"
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellHelpers.PIDLFromPath(System.String)">
            <summary>
            Converts a path representation into a PIDL
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellHelpers.PidlFromParsingName(System.String)">
             <summary>
             Gets the PIDL from a given parsing name as <see cref="T:System.IntPtr"/> reference
             or IntPtr.Zero if knownfolder could not be resolved.
            
             https://github.com/aybe/Windows-API-Code-Pack-1.1/blob/master/source/WindowsAPICodePack/Shell/Common/ShellHelper.cs
             </summary>
             <param name="name"></param>
             <returns>Type: PIDLIST_ABSOLUTE*
             The address of a pointer to a variable of type ITEMIDLIST that receives the item identifier list for the object.
             If an error occurs, then this parameter is set to NULL.
             The caller is responsible for freeing the returned PIDL when it is no longer needed by calling ILFree.</returns>
        </member>
        <member name="T:WSF.Shell.Interop.ShellFolders.ShellItem2">
            <summary>
            Class wraps <see cref="T:WSF.Shell.Interop.ShellFolders.ShellItem2"/> COM interface to ensure
            correct memory management via <see cref="T:System.IDisposable"/> pattern.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellItem2.#ctor(WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2)">
            <summary>
            Class constructor from <see cref="T:WSF.Shell.Interop.ShellFolders.ShellItem2"/> interface.
            </summary>
            <param name="iShellItem2"></param>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellItem2.#ctor(System.IntPtr)">
            <summary>
            Class constructor from <see cref="T:System.IntPtr"/>.
            </summary>
            <param name="intPtrShellFolder2"></param>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellItem2.InitObject(System.IntPtr,WSF.Shell.Interop.Interfaces.ShellItems.IShellItem2)">
            <summary>
            Initializr objrct from <paramref name="intPtrShellFolder2"/>
            or <paramref name="iShellItem2"/>. You should use only one
            parameter here and set the other to default if necessary.
            </summary>
            <param name="intPtrShellFolder2"></param>
            <param name="iShellItem2"></param>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellItem2.#ctor">
            <summary>
            Hidden class constructor
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.ShellFolders.ShellItem2.Obj">
            <summary>
            Gets the encapsulated <see cref="T:WSF.Shell.Interop.ShellFolders.ShellItem2"/> interface
            to let clients invoke a method on this interface.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellItem2.GetDisplayName(WSF.Shell.Enums.SIGDN)">
            <summary>
            Gets the display name of the shell item or null if name is not available.
            </summary>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellItem2.Dispose">
            <summary>
            Standard dispose method of the <seealso cref="T:System.IDisposable" /> interface.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ShellFolders.ShellItem2.Dispose(System.Boolean)">
            <summary>
            Source: http://www.codeproject.com/Articles/15360/Implementing-IDisposable-and-the-Dispose-Pattern-P
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:WSF.Shell.Interop.Messages.Resources.LocalizedMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.AddToMostRecentlyUsedListCannotBeChanged">
            <summary>
              Looks up a localized string similar to AddToMostRecentlyUsedList cannot be changed while dialog is showing..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.AlwaysAppendDefaultExtensionCannotBeChanged">
            <summary>
              Looks up a localized string similar to AlwaysAppendDefaultExtension cannot be changed while dialog is showing..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ComboBoxIndexOutsideBounds">
            <summary>
              Looks up a localized string similar to Index was outside the bounds of the CommonFileDialogComboBox..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.CommonFileDialogCanceled">
            <summary>
              Looks up a localized string similar to File name not available - dialog was canceled..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.CommonFileDialogCannotCreateShellItem">
            <summary>
              Looks up a localized string similar to Shell item could not be created..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.CommonFileDialogInvalidHandle">
            <summary>
              Looks up a localized string similar to Handle provided cannot be IntPtr.Zero..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.CommonFileDialogMultipleFiles">
            <summary>
              Looks up a localized string similar to Multiple files selected - the FileNames property should be used instead..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.CommonFileDialogMultipleItems">
            <summary>
              Looks up a localized string similar to Multiple files selected - the Items property should be used instead..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.CommonFileDialogNotClosed">
            <summary>
              Looks up a localized string similar to File name not available - dialog has not closed yet..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.CommonFileDialogRequiresVista">
            <summary>
              Looks up a localized string similar to Common File Dialog requires Windows Vista or later..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.CommonFiltersOffice">
            <summary>
              Looks up a localized string similar to Office Files.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.CommonFiltersPicture">
            <summary>
              Looks up a localized string similar to All Picture Files.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.CommonFiltersText">
            <summary>
              Looks up a localized string similar to Text Files.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.CreatePromptCannotBeChanged">
            <summary>
              Looks up a localized string similar to CreatePrompt cannot be changed while dialog is showing..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.DialogControlCollectionCannotRemoveControls">
            <summary>
              Looks up a localized string similar to Custom controls cannot be removed from a File dialog once added..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.DialogControlCollectionEmptyName">
            <summary>
              Looks up a localized string similar to Control name cannot be null or zero length..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.DialogControlCollectionMenuItemControlsCannotBeAdded">
            <summary>
              Looks up a localized string similar to CommonFileDialogMenuItem controls can only be added to CommonFileDialogMenu controls..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.DialogControlCollectionModifyingControls">
            <summary>
              Looks up a localized string similar to Modifying controls collection while dialog is showing is not supported..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.DialogControlCollectionMoreThanOneControl">
            <summary>
              Looks up a localized string similar to Dialog cannot have more than one control with the same name..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.DialogControlCollectionRemoveControlFirst">
            <summary>
              Looks up a localized string similar to Dialog control must be removed from current collections first..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.EnsureFileExistsCannotBeChanged">
            <summary>
              Looks up a localized string similar to EnsureFileExists cannot be changed while dialog is showing..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.EnsurePathExistsCannotBeChanged">
            <summary>
              Looks up a localized string similar to EnsurePathExists cannot be changed while dialog is showing..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.EnsureReadonlyCannotBeChanged">
            <summary>
              Looks up a localized string similar to EnsureReadOnly cannot be changed while dialog is showing..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.EnsureValidNamesCannotBeChanged">
            <summary>
              Looks up a localized string similar to EnsureValidNames cannot be changed while dialog is showing..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ExplorerBrowserBrowseToObjectFailed">
            <summary>
              Looks up a localized string similar to Browsing to object failed..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ExplorerBrowserFailedToGetView">
            <summary>
              Looks up a localized string similar to ExplorerBrowser failed to get current view..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ExplorerBrowserIconSize">
            <summary>
              Looks up a localized string similar to Unable to get icon size..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ExplorerBrowserItemCount">
            <summary>
              Looks up a localized string similar to Unexpected error retrieving item count..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ExplorerBrowserSelectedItemCount">
            <summary>
              Looks up a localized string similar to Unexpected error retrieving selected item count..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ExplorerBrowserUnexpectedError">
            <summary>
              Looks up a localized string similar to Unexpected error retrieving selection..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ExplorerBrowserViewItems">
            <summary>
              Looks up a localized string similar to Unexpected error retrieving view items..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FilePathNotExist">
            <summary>
              Looks up a localized string similar to The given path does not exist ({0}).
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderIdsUnknownGuid">
            <summary>
              Looks up a localized string similar to Guid does not identify a known folder..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeCategory">
            <summary>
              Looks up a localized string similar to ControlPanel Category.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeClassic">
            <summary>
              Looks up a localized string similar to ControlPanel Classic.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeCommunications">
            <summary>
              Looks up a localized string similar to Communications.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeCompressedFolder">
            <summary>
              Looks up a localized string similar to Compressed Folder.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeContacts">
            <summary>
              Looks up a localized string similar to Contacts.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeDocuments">
            <summary>
              Looks up a localized string similar to Documents.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeGames">
            <summary>
              Looks up a localized string similar to Games.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeGenericLibrary">
            <summary>
              Looks up a localized string similar to Generic Library.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeInvalid">
            <summary>
              Looks up a localized string similar to Invalid.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeLibrary">
            <summary>
              Looks up a localized string similar to Library.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeMusic">
            <summary>
              Looks up a localized string similar to Music.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeMusicIcons">
            <summary>
              Looks up a localized string similar to Music Icons.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeNetworkExplorer">
            <summary>
              Looks up a localized string similar to Network Explorer.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeNotSpecified">
            <summary>
              Looks up a localized string similar to Not Specified.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeOpenSearch">
            <summary>
              Looks up a localized string similar to Open Search.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeOtherUsers">
            <summary>
              Looks up a localized string similar to Other Users.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypePictures">
            <summary>
              Looks up a localized string similar to Pictures.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypePrinters">
            <summary>
              Looks up a localized string similar to Printers.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeRecordedTV">
            <summary>
              Looks up a localized string similar to RecordedTV.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeRecycleBin">
            <summary>
              Looks up a localized string similar to RecycleBin.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeSavedGames">
            <summary>
              Looks up a localized string similar to Saved Games.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeSearchConnector">
            <summary>
              Looks up a localized string similar to Search Connector.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeSearches">
            <summary>
              Looks up a localized string similar to Searches.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeSearchResults">
            <summary>
              Looks up a localized string similar to Generic SearchResults.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeSoftwareExplorer">
            <summary>
              Looks up a localized string similar to Software Explorer.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeUserFiles">
            <summary>
              Looks up a localized string similar to User Files.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeUserLibraries">
            <summary>
              Looks up a localized string similar to Users Libraries.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.FolderTypeVideos">
            <summary>
              Looks up a localized string similar to Videos.
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.IsExpandedModeCannotBeChanged">
            <summary>
              Looks up a localized string similar to IsExpandedMode cannot be changed while dialog is showing..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.JumpListCustomCategoriesDisabled">
            <summary>
              Looks up a localized string similar to Custom categories cannot be added while recent documents tracking is turned off..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.JumpListFileTypeNotRegistered">
            <summary>
              Looks up a localized string similar to The file type is not registered with this application..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.JumpListLinkPathRequired">
            <summary>
              Looks up a localized string similar to JumpListLink&apos;s path is required and cannot be null..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.JumpListLinkTitleRequired">
            <summary>
              Looks up a localized string similar to JumpListLink&apos;s title is required and cannot be null..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.JumpListNegativeOrdinalPosition">
            <summary>
              Looks up a localized string similar to Negative numbers are not allowed for the ordinal position..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.KnownFolderInvalidGuid">
            <summary>
              Looks up a localized string similar to Given Known Folder ID is invalid..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.KnownFolderParsingName">
            <summary>
              Looks up a localized string similar to Parsing name is invalid..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.MessageListenerCannotCreateWindow">
            <summary>
              Looks up a localized string similar to Creation of window has failed, view inner exception for details..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.MessageListenerClassNotRegistered">
            <summary>
              Looks up a localized string similar to Window class could not be registered, check inner exception for more details..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.MessageListenerFilterUnableToRegister">
            <summary>
              Looks up a localized string similar to Message filter registration failed..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.MessageListenerFilterUnknownListenerHandle">
            <summary>
              Looks up a localized string similar to No listener handled of that value is registered..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.MessageListenerNoWindowHandle">
            <summary>
              Looks up a localized string similar to Cannot create window on the listener thread because there is no existing window on the listener thread..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.NavigateToShortcutCannotBeChanged">
            <summary>
              Looks up a localized string similar to NavigateToShortcut cannot be changed while dialog is showing..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.NavigationLogNullParent">
            <summary>
              Looks up a localized string similar to Parent cannot be null..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.NotImplementedException">
            <summary>
              Looks up a localized string similar to The method or operation is not implemented..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.OverwritePromptCannotBeChanged">
            <summary>
              Looks up a localized string similar to OverwritePrompt cannot be changed while dialog is showing..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.PropertyCollectionCanonicalInvalidIndex">
            <summary>
              Looks up a localized string similar to This CanonicalName is not a valid index..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.PropertyCollectionInvalidIndex">
            <summary>
              Looks up a localized string similar to This PropertyKey is not a valid index..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.PropertyCollectionNullCanonicalName">
            <summary>
              Looks up a localized string similar to Argument CanonicalName cannot be null or empty..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.RadioButtonListIndexOutOfBounds">
            <summary>
              Looks up a localized string similar to Index was outside the bounds of the CommonFileDialogRadioButtonList..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.RestoreDirectoryCannotBeChanged">
            <summary>
              Looks up a localized string similar to RestoreDirectory cannot be changed while dialog is showing..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.SaveFileNullItem">
            <summary>
              Looks up a localized string similar to Retrieved a null shell item from dialog..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.SearchConditionFactoryInvalidProperty">
            <summary>
              Looks up a localized string similar to Given property key is invalid..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellExceptionDefaultText">
            <summary>
              Looks up a localized string similar to Shell Exception has occurred, look at inner exception for information..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellHelperGetParsingNameFailed">
            <summary>
              Looks up a localized string similar to GetParsingName has failed..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellInvalidCanonicalName">
            <summary>
              Looks up a localized string similar to The given CanonicalName is not valid..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellLibraryDefaultSaveFolderNotFound">
            <summary>
              Looks up a localized string similar to DefaultSaveFolder path not found..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellLibraryEmptyName">
            <summary>
              Looks up a localized string similar to LibraryName cannot be empty..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellLibraryFolderNotFound">
            <summary>
              Looks up a localized string similar to Folder path not found..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellLibraryInvalidFolderType">
            <summary>
              Looks up a localized string similar to Invalid FolderType Guid..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellLibraryInvalidLibrary">
            <summary>
              Looks up a localized string similar to The given known folder is not a valid library..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellObjectCannotGetDisplayName">
            <summary>
              Looks up a localized string similar to Can&apos;t get the display name..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellObjectCollectionArrayTooSmall">
            <summary>
              Looks up a localized string similar to Destination array too small, or invalid arrayIndex..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellObjectCollectionEmptyCollection">
            <summary>
              Looks up a localized string similar to Must have at least one shell object in the collection..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellObjectCollectionInsertReadOnly">
            <summary>
              Looks up a localized string similar to Cannot insert items into a read only list..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellObjectCollectionRemoveReadOnly">
            <summary>
              Looks up a localized string similar to Cannot remove items from a read only list..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellObjectCreationFailed">
            <summary>
              Looks up a localized string similar to Shell item could not be created..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellObjectFactoryPlatformNotSupported">
            <summary>
              Looks up a localized string similar to Shell Object creation requires Windows Vista or higher operating system..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellObjectFactoryUnableToCreateItem">
            <summary>
              Looks up a localized string similar to Unable to Create Shell Item..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellObjectWatcherRegisterFailed">
            <summary>
              Looks up a localized string similar to Registration for change notification has failed..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellObjectWatcherUnableToChangeEvents">
            <summary>
              Looks up a localized string similar to Unable to change watched events while listening..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellPropertyCannotSetProperty">
            <summary>
              Looks up a localized string similar to The value on this property cannot be set. To set the property value, use the ShellObject that is associated with this property..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellPropertyFactoryConstructorNotFound">
            <summary>
              Looks up a localized string similar to No constructor found matching requested argument types..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellPropertySetValue">
            <summary>
              Looks up a localized string similar to Unable to set property..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellPropertyUnableToGetWritableProperty">
            <summary>
              Looks up a localized string similar to Unable to get writable property store for this property..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellPropertyValueTruncated">
            <summary>
              Looks up a localized string similar to A value had to be truncated in a string or rounded if a numeric value. Set AllowTruncatedValue to true to prevent this exception..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellPropertyWindows7">
            <summary>
              Looks up a localized string similar to This Property is available on Windows 7 only..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellPropertyWrongType">
            <summary>
              Looks up a localized string similar to This property only accepts a value of type \&quot;{0}\&quot;..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellSearchFolderUnableToSetSortColumns">
            <summary>
              Looks up a localized string similar to Unable to set list of sort columns..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellSearchFolderUnableToSetVisibleColumns">
            <summary>
              Looks up a localized string similar to Unable to set visible columns..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellThumbnailCurrentSizeRange">
            <summary>
              Looks up a localized string similar to CurrentSize (width or height) cannot be greater than the maximum size: {0}..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellThumbnailDoesNotHaveThumbnail">
            <summary>
              Looks up a localized string similar to The current ShellObject does not have a thumbnail. Try using ShellThumbnailFormatOption.Default to get the icon for this item..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellThumbnailNoHandler">
            <summary>
              Looks up a localized string similar to The current ShellObject does not have a valid thumbnail handler or there was a problem in extracting the thumbnail for this specific shell object..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShellThumbnailSizeCannotBe0">
            <summary>
              Looks up a localized string similar to CurrentSize (width or height) cannot be 0..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShowHiddenItemsCannotBeChanged">
            <summary>
              Looks up a localized string similar to ShowHiddenItems cannot be changed while dialog is showing..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ShowPlacesListCannotBeChanged">
            <summary>
              Looks up a localized string similar to Show places list cannot be changed while dialog is showing..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.StockIconInvalidGuid">
            <summary>
              Looks up a localized string similar to The Stock Icon identifier given is invalid ({0})..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.TabbedThumbnailZeroChildHandle">
            <summary>
              Looks up a localized string similar to Child control&apos;s window handle cannot be zero..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.TabbedThumbnailZeroParentHandle">
            <summary>
              Looks up a localized string similar to Parent window handle cannot be zero..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.TasbarWindowProxyWindowSet">
            <summary>
              Looks up a localized string similar to TabbedThumbnailProxyWindow has not been set..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.TaskbarManagerValidWindowRequired">
            <summary>
              Looks up a localized string similar to A valid active Window is needed to update the Taskbar..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.TaskbarWindowEmptyButtonArray">
            <summary>
              Looks up a localized string similar to The array of buttons must contain at least 1 item..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.TaskbarWindowManagerButtonsAlreadyAdded">
            <summary>
              Looks up a localized string similar to Tool bar buttons for this window are already added. Please refer to the Remarks section of the AddButtons method for more information on updating the properties or hiding existing buttons..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.TaskbarWindowValueSet">
            <summary>
              Looks up a localized string similar to Value is already set. It cannot be set more than once..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ThumbnailManagerControlNotAdded">
            <summary>
              Looks up a localized string similar to The given control has not been added to the taskbar..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ThumbnailManagerInvalidHandle">
            <summary>
              Looks up a localized string similar to Window handle is invalid..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ThumbnailManagerPreviewAdded">
            <summary>
              Looks up a localized string similar to This preview has already been added..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ThumbnailManagerPreviewNotAdded">
            <summary>
              Looks up a localized string similar to The given preview has not been added to the taskbar..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ThumbnailToolbarManagerMaxButtons">
            <summary>
              Looks up a localized string similar to Maximum number of buttons allowed is 7..
            </summary>
        </member>
        <member name="P:WSF.Shell.Interop.Messages.Resources.LocalizedMessages.ThumbnailToolbarManagerNullEmptyArray">
            <summary>
              Looks up a localized string similar to Null or empty arrays are not allowed..
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.Messages.ShellException">
            <summary>
            An exception thrown when an error occurs while dealing with ShellObjects.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Messages.ShellException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.Messages.ShellException.#ctor(WSF.Shell.Enums.HRESULT)">
            <summary>
            Initializes a new exception using an HResult
            </summary>
            <param name="result">HResult error</param>
        </member>
        <member name="M:WSF.Shell.Interop.Messages.ShellException.#ctor(System.String)">
            <summary>
            Initializes an excpetion with a custom message.
            </summary>
            <param name="message">Custom message</param>
        </member>
        <member name="M:WSF.Shell.Interop.Messages.ShellException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes an exception with custom message and inner exception.
            </summary>
            <param name="message">Custom message</param>
            <param name="innerException">The original exception that preceded this exception</param>
        </member>
        <member name="M:WSF.Shell.Interop.Messages.ShellException.#ctor(System.String,System.Int32)">
            <summary>
            Initializes an exception with custom message and error code.
            </summary>
            <param name="message">Custom message</param>
            <param name="errorCode">HResult error code</param>
        </member>
        <member name="M:WSF.Shell.Interop.Messages.ShellException.#ctor(System.String,WSF.Shell.Enums.HRESULT)">
            <summary>
            Initializes an exception with custom message and error code.
            </summary>
            <param name="message"></param>
            <param name="errorCode"></param>
        </member>
        <member name="M:WSF.Shell.Interop.Messages.ShellException.#ctor(System.Int32)">
            <summary>
            Initializes an exception with custom message and inner exception.
            </summary>
            <param name="errorCode">HRESULT of an operation</param>        
        </member>
        <member name="M:WSF.Shell.Interop.Messages.ShellException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes an exception from serialization info and a context.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:WSF.Shell.Interop.ResourceIds.FileAttribute">
            <summary>
            File attributes are metadata values stored by the file system on disk and
            are used by the system and are available to developers via various file I/O APIs.
            For a list of related APIs and topics, see the See Also section.
            
            https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117(v=vs.85).aspx
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.ResourceIds.IconHelper">
            <summary>
            Gets the ResourceId (libaryName, index) of a shell icon to support
            IconExtaction and display in UI layer.
            
            Parts are based on SystemImageList created By LYCJ (2014), released under MIT license
            +-> Based on http://vbaccelerator.com/home/net/code/libraries/Shell_Projects/SysImageList/article.asp
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.ResourceIds.IconHelper.GetIconResourceId(WSF.Shell.Pidl.IdList,System.String@,System.Int32@)">
            <summary>
            Gets an icons reource id if available in the format:
            "filename, index"
            where the first part is a string and the 2nd part is a negativ integer number).
            
            This format is usally used by the Windows Shell libraries so we use it here
            to add missing ResourceIds.
            </summary>
            <param name="parentIdList"></param>
            <param name="filename"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.ResourceIds.IconHelper.FromPidl(WSF.Shell.Pidl.IdList,System.Boolean,System.Boolean,WSF.Shell.Interop.ResourceIds.IconSize,WSF.Shell.Interop.ResourceIds.ShellIconStateConstants)">
            <summary>
            Gets the ResourceId (libararyName, index) of a shell icon
            based on an <see cref="T:WSF.Shell.Pidl.IdList"/> object
            to support IconExtaction and display in UI layer.
            </summary>
            <param name="ilPidl"></param>
            <param name="isDirectory"></param>
            <param name="forceLoadFromDisk"></param>
            <param name="size"></param>
            <param name="iconState"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Interop.ResourceIds.IconHelper.FromPidl(System.IntPtr,System.Boolean,System.Boolean,WSF.Shell.Interop.ResourceIds.IconSize,WSF.Shell.Interop.ResourceIds.ShellIconStateConstants)">
            <summary>
            Gets the ResourceId (libararyName, index) of a shell icon
            based on an <see cref="T:System.IntPtr"/> formated pidl id-list.
            to support IconExtaction and display in UI layer.
            
            The caller is responsible for freeing the pidl in <paramref name="ptrPidl"/>.
            </summary>
            <param name="forceLoadFromDisk"></param>
            <param name="iconState"></param>
            <param name="isDirectory"></param>
            <param name="ptrPidl"></param>
            <param name="size"></param>
        </member>
        <member name="M:WSF.Shell.Interop.ResourceIds.IconHelper.isXpOrAbove">
            <summary>
            Determines if we run on Windows XP or later version of Windows. 
            </summary>
            <returns>true if current verion is Windows XP or later, false otherwise.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.ResourceIds.IconHelper.isVistaUp">
            <summary>
            Determines if we run on Windows Vista or later version of Windows. 
            </summary>
            <returns>true if current verion is Windows Vista or later, false otherwise.</returns>
        </member>
        <member name="T:WSF.Shell.Interop.ResourceIds.IconSize">
            <summary>
            Gets the size of a Windows Shell icon.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.ResourceIds.IconSize.small">
            <summary>
            Get a small icon
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.ResourceIds.IconSize.large">
            <summary>
            Get a large icon
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.ResourceIds.IconSize.extraLarge">
            <summary>
            Get a very large icon
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.ResourceIds.IconSize.jumbo">
            <summary>
            Get a extra large icon
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.ResourceIds.IconSize.thumbnail">
            <summary>
            Get a thumbnail sized icon
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.ResourceIds.ShellIconStateConstants">
            <summary>
            Flags specifying the state of the icon to draw from the Shell
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.ResourceIds.ShellIconStateConstants.ShellIconStateNormal">
            <summary>
            Get icon in normal state
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.ResourceIds.ShellIconStateConstants.ShellIconStateLinkOverlay">
            <summary>
            Put a link overlay on icon 
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.ResourceIds.ShellIconStateConstants.ShellIconStateSelected">
            <summary>
            show icon in selected state 
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.ResourceIds.ShellIconStateConstants.ShellIconStateOpen">
            <summary>
            get open icon 
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.ResourceIds.ShellIconStateConstants.ShellIconAddOverlays">
            <summary>
            apply the appropriate overlays
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.ShellItems.PropVariant">
            <summary>
            This class is not implemented, yet.
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.EXTRASEARCH">
            <summary>
            Used by an IEnumExtraSearch enumerator object to return information on the search objects supported by a Shell Folder object.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.EXTRASEARCH.guidSearch">
            <summary>
            A search object's GUID.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.EXTRASEARCH.wszFriendlyName">
            <summary>
            A Unicode string containing the search object's friendly name. It will be used to identify the search engine on the Search Assistant menu.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.EXTRASEARCH.wszUrl">
            <summary>
            The URL that will be displayed in the search pane.
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.IEnumExtraSearch">
            <summary>
            A standard OLE enumerator used by a client to determine the available search objects for a folder.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.IEnumExtraSearch.Next(System.UInt32,WSF.Shell.Interop.EXTRASEARCH[],System.UInt32@)">
            <summary>
            Used to request information on one or more search objects.
            </summary>
            <param name="celt">The number of search objects to be enumerated, starting from the current object. If celt is too large, the method should stop and return the actual number of search objects in pceltFetched.</param>
            <param name="rgelt">A pointer to an array of pceltFetched EXTRASEARCH structures containing information on the enumerated objects.</param>
            <param name="pceltFetched">The number of objects actually enumerated. This may be less than celt.</param>
            <returns>Returns S_OK if successful, or a COM-defined error code otherwise.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.IEnumExtraSearch.Skip(System.UInt32)">
            <summary>
            Skip a specified number of objects.
            </summary>
            <param name="celt">The number of objects to skip.</param>
            <returns>Returns S_OK if successful, or a COM-defined error code otherwise.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.IEnumExtraSearch.Reset">
            <summary>
            Used to reset the enumeration index to zero.
            </summary>
            <returns>Returns S_OK if successful, or a COM-defined error code otherwise.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.IEnumExtraSearch.Clone(WSF.Shell.Interop.IEnumExtraSearch@)">
            <summary>
            Used to request a duplicate of the enumerator object to preserve its current state.
            </summary>
            <param name="ppenum">A pointer to the IEnumExtraSearch interface of a new enumerator object.</param>
            <returns>Returns S_OK if successful, or a COM-defined error code otherwise.</returns>
        </member>
        <member name="T:WSF.Shell.Interop.IEnumIDList">
            <summary>
            Exposes a standard set of methods used to enumerate the pointers to item identifier lists (PIDLs) of the items in a Shell folder.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.IEnumIDList.Next(System.UInt32,System.IntPtr@,System.UInt32@)">
            <summary>
            Retrieves the specified number of item identifiers in the 
            enumeration sequence and advances the current position by 
            the number of items retrieved.
            </summary>
            <param name="celt">Number of elements in the array pointed to by the rgelt parameter.</param>
            <param name="rgelt">
            Address of an array of ITEMIDLIST pointers that receives the item identifiers. The implementation must allocate these item identifiers
            using the Shell's allocator (retrieved by the SHGetMalloc function). The calling application is responsible for freeing the item 
            identifiers using the Shell's allocator.
            </param>
            <param name="pceltFetched">
            Address of a value that receives a count of the item identifiers actually returned in rgelt. The count can be smaller than the value
            specified in the celt parameter. This parameter can be NULL only if celt is one.
            </param>
        </member>
        <member name="M:WSF.Shell.Interop.IEnumIDList.Skip(System.UInt32)">
            <summary>
            Skips over the specified number of elements in the enumeration sequence. 
            </summary>
            <param name="celt">Number of item identifiers to skip.</param>
        </member>
        <member name="M:WSF.Shell.Interop.IEnumIDList.Reset">
            <summary>
            Returns to the beginning of the enumeration sequence. 
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.IEnumIDList.Clone(WSF.Shell.Interop.IEnumIDList@)">
            <summary>
            Creates a new item enumeration object with the same contents and state as the current one. 
            </summary>
            <param name="ppenum">
            Address of a pointer to the new enumeration object. The calling application must
            eventually free the new object by calling its Release member function. 
            </param>
        </member>
        <member name="T:WSF.Shell.Interop.KnownFolders.KnownFolderGuids">
             <summary>
             KnownFolders contain the known folder ids for windows.
            
             The KNOWNFOLDERID constants represent GUIDs that identify standard folders registered with the
             system as Known Folders. These folders are installed with Windows Vista and later operating
             systems, and a computer will have only folders appropriate to it installed. These values are
             defined in Knownfolders.h.
             </summary>
             <remarks>
             See:
                 http://msdn.microsoft.com/en-us/library/windows/desktop/dd378457.aspx
             For details on known folders.
             </remarks>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_NetworkFolder">
            <summary>
            Display Name         Network
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_NETWORK, CSIDL_COMPUTERSNEARME
            Legacy Display Name  My Network Places
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ComputerFolder">
            <summary>
            Display Name          Computer
            Folder Type           VIRTUAL
            Default Path          Not applicable—virtual folder
            CSIDL Equivalent      CSIDL_DRIVES
            Legacy Display Name   My Computer
            Legacy Default Path   Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_InternetFolder">
            <summary>
            Display Name         Internet Explorer
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_INTERNET
            Legacy Display Name  Internet Explorer
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ControlPanelFolder">
            <summary>
            Display Name         Control Panel
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_CONTROLS
            Legacy Display Name  Control Panel
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_PrintersFolder">
            <summary>
            Display Name         Printers
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_PRINTERS
            Legacy Display Name  Printers and Faxes
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SyncManagerFolder">
            <summary>
            Display Name         Sync Center
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SyncSetupFolder">
            <summary>
            Display Name         Sync Setup
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ConflictFolder">
            <summary>
            Display Name          Conflicts
            Folder Type           VIRTUAL
            Default Path          Not applicable—virtual folder
            CSIDL Equivalent      None, new in Windows Vista
            Legacy Display Name   Not applicable. This KNOWNFOLDERID refers to the Windows Vista Synchronization Manager. It is not the folder referenced by the older ISyncMgrConflictFolder.
            Legacy Default Path   Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SyncResultsFolder">
            <summary>
            Display Name         Control Panel
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_CONTROLS
            Legacy Display Name  Control Panel
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_RecycleBinFolder">
            <summary>
            Display Name         Recycle Bin
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_BITBUCKET
            Legacy Display Name  Recycle Bin
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ConnectionsFolder">
            <summary>
            Display Name         Network Connections
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     CSIDL_CONNECTIONS
            Legacy Display Name  Network Connections
            Legacy Default Path  Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Fonts">
            <summary>
            Display Name         Fonts
            Folder Type          FIXED
            Default Path         %windir%\Fonts
            CSIDL Equivalent     CSIDL_FONTS
            Legacy Display Name  Fonts
            Legacy Default Path  %windir%\Fonts
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Desktop">
            <summary>
            Display Name         Desktop
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Desktop
            CSIDL Equivalent     CSIDL_DESKTOP, CSIDL_DESKTOPDIRECTORY
            Legacy Display Name  Desktop
            Legacy Default Path  %USERPROFILE%\Desktop
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Startup">
            <summary>
            Display Name         Startup
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Start Menu\Programs\StartUp
            CSIDL Equivalent     CSIDL_STARTUP, CSIDL_ALTSTARTUP
            Legacy Display Name  Startup
            Legacy Default Path  %USERPROFILE%\Start Menu\Programs\StartUp
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Programs">
            <summary>
            Display Name         Programs
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Start Menu\Programs
            CSIDL Equivalent     CSIDL_PROGRAMS
            Legacy Display Name  Programs
            Legacy Default Path  %USERPROFILE%\Start Menu\Programs
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_StartMenu">
            <summary>
            Display Name         Start Menu
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Start Menu
            CSIDL Equivalent     CSIDL_STARTMENU
            Legacy Display Name  Start Menu
            Legacy Default Path  %USERPROFILE%\Start Menu
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Recent">
            <summary>
            Display Name         Recent Items
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Recent
            CSIDL Equivalent     CSIDL_RECENT
            Legacy Display Name  My Recent Documents
            Legacy Default Path  %USERPROFILE%\Recent
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SendTo">
            <summary>
            Display Name         SendTo
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\SendTo
            CSIDL Equivalent     CSIDL_SENDTO
            Legacy Display Name  SendTo
            Legacy Default Path  %USERPROFILE%\SendTo
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Documents">
            <summary>
            Display Name         Documents
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Documents
            CSIDL Equivalent     CSIDL_MYDOCUMENTS, CSIDL_PERSONAL
            Legacy Display Name  My Documents
            Legacy Default Path  %USERPROFILE%\My Documents
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Favorites">
            <summary>
            Display Name         Favorites
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Favorites
            CSIDL Equivalent     CSIDL_FAVORITES, CSIDL_COMMON_FAVORITES
            Legacy Display Name  Favorites
            Legacy Default Path  %USERPROFILE%\Favorites
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_NetHood">
            <summary>
            Display Name         Network Shortcuts
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Network Shortcuts
            CSIDL Equivalent     CSIDL_NETHOOD
            Legacy Display Name  NetHood
            Legacy Default Path  %USERPROFILE%\NetHood
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_PrintHood">
            <summary>
            Display Name         Printer Shortcuts
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Printer Shortcuts
            CSIDL Equivalent     CSIDL_PRINTHOOD
            Legacy Display Name  PrintHood
            Legacy Default Path  %USERPROFILE%\PrintHood
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Templates">
            <summary>
            Display Name         Templates
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Templates
            CSIDL Equivalent     CSIDL_TEMPLATES
            Legacy Display Name  Templates
            Legacy Default Path  %USERPROFILE%\Templates
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_CommonStartup">
            <summary>
            Display Name          Startup
            Folder Type           COMMON
            Default Path          %ALLUSERSPROFILE%\Microsoft\Windows\Start Menu\Programs\StartUp
            CSIDL Equivalent      CSIDL_COMMON_STARTUP, CSIDL_COMMON_ALTSTARTUP
            Legacy Display Name   Startup
            Legacy Default Path   %ALLUSERSPROFILE%\Start Menu\Programs\StartUp
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_CommonPrograms">
            <summary>
            Display Name          Programs
            Folder Type           COMMON
            Default Path          %ALLUSERSPROFILE%\Microsoft\Windows\Start Menu\Programs
            CSIDL Equivalent      CSIDL_COMMON_PROGRAMS
            Legacy Display Name   Programs
            Legacy Default Path   %ALLUSERSPROFILE%\Start Menu\Programs
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_CommonStartMenu">
            <summary>
            Display Name          Start Menu
            Folder Type           COMMON
            Default Path          %ALLUSERSPROFILE%\Microsoft\Windows\Start Menu
            CSIDL Equivalent      CSIDL_COMMON_STARTMENU
            Legacy Display Name   Start Menu
            Legacy Default Path   %ALLUSERSPROFILE%\Start Menu
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_PublicDesktop">
            <summary>
            Display Name         Public Desktop
            Folder Type          COMMON
            Default Path         %PUBLIC%\Desktop
            CSIDL Equivalent     CSIDL_COMMON_DESKTOPDIRECTORY
            Legacy Display Name  Desktop
            Legacy Default Path  %ALLUSERSPROFILE%\Desktop
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ProgramData">
            <summary>
            Display Name         ProgramData
            Folder Type          FIXED
            Default Path         %ALLUSERSPROFILE% (%ProgramData%, %SystemDrive%\ProgramData)
            CSIDL Equivalent     CSIDL_COMMON_APPDATA
            Legacy Display Name  Application Data
            Legacy Default Path  %ALLUSERSPROFILE%\Application Data
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_CommonTemplates">
            <summary>
            Display Name          Templates
            Folder Type           COMMON
            Default Path          %ALLUSERSPROFILE%\Templates
            CSIDL Equivalent      CSIDL_COMMON_TEMPLATES
            Legacy Display Name   Templates
            Legacy Default Path   %ALLUSERSPROFILE%\Templates
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_PublicDocuments">
            <summary>
            Display Name         Public Documents
            Folder Type          COMMON
            Default Path         %PUBLIC%\Documents
            CSIDL Equivalent     CSIDL_COMMON_DOCUMENTS
            Legacy Display Name  Shared Documents
            Legacy Default Path  %ALLUSERSPROFILE%\Documents
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_RoamingAppData">
            <summary>
            Display Name         Roaming
            Folder Type          PERUSER
            Default Path         %APPDATA% (%USERPROFILE%\AppData\Roaming)
            CSIDL Equivalent     CSIDL_APPDATA
            Legacy Display Name  Application Data
            Legacy Default Path  %APPDATA% (%USERPROFILE%\Application Data)
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_LocalAppData">
            <summary>
            Display Name         Local
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA% (%USERPROFILE%\AppData\Local)
            CSIDL Equivalent     CSIDL_LOCAL_APPDATA
            Legacy Display Name  Application Data
            Legacy Default Path  %USERPROFILE%\Local Settings\Application Data
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_LocalAppDataLow">
            <summary>
            Display Name         LocalLow
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\AppData\LocalLow
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_InternetCache">
            <summary>
            Display Name         Temporary Internet Files
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\Temporary Internet Files
            CSIDL Equivalent     CSIDL_INTERNET_CACHE
            Legacy Display Name  Temporary Internet Files
            Legacy Default Path  %USERPROFILE%\Local Settings\Temporary Internet Files
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Cookies">
            <summary>
            Display Name         Cookies
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\Cookies
            CSIDL Equivalent     CSIDL_COOKIES
            Legacy Display Name  Cookies
            Legacy Default Path  %USERPROFILE%\Cookies
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_History">
            <summary>
            Display Name         History
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\History
            CSIDL Equivalent     CSIDL_HISTORY
            Legacy Display Name  History
            Legacy Default Path  %USERPROFILE%\Local Settings\History
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_System">
            <summary>
            Display Name         System32
            Folder Type          FIXED
            Default Path         %windir%\system32
            CSIDL Equivalent     CSIDL_SYSTEM
            Legacy Display Name  system32
            Legacy Default Path  %windir%\system32
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SystemX86">
            <summary>
            Display Name         System32
            Folder Type          FIXED
            Default Path         %windir%\system32
            CSIDL Equivalent     CSIDL_SYSTEMX86
            Legacy Display Name  system32
            Legacy Default Path  %windir%\system32
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Windows">
            <summary>
            Display Name         Windows
            Folder Type          FIXED
            Default Path         %windir%
            CSIDL Equivalent     CSIDL_WINDOWS
            Legacy Display Name  WINDOWS
            Legacy Default Path  %windir%
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Profile">
            <summary>
            Display Name         The user's username (%USERNAME%)
            Folder Type          FIXED
            Default Path         %USERPROFILE% (%SystemDrive%\Users\%USERNAME%)
            CSIDL Equivalent     CSIDL_PROFILE
            Legacy Display Name  The user's username (%USERNAME%)
            Legacy Default Path  %USERPROFILE% (%SystemDrive%\Documents and Settings\%USERNAME%)
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Pictures">
            <summary>
            Display Name         Pictures
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Pictures
            CSIDL Equivalent     CSIDL_MYPICTURES
            Legacy Display Name  My Pictures
            Legacy Default Path  %USERPROFILE%\My Documents\My Pictures
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ProgramFilesX86">
            <summary>
            Display Name         Program Files
            Folder Type          FIXED
            Default Path         %ProgramFiles% (%SystemDrive%\Program Files)
            CSIDL Equivalent     CSIDL_PROGRAM_FILESX86
            Legacy Display Name  Program Files
            Legacy Default Path  %ProgramFiles% (%SystemDrive%\Program Files)
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ProgramFilesCommonX86">
            <summary>
            Display Name         Common Files
            Folder Type          FIXED
            Default Path         %ProgramFiles%\Common Files
            CSIDL Equivalent     CSIDL_PROGRAM_FILES_COMMONX86
            Legacy Display Name  Common Files
            Legacy Default Path  %ProgramFiles%\Common Files
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ProgramFilesX64">
            <summary>
            Display Name         Program Files
            Folder Type          FIXED
            Default Path         %ProgramFiles% (%SystemDrive%\Program Files)
            CSIDL Equivalent     None
            Legacy Display Name  Program Files
            Legacy Default Path  %ProgramFiles% (%SystemDrive%\Program Files)
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ProgramFilesCommonX64">
            <summary>
            Display Name         Common Files
            Folder Type          FIXED
            Default Path         %ProgramFiles%\Common Files
            CSIDL Equivalent     None
            Legacy Display Name  Common Files
            Legacy Default Path  %ProgramFiles%\Common Files
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ProgramFiles">
            <summary>
            Display Name         Program Files
            Folder Type          FIXED
            Default Path         %ProgramFiles% (%SystemDrive%\Program Files)
            CSIDL Equivalent     CSIDL_PROGRAM_FILES
            Legacy Display Name  Program Files
            Legacy Default Path  %ProgramFiles% (%SystemDrive%\Program Files)
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ProgramFilesCommon">
            <summary>
            Display Name         Common Files
            Folder Type          FIXED
            Default Path         %ProgramFiles%\Common Files
            CSIDL Equivalent     CSIDL_PROGRAM_FILES_COMMON
            Legacy Display Name  Common Files
            Legacy Default Path  %ProgramFiles%\Common Files
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_UsersLibraries">
            <summary>
            UsersLibraries
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_UserProgramFiles">
            <summary>
            UserProgramFiles
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_UserProgramFilesCommon">
            <summary>
            UserProgramFilesCommon
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Ringtones">
            <summary>
            Ringtones
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_PublicRingtones">
            <summary>
            PublicRingtones
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_DocumentsLibrary">
            <summary>
            DocumentsLibrary
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_MusicLibrary">
            <summary>
            MusicLibrary
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_PicturesLibrary">
            <summary>
            PicturesLibrary
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_VideosLibrary">
            <summary>
            VideosLibrary
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_RecordedTVLibrary">
            <summary>
            RecordedTVLibrary
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_HomeGroup">
            <summary>
            OtherUsers
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_DeviceMetadataStore">
            <summary>
            DeviceMetadataStore
            </summary>        
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Libraries">
            <summary>
            Libraries
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_PublicLibraries">
            <summary>
            Display Name        Libraries
            Folder Type         COMMON
            Default Path        %ALLUSERSPROFILE%\Microsoft\Windows\Libraries
            CSIDL Equivalent    None, value introduced in Windows 7
            Legacy Display Name Not applicable
            Legacy Default Path Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_UserPinned">
            <summary>
            UserPinned
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ImplicitAppShortcuts">
            <summary>
            ImplicitAppShortcuts
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_AdminTools">
            <summary>
            Display Name        Administrative Tools
            Folder Type         PERUSER
            Default Path        %APPDATA%\Microsoft\Windows\Start Menu\Programs\Administrative Tools
            CSIDL Equivalent    CSIDL_ADMINTOOLS
            Legacy Display Name Administrative Tools
            Legacy Default Path %USERPROFILE%\Start Menu\Programs\Administrative Tools
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_CommonAdminTools">
            <summary>
            Display Name            Administrative Tools
            Folder Type             COMMON
            Default Path            %ALLUSERSPROFILE%\Microsoft\Windows\Start Menu\Programs\Administrative Tools
            CSIDL Equivalent        CSIDL_COMMON_ADMINTOOLS
            Legacy Display Name     Administrative Tools
            Legacy Default Path     %ALLUSERSPROFILE%\Start Menu\Programs\Administrative Tools
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Music">
            <summary>
            Display Name         Music
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Music
            CSIDL Equivalent     CSIDL_MYMUSIC
            Legacy Display Name  My Music
            Legacy Default Path  %USERPROFILE%\My Documents\My Music
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Videos">
            <summary>
            Display Name         Videos
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Videos
            CSIDL                CSIDL_MYVIDEO
            Legacy Display Name  My Videos
            Legacy Default Path  %USERPROFILE%\My Documents\My Videos
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_PublicPictures">
            <summary>
            Display Name         Public Pictures
            Folder Type          COMMON
            Default Path         %PUBLIC%\Pictures
            CSIDL Equivalent     CSIDL_COMMON_PICTURES
            Legacy Display Name  Shared Pictures
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Pictures
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_PublicMusic">
            <summary>
            Display Name         Public Music
            Folder Type          COMMON
            Default Path         %PUBLIC%\Music
            CSIDL Equivalent     CSIDL_COMMON_MUSIC
            Legacy Display Name  Shared Music
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Music
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_PublicVideos">
            <summary>
            Display Name         Public Videos
            Folder Type          COMMON
            Default Path         %PUBLIC%\Videos
            CSIDL Equivalent     CSIDL_COMMON_VIDEO
            Legacy Display Name  Shared Video
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Videos
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ResourceDir">
            <summary>
            Display Name         Resources
            Folder Type          FIXED
            Default Path         %windir%\Resources
            CSIDL Equivalent     CSIDL_RESOURCES
            Legacy Display Name  Resources
            Legacy Default Path  %windir%\Resources
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_LocalizedResourcesDir">
            <summary>
            Display Name         None
            Folder Type          FIXED
            Default Path         %windir%\resources\0409 (code page)
            CSIDL Equivalent     CSIDL_RESOURCES_LOCALIZED
            Legacy Display Name  None
            Legacy Default Path  %windir%\resources\0409 (code page)
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_CommonOEMLinks">
            <summary>
            Display Name        OEM Links
            Folder Type         COMMON
            Default Path        %ALLUSERSPROFILE%\OEM Links
            CSIDL Equivalent    CSIDL_COMMON_OEM_LINKS
            Legacy Display Name OEM Links
            Legacy Default Path %ALLUSERSPROFILE%\OEM Links
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_CDBurning">
            <summary>
            Display Name        Temporary Burn Folder
            Folder Type         PERUSER
            Default Path        %LOCALAPPDATA%\Microsoft\Windows\Burn\Burn
            CSIDL Equivalent    CSIDL_CDBURN_AREA
            Legacy Display Name CD Burning
            Legacy Default Path %USERPROFILE%\Local Settings\Application Data\Microsoft\CD Burning
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_UserProfiles">
            <summary>
            Display Name         Users
            Folder Type          FIXED
            Default Path         %SystemDrive%\Users
            CSIDL Equivalent     None, new for Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Playlists">
            <summary>
            Display Name         Playlists
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Music\Playlists
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SamplePlaylists">
            <summary>
            Display Name         Sample Playlists
            Folder Type          COMMON
            Default Path         %PUBLIC%\Music\Sample Playlists
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SampleMusic">
            <summary>
            Display Name         Sample Music
            Folder Type          COMMON
            Default Path         %PUBLIC%\Music\Sample Music
            CSIDL Equivalent     None
            Legacy Display Name  Sample Music
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Music\Sample Music
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SamplePictures">
            <summary>
            Display Name         Sample Pictures
            Folder Type          COMMON
            Default Path         %PUBLIC%\Pictures\Sample Pictures
            CSIDL Equivalent     None
            Legacy Display Name  Sample Pictures
            Legacy Default Path  %ALLUSERSPROFILE%\Documents\My Pictures\Sample Pictures
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SampleVideos">
            <summary>
            Display Name         Sample Videos
            Folder Type          COMMON
            Default Path         %PUBLIC%\Videos\Sample Videos
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_PhotoAlbums">
            <summary>
            Display Name         Slide Shows
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Pictures\Slide Shows
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Public">
            <summary>
            Display Name         Public
            Folder Type          FIXED
            Default Path         %PUBLIC% (%SystemDrive%\Users\Public)
            CSIDL Equivalent     None, new for Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ChangeRemovePrograms">
            <summary>
            Display Name        Programs and Features
            Folder Type         VIRTUAL
            Default Path        Not applicable—virtual folder
            CSIDL Equivalent    None
            Legacy Display Name Add or Remove Programs
            Legacy Default Path Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_AppUpdates">
            <summary>
            Display Name        Installed Updates
            Folder Type         VIRTUAL
            Default Path        Not applicable—virtual folder
            CSIDL Equivalent    None
            Legacy Display Name None, new in Windows Vista. In earlier versions of Microsoft Windows, the information on this page was included in Add or Remove Programs if the Show updates box was checked.
            Legacy Default Path Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_AddNewPrograms">
            <summary>
            Display Name        Get Programs
            Folder Type         VIRTUAL
            Default Path        Not applicable—virtual folder
            CSIDL Equivalent    None
            Legacy Display Name Add New Programs (found in the Add or Remove Programs item in the Control Panel)
            Legacy Default Path Not applicable—virtual folder
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Downloads">
            <summary>
            Display Name         Downloads
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Downloads
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_PublicDownloads">
            <summary>
            Display Name         Public Downloads
            Folder Type          COMMON
            Default Path         %PUBLIC%\Downloads
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SavedSearches">
            <summary>
            Display Name         Searches
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Searches
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_QuickLaunch">
            <summary>
            Display Name         Quick Launch
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Internet Explorer\Quick Launch
            CSIDL Equivalent     None
            Legacy Display Name  Quick Launch
            Legacy Default Path  %APPDATA%\Microsoft\Internet Explorer\Quick Launch
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Contacts">
            <summary>
            Display Name         Contacts
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Contacts
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SidebarParts">
            <summary>
            Display Name         Gadgets
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows Sidebar\Gadgets
            CSIDL Equivalent     None, new for Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SidebarDefaultParts">
            <summary>
            Display Name         Gadgets
            Folder Type          COMMON
            Default Path         %ProgramFiles%\Windows Sidebar\Gadgets
            CSIDL Equivalent     None, new for Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_PublicGameTasks">
            <summary>
            Display Name         GameExplorer
            Folder Type          COMMON
            Default Path         %ALLUSERSPROFILE%\Microsoft\Windows\GameExplorer
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_GameTasks">
            <summary>
            Display Name         GameExplorer
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\GameExplorer
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SavedGames">
            <summary>
            Display Name         Saved Games
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Saved Games
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Games">
            <summary>
            Display Name         Saved Games
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Saved Games
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SEARCH_MAPI">
            <summary>
            Display Name         Microsoft Office Outlook
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SEARCH_CSC">
            <summary>
            Display Name         Offline Files
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Links">
            <summary>
            Display Name         Links
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Links
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_UsersFiles">
            <summary>
            Display Name         The user's full name (for instance, Jean Philippe Bagel) entered when the user account was created.
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_SearchHome">
            <summary>
            Display Name         Search Results
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_OriginalImages">
            <summary>
            Display Name         Original Images
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows Photo Gallery\Original Images
            CSIDL Equivalent     None, new in Windows Vista
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_HomeGroupCurrentUser">
            <summary>
            Display Name         The user's username (%USERNAME%)
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_AccountPictures">
            <summary>
            Display Name         Account Pictures
            Folder Type          PERUSER
            Default Path         %APPDATA%\Microsoft\Windows\AccountPictures
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_PublicUserTiles">
            <summary>
            Display Name         Public Account Pictures
            Folder Type          COMMON
            Default Path         %PUBLIC%\AccountPictures
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_AppsFolder">
            <summary>
            Display Name         Applications
            Folder Type          VIRTUAL
            Default Path         Not applicable—virtual folder
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_ApplicationShortcuts">
            <summary>
            Display Name         Application Shortcuts
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\Application Shortcuts
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_RoamingTiles">
            <summary>
            Display Name         RoamingTiles
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\RoamingTiles
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_RoamedTileImages">
            <summary>
            Display Name         RoamedTileImages
            Folder Type          PERUSER
            Default Path         %LOCALAPPDATA%\Microsoft\Windows\RoamedTileImages
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.KnownFolders.KnownFolderGuids.FOLDERID_Screenshots">
            <summary>
            Display Name         Screenshots
            Folder Type          PERUSER
            Default Path         %USERPROFILE%\Pictures\Screenshots
            CSIDL Equivalent     None, value introduced in Windows 8
            Legacy Display Name  Not applicable
            Legacy Default Path  Not applicable
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.MSG">
            <summary>
            Contains message information from a thread's message queue.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.MSG.hwnd">
            <summary>
            A handle to the window whose window procedure receives the message. This member is NULL when the message is a thread message.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.MSG.message">
            <summary>
            The message identifier. Applications can only use the low word; the high word is reserved by the system.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.MSG.wParam">
            <summary>
            Additional information about the message. The exact meaning depends on the value of the message member.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.MSG.lParam">
            <summary>
            Additional information about the message. The exact meaning depends on the value of the message member.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.MSG.time">
            <summary>
            The time at which the message was posted.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.MSG.pt">
            <summary>
            The cursor position, in screen coordinates, when the message was posted.
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.POINT">
            <summary>
            The POINT structure defines the x- and y- coordinates of a point.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.POINT.X">
            <summary>
            The x-coordinate of the point.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.POINT.Y">
            <summary>
            The y-coordinate of the point.
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.PROPERTYKEY">
            <summary>
            Specifies the FMTID/PID identifier that programmatically identifies a property.
            Replaces SharpShell.Interop.SHCOLUMNID.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.PROPERTYKEY.fmtid">
            <summary>
            A unique GUID for the property.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.PROPERTYKEY.pid">
            <summary>
            A property identifier (PID). This parameter is not used as in SHCOLUMNID.
            It is recommended that you set this value to PID_FIRST_USABLE. Any value greater than or equal to 2 is acceptable.
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.SHELLDETAILS">
            <summary>
            Reports detailed information on an item in a Shell folder.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLDETAILS.fmt">
            <summary>
            The alignment of the column heading and the subitem text in the column.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLDETAILS.cxChar">
            <summary>
            The number of average-sized characters in the header.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLDETAILS.str">
            <summary>
            An STRRET structure that includes a string with the requested information.
            To convert this structure to a string, use StrRetToBuf or StrRetToStr.
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.SHELLEXECUTEINFO">
            <summary>
            Contains information used by ShellExecuteEx.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.cbSize">
            <summary>
            Required. The size of this structure, in bytes.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.fMask">
            <summary>
            Flags that indicate the content and validity of the other structure members.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.hwnd">
            <summary>
            Optional. A handle to the parent window, used to display any message boxes that the system might produce while executing this function. This value can be NULL.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.lpVerb">
            <summary>
            A string, referred to as a verb, that specifies the action to be performed. The set of available verbs depends on the particular file or folder. Generally, the actions available from an object's shortcut menu are available verbs. This parameter can be NULL, in which case the default verb is used if available. If not, the "open" verb is used. If neither verb is available, the system uses the first verb listed in the registry.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.lpFile">
            <summary>
            The address of a null-terminated string that specifies the name of the file or object on which ShellExecuteEx will perform the action specified by the lpVerb parameter. The system registry verbs that are supported by the ShellExecuteEx function include "open" for executable files and document files and "print" for document files for which a print handler has been registered. Other applications might have added Shell verbs through the system registry, such as "play" for .avi and .wav files. To specify a Shell namespace object, pass the fully qualified parse name and set the SEE_MASK_INVOKEIDLIST flag in the fMask parameter.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.lpParameters">
            <summary>
            Optional. The address of a null-terminated string that contains the application parameters. The parameters must be separated by spaces. If the lpFile member specifies a document file, lpParameters should be NULL.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.lpDirectory">
            <summary>
            Optional. The address of a null-terminated string that specifies the name of the working directory. If this member is NULL, the current directory is used as the working directory.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.nShow">
            <summary>
            Required. Flags that specify how an application is to be shown when it is opened; one of the SW_ values listed for the ShellExecute function. If lpFile specifies a document file, the flag is simply passed to the associated application. It is up to the application to decide how to handle it.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.hInstApp">
            <summary>
            [out] If SEE_MASK_NOCLOSEPROCESS is set and the ShellExecuteEx call succeeds, it sets this member to a value greater than 32. If the function fails, it is set to an SE_ERR_XXX error value that indicates the cause of the failure. Although hInstApp is declared as an HINSTANCE for compatibility with 16-bit Windows applications, it is not a true HINSTANCE. It can be cast only to an int and compared to either 32 or the following SE_ERR_XXX error codes.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.lpIDList">
            <summary>
            The address of an absolute ITEMIDLIST structure (PCIDLIST_ABSOLUTE) to contain an item identifier list that uniquely identifies the file to execute. This member is ignored if the fMask member does not include SEE_MASK_IDLIST or SEE_MASK_INVOKEIDLIST.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.lpClass">
            <summary>
            The address of a null-terminated string that specifies one of the following:
                A ProgId. For example, "Paint.Picture".
                A URI protocol scheme. For example, "http".
                A file extension. For example, ".txt".
                A registry path under HKEY_CLASSES_ROOT that names a subkey that contains one or more Shell verbs. This key will have a subkey that conforms to the Shell verb registry schema, such as
                shell\verb name
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.hkeyClass">
            <summary>
            A handle to the registry key for the file type. The access rights for this registry key should be set to KEY_READ. This member is ignored if fMask does not include SEE_MASK_CLASSKEY.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.dwHotKey">
            <summary>
            A keyboard shortcut to associate with the application. The low-order word is the virtual key code, and the high-order word is a modifier flag (HOTKEYF_). For a list of modifier flags, see the description of the WM_SETHOTKEY message. This member is ignored if fMask does not include SEE_MASK_HOTKEY.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.hIcon">
            <summary>
            A handle to the icon for the file type. This member is ignored if fMask does not include SEE_MASK_ICON. This value is used only in Windows XP and earlier. It is ignored as of Windows Vista.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHELLEXECUTEINFO.hProcess">
            <summary>
            A handle to the monitor upon which the document is to be displayed. This member is ignored if fMask does not include SEE_MASK_HMONITOR.
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.SHFILEINFO">
            <summary>
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb759792(v=vs.85).aspx
            Contains information about a file object.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHFILEINFO.hIcon">
            <summary>
            A handle to the icon that represents the file. You are responsible for destroying this handle with DestroyIcon when you no longer need it.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHFILEINFO.iIcon">
            <summary>
            The index of the icon image within the system image list.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHFILEINFO.dwAttributes">
            <summary>
            An array of values that indicates the attributes of the file object. For information about these values, see the IShellFolder::GetAttributesOf method.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHFILEINFO.szDisplayName">
            <summary>
            A string that contains the name of the file as it appears in the Windows Shell,
            or the path and file name of the file that contains the icon representing the file.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.SHFILEINFO.szTypeName">
            <summary>
            A string that describes the type of file.
            </summary>
        </member>
        <member name="T:WSF.Shell.Interop.STRRET">
            <summary>
            Contains strings returned from the IShellFolder interface methods.
            </summary>
        </member>
        <member name="M:WSF.Shell.Interop.STRRET.CreateUnicode(System.String)">
            <summary>
            Creates a unicode <see cref="T:WSF.Shell.Interop.STRRET"/> from a string.
            </summary>
            <param name="str">The string.</param>
            <returns>A unicode <see cref="T:WSF.Shell.Interop.STRRET"/> allocated on the shell allocator.</returns>
        </member>
        <member name="M:WSF.Shell.Interop.STRRET.GetStringValue">
            <summary>
            Gets the actual string value of a STRRET.
            </summary>
            <returns>The string represented by the STRRET.</returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:WSF.Shell.Interop.STRRET.STRRETTYPE">
            <summary>
            A value that specifies the desired format of the string. This can be one of the following values.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.STRRET.STRRETTYPE.STRRET_WSTR">
            <summary>
            The string is at the address specified by pOleStr member.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.STRRET.STRRETTYPE.STRRET_OFFSET">
            <summary>
            The uOffset member value indicates the number of bytes from the beginning of the item identifier list where the string is located.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.STRRET.STRRETTYPE.STRRET_CSTR">
            <summary>
            The string is returned in the cStr member.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.STRRET.uType">
            <summary>
            A value that specifies the desired format of the string.
            </summary>
        </member>
        <member name="F:WSF.Shell.Interop.STRRET.data">
            <summary>
            The string data.
            </summary>
        </member>
        <member name="T:WSF.Shell.Pidl.IdList">
            <summary>
            Reprents a Shell ID list that can be used to replace <see cref="T:System.IntPtr"/> based
            values. This replacement can be useful since the <see cref="T:WSF.Shell.Pidl.IdList"/> does not
            require additional memory management or <see cref="T:System.IDisposable"/> interface logics.
            
            Used with the <see cref="T:WSF.Shell.Pidl.PidlManager" /> and various other classes.
            See <see cref="M:WSF.Shell.Pidl.PidlManager.PidlToIdlist(System.IntPtr)" /> and
            <see cref="M:WSF.Shell.Pidl.PidlManager.IdListToPidl(WSF.Shell.Pidl.IdList)"/> for more details on conversion.
            
            https://docs.microsoft.com/de-de/windows/desktop/api/shtypes/ns-shtypes-_itemidlist
            
            Source: SharpShell on GitHub - https://github.com/dwmkerr/sharpshell
            </summary>
        </member>
        <member name="F:WSF.Shell.Pidl.IdList.ids">
            <summary>
            The ids.
            </summary>
        </member>
        <member name="M:WSF.Shell.Pidl.IdList.Create(System.Collections.Generic.IList{WSF.Shell.Pidl.ShellId})">
            <summary>
            Creates an IdList.
            </summary>
            <param name="ids">The ids.</param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Pidl.IdList.#ctor(System.Collections.Generic.IList{WSF.Shell.Pidl.ShellId})">
            <summary>
            Prevents a default instance of the <see cref="T:WSF.Shell.Pidl.IdList"/> class from being created.
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="P:WSF.Shell.Pidl.IdList.Ids">
            <summary>
            Gets the ids.
            </summary>
        </member>
        <member name="P:WSF.Shell.Pidl.IdList.Size">
            <summary>
            Gets the size of the internal <seealso cref="T:WSF.Shell.Pidl.ShellId"/> collection.
            </summary>
        </member>
        <member name="M:WSF.Shell.Pidl.IdList.ToParsingString">
            <summary>
            Converts an idlist to a parsing string.
            </summary>
            <returns>The id list in parsing string format.</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.IdList.FromParsingString(System.String)">
            <summary>
            Creates an idlist from parsing string format.
            </summary>
            <param name="str">The string.</param>
            <returns>The idlist represented by the string.</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.IdList.FromKnownFolderGuid(System.Guid)">
            <summary>
            Returns an <see cref="T:WSF.Shell.Pidl.IdList"/> (PIDL) for a known folder given a
            globally unique identifier.
            </summary>
            <param name="knownfolderId">A GUID for the requested known folder.</param>
            <returns>A known folder representing the specified name.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the given Known Folder ID is invalid.</exception>
        </member>
        <member name="M:WSF.Shell.Pidl.IdList.Matches(WSF.Shell.Pidl.IdList)">
            <summary>
            Determines whether two idlists are equal.
            </summary>
            <param name="idList">The ID list to compare against.</param>
            <returns>True if the id lists are equal, false otherwise.</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.IdList.GetRelativeChildId">
            <summary>
            Get Relative Child Id which is always the last id in the sequence
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Pidl.IdList.GetParentId">
            <summary>
            Get Parent Id which is always the first part
            minus last (child) id in the sequence.
            </summary>
            <returns>ParentId or null if the id list
            contains only 1 or less items (parent is unknown).</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.IdList.ToString">
            <summary>
            Standard override for debugging use.
            </summary>
            <returns></returns>
        </member>
        <member name="T:WSF.Shell.Pidl.TypOfPath">
            <summary>
            Defines a type of path to be retrieved from the WIndows Shell API.
            </summary>
        </member>
        <member name="F:WSF.Shell.Pidl.TypOfPath.PhysicalStoragePath">
            <summary>
            Can be empty if a knownfolder does not have a physical storage representation
            in a directory.
            </summary>
        </member>
        <member name="F:WSF.Shell.Pidl.TypOfPath.LogicalPath">
            <summary>
            Should always be available for knownfolders and normal folders.
                KnownFolder: '::{FDD39AD0-238F-46AF-ADB4-6C85480369C7}' for 'Documents'
            Non-KnownFolder: 'c:\'                                      for 'c:\'
            </summary>
        </member>
        <member name="T:WSF.Shell.Pidl.PidlManager">
            <summary>
            The PidlManager is a class that offers a set of functions for 
            working with PIDLs.
            </summary>
            <remarks>
            For more information on PIDLs, please see:
                http://msdn.microsoft.com/en-us/library/windows/desktop/cc144090.aspx
            Notes:
                http://msdn.microsoft.com/en-us/library/windows/desktop/cc144093.aspx
            </remarks>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.Decode(System.IntPtr)">
            <summary>
            Method converts an <see cref="T:System.IntPtr"/> based PIDL into a List of
            <see cref="T:WSF.Shell.Pidl.ShellId"/>s.
            </summary>
            <returns>List of <see cref="T:WSF.Shell.Pidl.ShellId"/>s for pidl object</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.GetDesktop">
            <summary>
            Gets the List of <see cref="T:WSF.Shell.Pidl.ShellId"/>s for the desktop known folder.
            </summary>
            <returns>List of <see cref="T:WSF.Shell.Pidl.ShellId"/>s for the desktop object</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.PidlToIdlist(System.IntPtr)">
            <summary>
            Converts a Win32 PIDL to a <see cref="T:WSF.Shell.Pidl.PidlManager"/>.<see cref="T:WSF.Shell.Pidl.IdList"/>.
            
            The PIDL is not freed by the PIDL manager, if it has been allocated by the
            shell it is the caller's responsibility to manage it.
            </summary>
            <param name="pidl">The pidl.</param>
            <returns>An <see cref="T:WSF.Shell.Pidl.IdList"/> that corresponds to the PIDL.</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.APidlToIdListArray(System.IntPtr,System.Int32)">
            <summary>
            Method converts an <see cref="T:System.IntPtr"/> based PIDL
            into an Array of <see cref="T:WSF.Shell.Pidl.ShellId"/>s.
            </summary>
            <returns>List of <see cref="T:WSF.Shell.Pidl.ShellId"/>s for pidl object</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.IdListToPidl(WSF.Shell.Pidl.IdList)">
            <summary>
            Method converts a List of <see cref="T:WSF.Shell.Pidl.ShellId"/>s into
            an <see cref="T:System.IntPtr"/> based PIDL.
            
            Caller must free memory using <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)"/>.
            </summary>
            <returns><see cref="T:System.IntPtr"/> based PIDL object</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.IdListFullToName(WSF.Shell.Pidl.IdList,WSF.Shell.Enums.SHGDNF)">
            <summary>
            Converts a given FULL <see cref="T:WSF.Shell.Pidl.IdList"/> based PIDL into a name
            (display name or parse name etc).
            
            A Pidl is considered FULL if it can be resolved
            underneath the desktop root item. That is, a relativeChild PIDL
            from another parent (eg.: C: drive) cannot be resolved here and
            results in null being returned.
            </summary>
            <param name="idListPidl"></param>
            <param name="parseOption"></param>
            <returns>Returns the requested string or null if <paramref name="idListPidl"/>
            cannot be resolved underneath the Desktop root item.</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.Combine(WSF.Shell.Pidl.IdList,WSF.Shell.Pidl.IdList)">
            <summary>
            Combines 2 lists of <see cref="T:WSF.Shell.Pidl.ShellId"/>s and returns a new
            list of <see cref="T:WSF.Shell.Pidl.ShellId"/>s. 
            </summary>
            <returns><see cref="T:System.IntPtr"/> based PIDL object</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.CombineParentChild(WSF.Shell.Pidl.IdList,WSF.Shell.Pidl.IdList)">
            <summary>
            Combine two IdLists - avoids processing the first IdList if it appears
            to be null when parentIdList and relativeChild Ids are merged and
            parentIdList is the desktop.
            </summary>
            <param name="folderIdList"></param>
            <param name="folderItemIdList"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.FreeCoTaskMem(System.IntPtr)">
            <summary>
            Memory management helper function to remove a given <see cref="T:System.IntPtr"/>
            from allocated memory.
            </summary>
            <returns>The default value for <see cref="T:System.IntPtr"/>
            which should be used to reset the parameter passed in.</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.ILFree(System.IntPtr)">
            <summary>
            Memory management helper function to remove a given <see cref="T:System.IntPtr"/>
            formated ItemIdList from allocated memory.
            https://msdn.microsoft.com/en-us/library/windows/desktop/cc144089(v=vs.85).aspx#unknown_38608
            </summary>
            <returns>The default value for <see cref="T:System.IntPtr"/>
            which should be used to reset the parameter passed in.</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.PidlsToAPidl(System.IntPtr[])">
            <summary>
            Returns one <see cref="T:System.IntPtr"/> based PIDL merged from the
            given array of PIDLs.
            </summary>
            <param name="pidls"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.GetPidlDisplayName(System.IntPtr)">
            <summary>
            Gets the display name for a given <see cref="T:System.IntPtr"/> based PIDL.
            </summary>
            <returns>the display name as string</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.GetPidlDisplayName(WSF.Shell.Pidl.IdList)">
            <summary>
            Gets the display name for a given <see cref="T:WSF.Shell.Pidl.IdList"/> based PIDL.
            </summary>
            <returns>the display name as string</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.HasNoPIDL(System.String)">
            <summary>
            Identifies knowfolder by their special id and indicates whether these are known
            to have no PIDL or not.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.GetPIDLFromPath(System.String)">
            <summary>
            Converts a path representation 'C:\' into an
            <see cref="T:System.IntPtr"/> formated PIDL representation.
            
            The memory of the PIDL returned must be freed with
            <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)"/> by the caller.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.GetPathFromPIDL(System.IntPtr,WSF.Shell.Pidl.TypOfPath)">
            <summary>
            Converts a <see cref="T:System.IntPtr"/> formated PIDL representation
            into a path representation 'C:\'.
            
            The memory of the PIDL passed in must be freed
            (<see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)"/>) by the caller.
            </summary>
            <param name="pidl"></param>
            <param name="pathType"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.GetPathFromPIDL(WSF.Shell.Pidl.IdList,WSF.Shell.Pidl.TypOfPath)">
            <summary>
            Converts a <see cref="T:WSF.Shell.Pidl.IdList"/> formated PIDL representation
            into a path (parse name) representation 'C:\'.
            </summary>
            <param name="idList"></param>
            <param name="pathType"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.GetParentIdListFromPath(System.String,WSF.Shell.Pidl.IdList@,WSF.Shell.Pidl.IdList@)">
            <summary>
            Gets the parent IdList (parent PIDL) if available and a
            relative child idList (relative child PIDL).
            </summary>
            <param name="originalPath"></param>
            <param name="parentList"></param>
            <param name="relativeChild"></param>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Pidl.PidlManager.GetParentChildIdList(WSF.Shell.Pidl.IdList,WSF.Shell.Pidl.IdList@,WSF.Shell.Pidl.IdList@)">
            <summary>
            Method attempts to find that parent of a known folder by looking at the
            ParentId field in the associated <see cref="T:WSF.Shell.Interop.Knownfolders.KnownFolderProperties"/> object
            and returns the new parent and child <see cref="T:WSF.Shell.Pidl.IdList"/>s on success.
            </summary>
            <param name="ashellListId"></param>
            <param name="parentList"></param>
            <param name="relativeChild"></param>
            <returns>True if known folder parent was available in ParentId field,
            otherwise false.</returns>
        </member>
        <member name="T:WSF.Shell.Pidl.ShellId">
            <summary>
            A ShellId is a representation of a shell item that makes up an id list.
            Simply put, a ShellId names a Shell Item uniquely in the context of it's
            parent Shell Folder.
            
            Source: SharpShell on GitHub - https://github.com/dwmkerr/sharpshell
            </summary>
        </member>
        <member name="F:WSF.Shell.Pidl.ShellId._id">
            <summary>
            The identifier.
            </summary>
        </member>
        <member name="M:WSF.Shell.Pidl.ShellId.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:WSF.Shell.Pidl.ShellId"/> class.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:WSF.Shell.Pidl.ShellId.FromString(System.String)">
            <summary>
            Creates a new Shell ID from a string.
            </summary>
            <param name="str">The string.</param>
            <returns>A new Shell ID from the given string.</returns>
        </member>
        <member name="M:WSF.Shell.Pidl.ShellId.FromData(System.Byte[])">
            <summary>
            Creates a Shell ID frm raw data.
            </summary>
            <param name="data">The data.</param>
            <returns>A new Shell ID from the given data.</returns>
            <exception cref="T:System.NullReferenceException">'data' cannot be null.</exception>
            <exception cref="T:System.InvalidOperationException">'data' must contain data.</exception>
        </member>
        <member name="M:WSF.Shell.Pidl.ShellId.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WSF.Shell.Pidl.ShellId.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WSF.Shell.Pidl.ShellId.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:WSF.Shell.Pidl.ShellId.RawId">
            <summary>
            Gets the raw identifier.
            </summary>
        </member>
        <member name="P:WSF.Shell.Pidl.ShellId.Length">
            <summary>
            Gets the length of the identifier.
            </summary>
        </member>
        <member name="M:WSF.Shell.Pidl.ShellId.AsUTF8">
            <summary>
            Gets a UTF8 encoded string that is human readable (although its hex number display)
            and denotes the contents of this object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.Pidl.ShellId.AsASCII">
            <summary>
            Gets an ASCII encoded string that is human readable (although its hex number display)
            and denotes the contents of this object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:WSF.Shell.PropertyKey">
            <summary>
            Defines a unique key for a Shell Property
            </summary>
        </member>
        <member name="P:WSF.Shell.PropertyKey.FormatId">
            <summary>
            A unique GUID for the property
            </summary>
        </member>
        <member name="P:WSF.Shell.PropertyKey.PropertyId">
            <summary>
             Property identifier (PID)
            </summary>
        </member>
        <member name="M:WSF.Shell.PropertyKey.#ctor(System.Guid,System.Int32)">
            <summary>
            PropertyKey Constructor
            </summary>
            <param name="formatId">A unique GUID for the property</param>
            <param name="propertyId">Property identifier (PID)</param>
        </member>
        <member name="M:WSF.Shell.PropertyKey.#ctor(System.String,System.Int32)">
            <summary>
            PropertyKey Constructor
            </summary>
            <param name="formatId">A string represenstion of a GUID for the property</param>
            <param name="propertyId">Property identifier (PID)</param>
        </member>
        <member name="M:WSF.Shell.PropertyKey.Equals(WSF.Shell.PropertyKey)">
            <summary>
            Returns whether this object is equal to another. This is vital for performance of value types.
            </summary>
            <param name="other">The object to compare against.</param>
            <returns>Equality result.</returns>
        </member>
        <member name="M:WSF.Shell.PropertyKey.GetHashCode">
            <summary>
            Returns the hash code of the object. This is vital for performance of value types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WSF.Shell.PropertyKey.Equals(System.Object)">
            <summary>
            Returns whether this object is equal to another. This is vital for performance of value types.
            </summary>
            <param name="obj">The object to compare against.</param>
            <returns>Equality result.</returns>
        </member>
        <member name="M:WSF.Shell.PropertyKey.op_Equality(WSF.Shell.PropertyKey,WSF.Shell.PropertyKey)">
            <summary>
            Implements the == (equality) operator.
            </summary>
            <param name="propKey1">First property key to compare.</param>
            <param name="propKey2">Second property key to compare.</param>
            <returns>true if object a equals object b. false otherwise.</returns>        
        </member>
        <member name="M:WSF.Shell.PropertyKey.op_Inequality(WSF.Shell.PropertyKey,WSF.Shell.PropertyKey)">
            <summary>
            Implements the != (inequality) operator.
            </summary>
            <param name="propKey1">First property key to compare</param>
            <param name="propKey2">Second property key to compare.</param>
            <returns>true if object a does not equal object b. false otherwise.</returns>
        </member>
    </members>
</doc>
