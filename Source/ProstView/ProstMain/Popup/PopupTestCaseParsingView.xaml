<Window x:Class="ProstMain.Popup.PopupTestCaseParsingView"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
        xmlns:dragblz="http://dragablz.net/winfx/xaml/dragablz"
             xmlns:dialog="clr-namespace:ProstMain.Dialog"
             xmlns:util="clr-namespace:ProstMain.Util"
        AllowsTransparency="True"
             mc:Ignorable="d" Background="{DynamicResource ResourceKey=PopupBackground}" Height="230" Width="650" WindowStyle="None" WindowStartupLocation="CenterOwner" DataContext="{Binding Source={StaticResource Locator},Path=PopupTestCaseParsingVM}">

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBinding_CanExecute" Executed="CommandBinding_Executed_Close" />
    </Window.CommandBindings>
    <Window.Resources>
        <util:PathFullNameConvert x:Key="PathFullNameConvert"/>
    </Window.Resources>

    <materialDesign:DialogHost HorizontalAlignment="Stretch" VerticalAlignment="Stretch" OverlayBackground="Black" IsOpen="{Binding PopupTestCaseParsingModel.IsTestSpecConvertPopupOpen}">
        <materialDesign:DialogHost.DialogContent>
            <dialog:TestSpecConvertDialogView/>
        </materialDesign:DialogHost.DialogContent>
        <Grid>
            <GroupBox MouseLeftButtonDown="DockPanel_MouseDown">
                <GroupBox.Header>
                    <DockPanel LastChildFill="False">
                        <wpf:PackIcon Kind="Information" Foreground="Orange" VerticalAlignment="Center"/>
                        <TextBlock Text="Test Specification Parsing" Foreground="{DynamicResource ResourceKey=GroupBoxHeaderForeground}" Margin="8,0,0,0" FontWeight="Bold" VerticalAlignment="Center"/>
                        <Button Width="45" Style="{DynamicResource CloseButtonStyle}" WindowChrome.IsHitTestVisibleInChrome="True" HorizontalAlignment="Right" Command="{x:Static SystemCommands.CloseWindowCommand}"  DockPanel.Dock="Right"/>
                    </DockPanel>
                </GroupBox.Header>

                <Grid Margin="4">
                    <Grid Background="{DynamicResource ResourceKey=StandardBackground}" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="4*"/>
                        </Grid.ColumnDefinitions>


                        <Grid Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>

                            <Rectangle Grid.Row="1" Grid.Column="0" Margin="2" Stroke="{DynamicResource ResourceKey=PrimaryHueMidBrush}" StrokeThickness="2"/>

                            <materialDesign:ColorZone Mode="PrimaryMid" CornerRadius="8" Grid.Row="0" Grid.Column="0" VerticalAlignment="Stretch" Margin="3">
                                <Grid VerticalAlignment="Center">
                                    <TextBlock FontSize="15"  Text="Test Specification Path" Foreground="{DynamicResource ResourceKey=GroupBoxHeaderForeground}" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>
                            </materialDesign:ColorZone>

                            <Canvas ClipToBounds="True" Name="CANVAS_TestStatementPath" VerticalAlignment="Stretch" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" MouseMove="TEXTBLOCK_TestStatementPath_MouseMove" MouseLeave="TEXTBLOCK_TestStatementPath_MouseLeave" Margin="3">
                                <TextBlock Foreground="{DynamicResource ResourceKey=StandardTextForeground}" Canvas.Top="5" FontSize="17" TextWrapping="Wrap" x:Name="TEXTBLOCK_TestStatementPath" Text="{Binding PopupTestCaseParsingModel.TestStatement,Converter={StaticResource PathFullNameConvert}}" HorizontalAlignment="Stretch">
                                    <TextBlock.ToolTip>
                                        <ToolTip Content="{Binding PopupTestCaseParsingModel.TestStatement}"/>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </Canvas>


                            <Button Margin="3,0,3,0" Grid.Column="0" Grid.Row="2" Background="{DynamicResource ButtonBackground}" Foreground="{DynamicResource ResourceKey=ButtonForeground}" Command="{Binding TestStatementBrowserCommand}" Height="Auto">
                                <Button.Content>
                                    <materialDesign:PackIcon Kind="Search" Width="30" Height="30"/>

                                </Button.Content>
                            </Button>

                        </Grid>

                        <Button FontSize="15" Grid.Column="1" Background="Transparent" BorderBrush="Transparent" Foreground="{DynamicResource ResourceKey=ButtonForeground}" materialDesign:TransitionAssist.DisableTransitions="True"  materialDesign:ButtonProgressAssist.Value="-1" Command="{Binding ParserSelectCommand}" Height="Auto">

                            <Button.Content>
                                <Image RenderOptions.BitmapScalingMode="HighQuality" Margin="-30">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Setter Property="RenderTransformOrigin" Value="0,0"/>
                                            <Setter Property="Width" Value="70"/>
                                            <Setter Property="Height" Value="60"/>
                                            <Setter Property="Source" Value="/ProstMain;component/Resources/Convert_Icon.png"/>
                                            <Setter Property="LayoutTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="0"/>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PopupTestCaseParsingModel.IsTestCaseProduction}" Value="Running">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetProperty="(LayoutTransform).(RotateTransform.Angle)" 
                                                     From="0"
                                                     To="360"
                                                     Duration="0:0:1"
                                                     RepeatBehavior="Forever"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard FillBehavior="Stop">
                                                                <DoubleAnimation Storyboard.TargetProperty="(LayoutTransform).(RotateTransform.Angle)"
                                                     To="90"
                                                     Duration="0:0:0" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.ExitActions>

                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button.Content>
                        </Button>

                        <Grid Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <materialDesign:ColorZone Mode="PrimaryMid" CornerRadius="8" Grid.Row="0" VerticalAlignment="Stretch" Margin="3">
                                <Grid VerticalAlignment="Center">
                                    <TextBlock FontSize="15"  Text="Test Case Path" Foreground="{DynamicResource ResourceKey=GroupBoxHeaderForeground}" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>
                            </materialDesign:ColorZone>


                            <Rectangle Grid.Row="1" Margin="2" Stroke="{DynamicResource ResourceKey=PrimaryHueMidBrush}" StrokeThickness="2"/>

                            <Canvas ClipToBounds="True" Name="CANVAS_TestCasePath" VerticalAlignment="Stretch" Grid.Row="1" Margin="3" HorizontalAlignment="Stretch" MouseMove="TEXTBLOCK_TestCasePath_MouseMove" MouseLeave="TEXTBLOCK_TestCasePath_MouseLeave">
                                <TextBlock Foreground="{DynamicResource ResourceKey=StandardTextForeground}" Canvas.Top="5" FontSize="17" TextWrapping="Wrap" x:Name="TEXTBLOCK_TestCasePath" Text="{Binding PopupTestCaseParsingModel.TestcasePath,Converter={StaticResource PathFullNameConvert}}" HorizontalAlignment="Stretch">
                                    <TextBlock.ToolTip>
                                        <ToolTip Content="{Binding PopupTestCaseParsingModel.TestcasePath}"/>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </Canvas>

                            <Button Margin="3,0,3,0" Grid.Column="2" Grid.Row="2" Background="{DynamicResource ButtonBackground}" Foreground="{DynamicResource ResourceKey=ButtonForeground}" Command="{Binding TestCasePathBrowserCommand}" Height="Auto">
                                <Button.Content>
                                    <materialDesign:PackIcon Kind="Search" Width="30" Height="30"/>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </Grid>
                </Grid>
            </GroupBox>
        </Grid>
    </materialDesign:DialogHost>
</Window>



