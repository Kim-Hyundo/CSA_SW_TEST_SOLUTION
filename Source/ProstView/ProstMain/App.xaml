<Application x:Class="ProstMain.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d1p1:Ignorable="d" xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:VM="clr-namespace:ProstMain.ViewModel" xmlns:views="clr-namespace:ProstMain.View" xmlns:customviews="clr-namespace:ProstMain.CustomControl"
             xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz" xmlns:popup="clr-namespace:ProstMain.Popup" xmlns:materialdesign="http://materialdesigninxaml.net/winfx/xaml/themes" >
    <Application.Resources>
        
        <ResourceDictionary xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Card.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Flipper.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TreeView.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/Generic.xaml" />
                
                
                <ResourceDictionary>
                    <!-- include your primary palette -->
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Indigo.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <!--
                            include three hues from the primary palette (and the associated forecolours).
                            Do not rename, keep in sequence; light to dark.
                        -->
                    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="LightGreen"/>
                    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary100Foreground}"/>
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="#212121"/>
                    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}"/>
                    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="Red"/>
                    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary700Foreground}"/>
                </ResourceDictionary>

                <!-- secondary colour -->
                <ResourceDictionary>
                    <!-- include your secondary pallette -->
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Yellow.xaml"/>
                    </ResourceDictionary.MergedDictionaries>
                    

                    <!-- include a single secondary accent color (and the associated forecolour) -->

                    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="#007acc"/>
                    <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="{StaticResource Accent200Foreground}"/>

                    <SolidColorBrush x:Key="TrackBarButtonBackground" Color="#212121"/>
                    <SolidColorBrush x:Key="ButtonBackground" Color="#3f3f46"/>
                    <SolidColorBrush x:Key="ButtonForeground" Color="White"/>
                    <SolidColorBrush x:Key="MenuBarForeground" Color="LightGray"/>
                    <SolidColorBrush x:Key="StandardTextForeground" Color="White"/>
                    <SolidColorBrush x:Key="ContextMenuBackground" Color="#424242"/>
                    <SolidColorBrush x:Key="TopBarBackground" Color="#424242"/>
                    <SolidColorBrush x:Key="ToolBarBackground" Color="#424242"/>
                    <SolidColorBrush x:Key="StandardBackground" Color="#2d2d30"/>
                    <SolidColorBrush x:Key="GroupBoxHeaderForeground" Color="White"/>
                    <SolidColorBrush x:Key="GroupBoxHeaderBackground" Color="DimGray"/>

                    <SolidColorBrush x:Key="CheckBoxBackGroundColor" Color="White"/>
                    <SolidColorBrush x:Key="CheckBoxForgroundColor" Color="#cfcfcf"/>


                    <SolidColorBrush x:Key="GroupBoxHeaderGradient" Color="Black"/>

                    <SolidColorBrush x:Key="TextBoxBackGround" Color="Black"/>

                    <SolidColorBrush x:Key="DataGridBackGround" Color="#312f16"/>

                    <SolidColorBrush x:Key="PopupBackground" Color="#2d2d30"/>



                </ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/materialdesign.xaml"/>

            </ResourceDictionary.MergedDictionaries>
            
            


            <Style x:Key="CaptionButtonStyle" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="LayoutRoot" Background="Transparent" Width="44" Height="30">
                                <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" 
                                   Foreground="{DynamicResource StandardTextForeground}" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="LayoutRoot" Property="Background" Value="#E5E5E5"/>
                                    <Setter TargetName="txt" Property="Foreground" Value="#000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--Minimize-->
            <Style x:Key="MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                <Setter Property="Content" Value="&#xE949;"/>
            </Style>

            <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
                <Setter Property="Content" Value="&#xE106;"/>
            </Style>

            <Style TargetType="{x:Type dragablz:TabablzControl}"  BasedOn="{StaticResource MaterialDesignTabablzControlStyle}"/>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="CaretBrush" >
                    <Setter.Value>
                        <SolidColorBrush Color="Red"/>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="DataGridHeaderStyle" TargetType="DataGridColumnHeader" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="{DynamicResource ResourceKey=GroupBoxHeaderBackground}"/>
            </Style>
            <Style x:Key="DataGridCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Padding" Value="0,10,0,10"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="MinWidth" Value="50"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
            </Style>
            <!-- MVVM -->
            <VM:ViewModelLocator x:Key="Locator" d:IsDataSource="True"/>

            <DataTemplate DataType="{x:Type VM:ProjectExplorerViewModel}">
                <views:ProjectExplorerView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:MainViewModel}">
                <views:MainWindow/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:MenuBarViewModel}">
                <views:MenuBarView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:LoadingViewModel}">
                <views:LoadingView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:ProjectSettingViewModel}">
                <views:ProjectSettingView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:TargetHWSettingViewModel}">
                <views:TargetHWSettingView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:TargetSWSettingViewModel}">
                <views:TargetSWSettingView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:CompilerSettingViewModel}">
                <views:CompilerSettingView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:ReportSettingViewModel}">
                <views:ReportSettingView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:ETCSettingViewModel}">
                <views:ETCSettingView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:CommandViewModel}">
                <views:CommandView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:HistoryViewModel}">
                <customviews:HistoryView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:ToolbarViewModel}">
                <views:ToolbarView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:WorkSpaceViewModel}">
                <views:WorkSpaceView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:PopupTestStatusViewModel}">
                <popup:PopupTestStatusView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:PopupBuildStatusViewModel}">
                <popup:PopupBuildStatusView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type VM:PopupTestCaseParsingViewModel}">
                <popup:PopupTestCaseParsingView/>
            </DataTemplate>
            
            <DataTemplate x:Key="MaterialDesignStepNumberIconTemplate">
                <Border VerticalAlignment="Center" Style="{StaticResource MaterialDesignStepperCircle}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Path=Number}" Foreground="Black" />
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="MaterialDesignStepDoneIconTemplate">
                <Border VerticalAlignment="Center" Style="{StaticResource MaterialDesignStepperCircle}" Background="LightGreen">
                    <materialdesign:PackIcon Kind="Done" Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black" />
                </Border>
            </DataTemplate>
            <Style x:Key="MaterialDesignStepperCircle" TargetType="{x:Type Border}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
                        <Setter Property="Background" Value="White" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IsActive}" Value="True">
                        <Setter Property="Background" Value="White" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="CornerRadius" Value="12" />
                <Setter Property="Height" Value="24" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Width" Value="24" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>